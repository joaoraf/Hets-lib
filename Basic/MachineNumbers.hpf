use Basic/MachineNumbers

dg-all auto

# ------------------------------------------------------------------------------

dg basic INTEGER_E1
prover SPASS
set goals divide_INTEGER_dom
prove

prover Vampire
set goals ga_right_unit___+___2 ga_left_unit___+___2 ga_right_unit___*___2 ga_left_unit___*___2
set time-limit 40
prove

drop-translations
translate CASL2PCFOL
translate CASL2SubCFOL
translate CASL2SoftFOLInduction
prover MathServe Broker
set goals ga_assoc___+___2 ga_comm___+___2 ga_left_comm___+___2 ga_assoc___*___2 ga_comm___*___2 minus_INTEGER_dom abs_INTEGER_dom sub_INTEGER_dom mult_INTEGER_dom div_INTEGER_dom mod_INTEGER_dom quot_INTEGER_dom rem_INTEGER_dom
set time-limit 40
prove

# ------------------------------------------------------------------------------

dg basic CARDINAL_E1
prover Vampire
set goals ga_assoc___+___1 ga_comm___+___1 ga_left_comm___+___1 ga_right_unit___+___1 ga_left_unit___+___1  ga_assoc___*___1 ga_right_unit___*___1 ga_left_unit___*___1 ga_left_comm___*___1 sub_CARDINAL_dom div_CARDINAL_dom mod_CARDINAL_dom
prove

drop-translations
translate CASL2PCFOL
translate CASL2SubCFOL
translate CASL2SoftFOLInduction
prover MathServe Broker
set goals ga_comm___*___1 add_CARDINAL_dom mult_CARDINAL_dom
prove

# ------------------------------------------------------------------------------

dg basic TotalOrder_in_INTEGER_T
translate CASL2PCFOL
translate CASL2SubCFOL
translate CASL2SoftFOLInduction
prover MathServe Broker
prove-all

# ------------------------------------------------------------------------------

dg basic TotalOrder_in_CARDINAL_T
translate CASL2PCFOL
translate CASL2SubCFOL
translate CASL2SoftFOLInduction
prover Vampire
set goals dichotomy_TotalOrder refl
prove

drop-translations
prover Vampire
set goals antisym trans
set time-limit 40
prove

# ------------------------------------------------------------------------------

dg basic TotalOrder_in_TwoComplement_T
translate CASL2PCFOL
translate CASL2SubCFOL
translate CASL2SoftFOLInduction
prover Vampire
prove-all

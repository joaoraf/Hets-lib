use Basic/StructuredDatatypes

dg-all auto

# ------------------------------------------------------------------------------

dg basic BooleanAlgebra_E1
prover SPASS
prove-all

# ------------------------------------------------------------------------------

dg basic PowerSet
prover SPASS
prove-all

# ------------------------------------------------------------------------------

dg basic PartialOrder_in_Set_T
prover MathServe Broker
prove-all

# ------------------------------------------------------------------------------

dg basic PartialOrder_in_Bag_T
prover MathServe Broker
set goals refl
prove

# ------------------------------------------------------------------------------

dg basic Set_E2
prover SPASS
set goals ga_right_unit___union__
prove

# ------------------------------------------------------------------------------

dg basic List_E2
prover SPASS
set goals ga_selector_front ga_disjoint_[]___+__
prove

# ------------------------------------------------------------------------------

dg basic BooleanAlgebra_in_PowerSet_T
prover SPASS
set goals zeroAndCap distr1_BooleanAlgebra
prove

# ------------------------------------------------------------------------------

dg basic Map
prover Vampire
set goals lookup_dom
prove

# ------------------------------------------------------------------------------

dg basic Monoid_in_List_T
prover SPASS
set goals ga_left_unit___*___73
prove

drop-translations
translate CASL2SubCFOL
translate CASL2SoftFOLInduction
prover MathServe Broker
set goals ga_right_unit___*___74
set time-limit 40
prove

library Calculi/Algebra/RelationAlgebraRepresentation

version 0.1
%author: S. Wölfl
%date: 08-02-2005

%( 
    This library defines some basic higher order concepts from the 
    theory of relation algebras (cf., for example, I. Hodkinson, Atom
    structures of relation algebras, 1995).
)%

from HasCASL/Set get Set
from Basic/RelationsAndOrders get BooleanAlgebra
from Calculi/Algebra/RelationAlgebra get RelationAlgebra,
	ExtRelationAlgebraByPartialOrder, RelationAlgebraWithPartialOrder,
	AtomicRelationAlgebra
from Calculi/Algebra/Auxiliary get BooleanAlgebraWithCompl

logic HasCASL


spec RepresentationOfRelationAlgebra [RelationAlgebra] =
     Set 
then
     sort Dom
     op int: Rel -> Set (Dom * Dom)

     forall r,s:Rel;x,y:Dom	
     . not (x,y) isIn int(0)
     . (x,y) isIn int(r cup s) <=> (x,y) isIn int(r) \/ (x,y) isIn int(s)
     . (x,y) isIn int(r cap s) <=> (x,y) isIn int(r) /\ (x,y) isIn int(s)
     . (x,y) isIn int(1) => ((x,y) isIn int(compl(r)) <=> not (x,y) isIn int(r))
     . (x,y) isIn int(id:Rel)  <=> x = y
     . (x,y) isIn int(conv(r)) <=> (y,x) isIn int(r)
     . (x,y) isIn int(r cmps s) <=> (exists z:Dom . (x,z) isIn int(r) /\ (z,y) isIn int(s))
end


spec CompleteRepresentationOfRelationAlgebra [RelationAlgebraWithPartialOrder] =
     RepresentationOfRelationAlgebra [RelationAlgebra] 
then
     forall x,y:Dom
     . (x,y) isIn int(1:Rel) => (exists r:Rel . Atom(r) /\ (x,y) isIn int(r))
then %implies
     AtomicRelationAlgebra	
end


spec BinaryRelationAlgebra[sort Elem] = 
     Set
then 
     sort Rel < Set(Elem*Elem)
then 
     { BooleanAlgebra with sort Elem |-> Rel, 
	ops 0 |-> emptySet, 1 |-> allSet, 
	  __cap__ |-> __intersection__, __cup__ |-> __union__ }
and 
     ops 
	__cmps__:Rel*Rel -> Rel;
	conv__:Rel -> Rel
	%% etc
end



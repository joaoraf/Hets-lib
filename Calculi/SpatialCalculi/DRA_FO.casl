library DRA_FO
version 0.1
%author: T. Soller
%date: 05-11-04
%% Dipol Calculi DRAx(x) -- First order theory



spec BasicDRAc_FO = 

sorts Point, Dipol

ops
	startP : Dipol -> Point; %(start point of dipol)%
	endP :   Dipol -> Point  %(  end point of dipol)%
	
preds
	__r__ : Dipol * Point; %(point right of dipol)%
	__l__ : Dipol * Point; %(point left of dipol)%
	__e__ : Dipol * Point; %(point endpoint of dipol)%
	__s__ : Dipol * Point; %(point startpoint of dipol)%

	%% 14 basic relations
	__rrrr__, __rrrl__, __rrlr__, __rrll__, __rlrr__, __rllr__, __rlll__,
	__lrrr__, __lrrl__, __lrll__, __llrr__, __llrl__, __lllr__, 
	__llll__ : Dipol * Dipol;  
	
	%% 10 relations for algebra
	__ells__, __errs__, __lere__, __rele__, __slsr__, __srsl__, __lsel__,
	__rser__, __sese__, __eses__ : Dipol * Dipol;

then %def
	
forall A,B : Dipol

. A rrrr B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A rrrl B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A rrlr B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A rrll B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B l startP(A)) /\ (B l endP(A))
. A rlrr B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A rllr B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A)) 
. A rlll B <=> (A r startP(B)) /\ (A l endP(B)) /\ 
	        (B l startP(A)) /\ (B l endP(A))
. A lrrr B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A lrrl B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A lrll B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A llrr B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A llrl B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A lllr B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B r endP(A))
. A llll B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
	        (B l startP(A)) /\ (B l endP(A))
	
. A ells B <=> (A e startP(B)) /\ (A l endP(B)) /\ 
	        (B l startP(A)) /\ (B s endP(A))
. A errs B <=> (A e startP(B)) /\ (A r endP(B)) /\ 
	        (B r startP(A)) /\ (B s endP(A))
. A lere B <=> (A l startP(B)) /\ (A e endP(B)) /\ 
	        (B r startP(A)) /\ (B e endP(A))
. A rele B <=> (A r startP(B)) /\ (A e endP(B)) /\ 
	        (B l startP(A)) /\ (B e endP(A))
. A slsr B <=> (A s startP(B)) /\ (A l endP(B)) /\ 
	        (B s startP(A)) /\ (B r endP(A))
. A srsl B <=> (A s startP(B)) /\ (A r endP(B)) /\ 
	        (B s startP(A)) /\ (B l endP(A))
. A lsel B <=> (A l startP(B)) /\ (A s endP(B)) /\ 
	        (B e startP(A)) /\ (B l endP(A))
. A rser B <=> (A r startP(B)) /\ (A s endP(B)) /\ 
	        (B e startP(A)) /\ (B r endP(A))
. A sese B <=> (A s startP(B)) /\ (A e endP(B)) /\ 
	        (B s startP(A)) /\ (B e endP(A))
. A eses B <=> (A e startP(B)) /\ (A s endP(B)) /\ 
	        (B e startP(A)) /\ (B s endP(A))

end


spec DRAc_FO =

     BasicDRAc_FO

then %implies

forall A,B,C : Dipol

%% reflexive
. A sese A

%% symmetric relations
. A rrrr B <=> B rrrr A
. A llll B <=> B llll A

. A sese B <=> B sese A
. A eses B <=> B eses A

%% converses
. A rrll B <=> B llrr A
. A rlrr B <=> B rrrl A
. A lrrr B <=> B rrlr A 
. A lrrl B <=> B rllr A
. A llrl B <=> B rlll A
. A lllr B <=> B lrll A

. A lsel B <=> B ells A
. A rser B <=> B errs A
. A rele B <=> B lere A
. A srsl B <=> B slsr A

%% transitive relations
. (A sese B /\ B sese C) => A sese C

end



spec BasicDRAf_FO =

     BasicDRAc_FO

then

preds
	__b__ : Dipol * Point; %(point in line back of dipol)%
	__i__ : Dipol * Point; %(point in line interior of dipol)%
	__f__ : Dipol * Point; %(point in line front of dipol)%

	%% DRAf Relations: same line and same direction -> Allen's calculus
	__ffbb__, __efbs__, __ifbi__, __bfii__, __sfsi__, __beie__, __bbff__,
	__bsef__, __biif__, __iibf__, __sisf__, __iebe__ : Dipol * Dipol;
	
	%% Coverses
	__ffff__, __fefe__, __fifi__, __fbii__, __fsei__, __ebis__, __iifb__,
	__eifs__, __iseb__, __bbbb__, __sbsb__, __ibib__ : Dipol * Dipol;
	
	%% further relations DRAf
	__lllb__, __llfl__, __llbr__, __llrf__, __lirl__, __lfrr__, __lril__,
	__lrri__, __blrr__, __irrl__, __frrr__, __rbrr__ : Dipol * Dipol;
	
	%% Converses
	__lbll__, __flll__, __brll__, __rfll__, __rlli__, __rrlf__, __illr__,
	__rilr__, __rrbl__, __rlir__, __rrfr__, __rrrb__ : Dipol * Dipol

then %def
	
forall A,B : Dipol
	
. A ffbb B <=> (A f startP(B)) /\ (A f endP(B)) /\ 
	        (B b startP(A)) /\ (B b endP(A))
. A efbs B <=> (A e startP(B)) /\ (A f endP(B)) /\ 
	        (B b startP(A)) /\ (B s endP(A))
. A ifbi B <=> (A i startP(B)) /\ (A f endP(B)) /\ 
	        (B b startP(A)) /\ (B i endP(A))
. A bfii B <=> (A b startP(B)) /\ (A f endP(B)) /\ 
	        (B i startP(A)) /\ (B i endP(A))
. A sfsi B <=> (A s startP(B)) /\ (A f endP(B)) /\ 
	        (B s startP(A)) /\ (B i endP(A))
. A beie B <=> (A b startP(B)) /\ (A e endP(B)) /\ 
	        (B i startP(A)) /\ (B e endP(A))
. A bbff B <=> (A b startP(B)) /\ (A b endP(B)) /\ 
	        (B f startP(A)) /\ (B f endP(A))
. A bsef B <=> (A b startP(B)) /\ (A s endP(B)) /\ 
	        (B e startP(A)) /\ (B f endP(A))
. A biif B <=> (A b startP(B)) /\ (A i endP(B)) /\ 
	        (B i startP(A)) /\ (B f endP(A))
. A iibf B <=> (A i startP(B)) /\ (A i endP(B)) /\ 
	        (B b startP(A)) /\ (B f endP(A))
. A sisf B <=> (A s startP(B)) /\ (A i endP(B)) /\ 
	        (B s startP(A)) /\ (B f endP(A))
. A iebe B <=> (A i startP(B)) /\ (A e endP(B)) /\ 
	        (B b startP(A)) /\ (B e endP(A))
	
. A ffff B <=> (A f startP(B)) /\ (A f endP(B)) /\ 
	        (B f startP(A)) /\ (B f endP(A))
. A fefe B <=> (A f startP(B)) /\ (A e endP(B)) /\ 
	        (B f startP(A)) /\ (B e endP(A))
. A fifi B <=> (A f startP(B)) /\ (A i endP(B)) /\
	        (B f startP(A)) /\ (B i endP(A))
. A fbii B <=> (A f startP(B)) /\ (A b endP(B)) /\ 
	        (B i startP(A)) /\ (B i endP(A))
. A fsei B <=> (A f startP(B)) /\ (A s endP(B)) /\ 
	        (B e startP(A)) /\ (B i endP(A))
. A ebis B <=> (A e startP(B)) /\ (A b endP(B)) /\ 
		(B i startP(A)) /\ (B s endP(A))
. A iifb B <=> (A i startP(B)) /\ (A i endP(B)) /\ 
		(B f startP(A)) /\ (B b endP(A))
. A eifs B <=> (A e startP(B)) /\ (A i endP(B)) /\ 
		(B f startP(A)) /\ (B s endP(A))
. A iseb B <=> (A i startP(B)) /\ (A s endP(B)) /\ 
		(B e startP(A)) /\ (B b endP(A))
. A bbbb B <=> (A b startP(B)) /\ (A b endP(B)) /\ 
		(B b startP(A)) /\ (B b endP(A))
. A sbsb B <=> (A s startP(B)) /\ (A b endP(B)) /\ 
		(B s startP(A)) /\ (B b endP(A))
. A ibib B <=> (A i startP(B)) /\ (A b endP(B)) /\ 
		(B i startP(A)) /\ (B b endP(A))
	
. A lllb B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B l startP(A)) /\ (B b endP(A))
. A llfl B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B f startP(A)) /\ (B l endP(A))
. A llbr B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B b startP(A)) /\ (B r endP(A))
. A llrf B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B r startP(A)) /\ (B f endP(A))
. A lirl B <=> (A l startP(B)) /\ (A i endP(B)) /\ 
		(B r startP(A)) /\ (B l endP(A))
. A lfrr B <=> (A l startP(B)) /\ (A f endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A))
. A lril B <=> (A l startP(B)) /\ (A r endP(B)) /\ 
		(B i startP(A)) /\ (B l endP(A))
. A lrri B <=> (A l startP(B)) /\ (A r endP(B)) /\ 
		(B r startP(A)) /\ (B i endP(A))
. A blrr B <=> (A b startP(B)) /\ (A l endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A))
. A irrl B <=> (A i startP(B)) /\ (A r endP(B)) /\ 
		(B r startP(A)) /\ (B l endP(A))
. A frrr B <=> (A f startP(B)) /\ (A r endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A))
. A rbrr B <=> (A r startP(B)) /\ (A b endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A))
	
. A lbll B <=> (A l startP(B)) /\ (A b endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A))
. A flll B <=> (A f startP(B)) /\ (A l endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A))
. A brll B <=> (A b startP(B)) /\ (A r endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A))
. A rfll B <=> (A r startP(B)) /\ (A f endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A))
. A rlli B <=> (A r startP(B)) /\ (A l endP(B)) /\ 
		(B l startP(A)) /\ (B i endP(A))
. A rrlf B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B l startP(A)) /\ (B f endP(A))
. A illr B <=> (A i startP(B)) /\ (A l endP(B)) /\ 
		(B l startP(A)) /\ (B r endP(A))
. A rilr B <=> (A r startP(B)) /\ (A i endP(B)) /\ 
		(B l startP(A)) /\ (B r endP(A))
. A rrbl B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B b startP(A)) /\ (B l endP(A))
. A rlir B <=> (A r startP(B)) /\ (A l endP(B)) /\ 
		(B i startP(A)) /\ (B r endP(A))
. A rrfr B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B f startP(A)) /\ (B r endP(A))
. A rrrb B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B r startP(A)) /\ (B b endP(A))
	
end


spec DRAf_FO =

     BasicDRAf_FO and DRAc_FO

then %implies

forall A,B,C : Dipol

%% symmetric relations
. A ffff B <=> B ffff B
. A fefe B <=> B fefe A
. A fifi B <=> B fifi A
. A bbbb B <=> B bbbb A
. A sbsb B <=> B sbsb A
. A ibib B <=> B ibib A 

%% coverses
. A ffbb B <=> B bbff A
. A efbs B <=> B bsef A
. A ifbi B <=> B biif A
. A bfii B <=> B iibf A
. A sfsi B <=> B sisf A
. A beie B <=> B iebe A
. A fbii B <=> B iifb A
. A fsei B <=> B eifs A
. A ebis B <=> B iseb A

. A lllb B <=> B lbll A
. A llfl B <=> B flll A
. A llbr B <=> B brll A
. A llrf B <=> B rfll A
. A lirl B <=> B rlli A
. A lfrr B <=> B rrlf A
. A lril B <=> B illr A
. A lrri B <=> B rilr A
. A blrr B <=> B rrbl A
. A irrl B <=> B rlir A
. A frrr B <=> B rrfr A
. A rbrr B <=> B rrrb A

%% transitive relations
. (A ffbb B /\ B ffbb C) => A ffbb C
. (A bbff B /\ B bbff C) => A bbff C

end


	
spec DRAfp_FO =

     DRAf_FO
	hide preds __rrrr__, __rrll__, __llrr__, __llll__ : Dipol * Dipol  
	with preds __rrrl__|->__rrrln__, __rrlr__|->__rrlrp__,
		   __rlrr__|->__rlrrp__, __rllr__|->__rllrp__,
		   __rlll__|->__rlllp__, __lrrr__|->__lrrrn__,
		   __lrrl__|->__lrrln__, __lrll__|->__lrlln__,
		   __llrl__|->__llrln__, __lllr__|->__lllrp__,
		   __ells__|->__ellsp__, __errs__|->__errsn__,
		   __lere__|->__leren__, __rele__|->__relep__,
		   __slsr__|->__slsrp__, __srsl__|->__srsln__,
		   __lsel__|->__lseln__, __rser__|->__rserp__,
		   __sese__|->__seseP__, __eses__|->__esesA__,
		   __ffbb__|->__ffbbP__, __efbs__|->__efbsP__,
		   __ifbi__|->__ifbiP__, __bfii__|->__bfiiP__,
		   __sfsi__|->__sfsiP__, __beie__|->__beieP__,
		   __bbff__|->__bbffP__, __bsef__|->__bsefP__,
		   __biif__|->__biifP__, __iibf__|->__iibfP__,
		   __sisf__|->__sisfP__, __iebe__|->__iebeP__,
		   __ffff__|->__ffffA__, __fefe__|->__fefeA__,
		   __fifi__|->__fifiA__, __fbii__|->__fbiiA__,
		   __fsei__|->__fseiA__, __ebis__|->__ebisA__,
		   __iifb__|->__iifbA__, __eifs__|->__eifsA__,
		   __iseb__|->__isebA__, __bbbb__|->__bbbbA__,
		   __sbsb__|->__sbsbA__, __ibib__|->__ibibA__,
		   __lllb__|->__lllbp__, __llfl__|->__llfln__,
		   __llbr__|->__llbrp__, __llrf__|->__llrfn__,
		   __lirl__|->__lirlp__, __lfrr__|->__lfrrn__,
		   __lril__|->__lriln__, __lrri__|->__lrrip__,
		   __blrr__|->__blrrn__, __irrl__|->__irrln__,
		   __frrr__|->__frrrp__, __rbrr__|->__rbrrp__,
		   __lbll__|->__lblln__, __flll__|->__flllp__,
		   __brll__|->__brlln__, __rfll__|->__rfllp__,
		   __rlli__|->__rllin__, __rrlf__|->__rrlfp__,
		   __illr__|->__illrp__, __rilr__|->__rilrn__,
		   __rrbl__|->__rrblp__, __rlir__|->__rlirp__,
		   __rrfr__|->__rrfrn__, __rrrb__|->__rrrbn__

then

preds
	__angleA__ : Dipol * Dipol; %(antiparallel)%
	__angleP__ : Dipol * Dipol; %(parallel)%
	__anglep__ : Dipol * Dipol; %(positive = counterclockwise)%
	__anglen__ : Dipol * Dipol; %(negative = clockwise)%

	%% the 4 expanded relations
	__rrrrp__, __rrrrA__, __rrrrn__, __rrllp__, __rrllP__, __rrlln__, 
	__llrrp__, __llrrP__, __llrrn__, __llllp__, __llllA__, 
	__lllln__ : Dipol * Dipol;
	
then %def
	
forall A,B : Dipol

%% the definition of the expanded relations

. A rrrrp B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A)) /\ (A anglep B) 
. A rrrrA B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A)) /\ (A angleA B)
. A rrrrn B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A)) /\ (A anglen B)
. A rrllp B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A)) /\ (A anglep B)
. A rrllP B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A)) /\ (A angleP B)
. A rrlln B <=> (A r startP(B)) /\ (A r endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A)) /\ (A anglen B)
. A llrrp B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A)) /\ (A anglep B)
. A llrrP B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A)) /\ (A angleP B)
. A llrrn B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B r startP(A)) /\ (B r endP(A)) /\ (A anglen B)
. A llllp B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A)) /\ (A anglep B)
. A llllA B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A)) /\ (A angleA B)
. A lllln B <=> (A l startP(B)) /\ (A l endP(B)) /\ 
		(B l startP(A)) /\ (B l endP(A)) /\ (A anglen B)

then %implies

forall A,B,C : Dipol

%% jointly exhaustive
. A rrrrp B \/ A rrrrA B \/ A rrrrn B \/ A rrllp B \/ A rrllP B \/ A rrlln B
	    \/ A llrrp B \/ A llrrP B \/ A llrrn B \/ A llllp B \/ A llllA B
	    \/ A lllln B \/ A rrrln B \/ A rrlrp B \/ A rlrrp B \/ A rllrp B
	    \/ A rlllp B \/ A lrrrn B \/ A lrrln B \/ A lrlln B \/ A llrln B
	    \/ A lllrp B \/ A ellsp B \/ A errsn B \/ A leren B \/ A relep B
	    \/ A slsrp B \/ A srsln B \/ A lseln B \/ A rserp B \/ A seseP B
	    \/ A esesA B \/ A ffbbP B \/ A efbsP B \/ A ifbiP B \/ A bfiiP B
	    \/ A sfsiP B \/ A beieP B \/ A bbffP B \/ A bsefP B \/ A biifP B
	    \/ A iibfP B \/ A sisfP B \/ A iebeP B \/ A ffffA B \/ A fefeA B
	    \/ A fifiA B \/ A fbiiA B \/ A fseiA B \/ A ebisA B \/ A iifbA B
	    \/ A eifsA B \/ A isebA B \/ A bbbbA B \/ A sbsbA B \/ A ibibA B
	    \/ A lllbp B \/ A llfln B \/ A llbrp B \/ A llrfn B \/ A lirlp B
	    \/ A lfrrn B \/ A lriln B \/ A lrrip B \/ A blrrn B \/ A irrln B
	    \/ A frrrp B \/ A rbrrp B \/ A lblln B \/ A flllp B \/ A brlln B
	    \/ A rfllp B \/ A rllin B \/ A rrlfp B \/ A illrp B \/ A rilrn B
	    \/ A rrblp B \/ A rlirp B \/ A rrfrn B \/ A rrrbn B

%% disjunct 
%%. A rrrrp B => not (A rrrrA B)
%%. A rrrrp B => not (A rrrrn B)
%% ...
%%. A rrrrp B => not (A rrrbn B)
%%. A rrrrA B => not (A rrrrn B)
%% ...
%%. A rrfrn B => not (A rrrbn B)
%% 79*80/2 lines: too hard to write in FOL ;-)

%% disjunct alternative version
. A rrrrp B => not (A rrrrA B \/ A rrrrn B \/ A rrllp B \/ A rrllP B \/ 
		    A rrlln B \/ A llrrp B \/ A llrrP B \/ A llrrn B \/ 
		    A llllp B \/ A llllA B \/ A lllln B \/ A rrrln B \/ 
		    A rrlrp B \/ A rlrrp B \/ A rllrp B \/ A rlllp B \/
		    A lrrrn B \/ A lrrln B \/ A lrlln B \/ A llrln B \/ 
		    A lllrp B \/ A ellsp B \/ A errsn B \/ A leren B \/ 
		    A relep B \/ A slsrp B \/ A srsln B \/ A lseln B \/ 
		    A rserp B \/ A seseP B \/ A esesA B \/ A ffbbP B \/ 
		    A efbsP B \/ A ifbiP B \/ A bfiiP B \/ A sfsiP B \/ 
		    A beieP B \/ A bbffP B \/ A bsefP B \/ A biifP B \/ 
		    A iibfP B \/ A sisfP B \/ A iebeP B \/ A ffffA B \/ 
		    A fefeA B \/ A fifiA B \/ A fbiiA B \/ A fseiA B \/ 
		    A ebisA B \/ A iifbA B \/ A eifsA B \/ A isebA B \/ 
		    A bbbbA B \/ A sbsbA B \/ A ibibA B \/ A lllbp B \/ 
		    A llfln B \/ A llbrp B \/ A llrfn B \/ A lirlp B \/ 
		    A lfrrn B \/ A lriln B \/ A lrrip B \/ A blrrn B \/ 
		    A irrln B \/ A frrrp B \/ A rbrrp B \/ A lblln B \/ 
		    A flllp B \/ A brlln B \/ A rfllp B \/ A rllin B \/ 
		    A rrlfp B \/ A illrp B \/ A rilrn B \/ A rrblp B \/ 
		    A rlirp B \/ A rrfrn B \/ A rrrbn B)

. A rrrrA B => not (A rrrrp B \/ A rrrrn B \/ A rrllp B \/ A rrllP B \/ 
		    A rrlln B \/ A llrrp B \/ A llrrP B \/ A llrrn B \/ 
		    A llllp B \/ A llllA B \/ A lllln B \/ A rrrln B \/ 
		    A rrlrp B \/ A rlrrp B \/ A rllrp B \/ A rlllp B \/ 
		    A lrrrn B \/ A lrrln B \/ A lrlln B \/ A llrln B \/ 
		    A lllrp B \/ A ellsp B \/ A errsn B \/ A leren B \/ 
		    A relep B \/ A slsrp B \/ A srsln B \/ A lseln B \/ 
		    A rserp B \/ A seseP B \/ A esesA B \/ A ffbbP B \/ 
		    A efbsP B \/ A ifbiP B \/ A bfiiP B \/ A sfsiP B \/ 
		    A beieP B \/ A bbffP B \/ A bsefP B \/ A biifP B \/ 
		    A iibfP B \/ A sisfP B \/ A iebeP B \/ A ffffA B \/ 
		    A fefeA B \/ A fifiA B \/ A fbiiA B \/ A fseiA B \/ 
		    A ebisA B \/ A iifbA B \/ A eifsA B \/ A isebA B \/ 
		    A bbbbA B \/ A sbsbA B \/ A ibibA B \/ A lllbp B \/ 
		    A llfln B \/ A llbrp B \/ A llrfn B \/ A lirlp B \/ 
		    A lfrrn B \/ A lriln B \/ A lrrip B \/ A blrrn B \/ 
		    A irrln B \/ A frrrp B \/ A rbrrp B \/ A lblln B \/ 
		    A flllp B \/ A brlln B \/ A rfllp B \/ A rllin B \/ 
		    A rrlfp B \/ A illrp B \/ A rilrn B \/ A rrblp B \/ 
		    A rlirp B \/ A rrfrn B \/ A rrrbn B)
%%...
%% 80 times => 80 LONG lines (or 80*20 shorter ones): too hard to write in FOL ;-)

%% symmetric relations
. A rrrrA B <=> B rrrrA A
. A llllA B <=> B llllA A

%% converses
. A rrrrp B <=> B rrrrn A
. A rrllp B <=> B llrrn A
. A rrllP B <=> B llrrP A
. A llrrp B <=> B rrlln A
. A llllp B <=> B lllln A

%% transitive relations
. (A rrllP B /\ B rrllP C) => A rrllP C
. (A llrrP B /\ B llrrP C) => A llrrP C

%% some compostions

%%. (A seseP B /\ B rrrrp C) => A rrrrp C
%%. (A seseP B /\ B rrrrA C) => A rrrrA C
%% ... for 79 relations: too hard to write in FOL ;-)
%%. (A rrrrp B /\ B seseP C) => A rrrrp C
%%. (A rrrrA B /\ B seseP C) => A rrrrA C
%% ... for 79 relations: too hard to write in FOL ;-)

end


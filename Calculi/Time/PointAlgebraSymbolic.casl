library Calculi/Time/PointAlgebraSymbolic
version 0.1
%% author: S. Wölfl
%% date: 07-02-2005
%% 

%left_assoc __cup__,__cap__
%prec {__cup__} < {__cmps__}


from Calculi/Algebra/RelationAlgebra get AtomicRelationAlgebra
from Calculi/Algebra/RelationAlgebraSymbolic get SetRepresentationOfRelations,
	RelationBase, GenerateRelationAlgebra
from Calculi/Time/PointAlgebraCompositionTables get 
	CompositionTableOfPointAlgebraLin, 
	CompositionTableOfPointAlgebraBr
from Calculi/Time/PointAlgebra get BaseRelationsOfPointAlgebraLin,
	BaseRelationsOfPointAlgebraBr



%( 
	The Point Algebra for linear flows of time 
     
     The Point Algebra for linear flows of time has three base relations,
     namely, pre ("earlier"), suc ("later"), and id ("identical").
)%



spec RelationBaseOfPointAlgebraLin = %mono 
     SetRepresentationOfRelations[BaseRelationsOfPointAlgebraLin]
and
     CompositionTableOfPointAlgebraLin with  ops < |-> pre, > |-> suc, i |-> id
end 


view RelationBaseOfPointAlgebraLin_as_RelationBase[BaseRelationsOfPointAlgebraLin] :
     RelationBase[sort BaseRel] to RelationBaseOfPointAlgebraLin
end


spec PointAlgebraLin = 
     GenerateRelationAlgebra [RelationBaseOfPointAlgebraLin]  
end


view PointAlgebraLin_as_AtomicRelationAlgebra :
     AtomicRelationAlgebra to 
     { PointAlgebraLin	then %def
	preds 
		__<__,__<=__,__>__,__>=__:Rel*Rel
	forall x,y:Rel
	. x < y  <=> x isSubsetOf y /\ not x = y
	. x <= y <=> x isSubsetOf y
	. x > y  <=> y isSubsetOf x /\ not x = y
	. x >= y <=> y isSubsetOf x
     }
=
     Rel |-> Rel , AtomRel |-> BaseRel
end





spec RelationBaseOfPointAlgebraBr = %mono
     SetRepresentationOfRelations[BaseRelationsOfPointAlgebraBr] 
and  
     { CompositionTableOfPointAlgebraBr with ops < |-> pre, > |-> suc, i |-> id , u |-> un }
end 


view RelationBaseOfPointAlgebraBr_as_RelationBase[BaseRelationsOfPointAlgebraBr] :
     RelationBase[sort BaseRel] to RelationBaseOfPointAlgebraBr
end


spec PointAlgebraBr =
     GenerateRelationAlgebra [RelationBaseOfPointAlgebraBr] 
end


view PointAlgebraBr_as_AtomicRelationAlgebra :
     AtomicRelationAlgebra to 
     { PointAlgebraBr	then %def
	preds 
		__<__,__<=__,__>__,__>=__:Rel*Rel
	forall x,y:Rel
	. x < y  <=> x isSubsetOf y /\ not x = y
	. x <= y <=> x isSubsetOf y
	. x > y  <=> y isSubsetOf x /\ not x = y
	. x >= y <=> y isSubsetOf x
     }
=
     Rel |-> Rel , AtomRel |-> BaseRel
end

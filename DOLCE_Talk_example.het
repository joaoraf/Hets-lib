library DOLCE_Talk_example

spec Mereo_FOL =
  sort s
  pred P : s * s
  pred PP(x,y:s) <=> P(x,y) /\ not P(y,x);  
       At(x:s)     <=> not (exists y:s . PP(y,x)); 
  forall x,y,z:s
  . P(x,x) 
  . (P(x,y) /\ P(y,x)) => x = y 
  . (P(x,y) /\ P(y,z)) => P(x,z) 
  . exists z:s . At(z) /\ P(z,x)                        
then %implies
     forall x:s
     . At(x) <=> forall y':s . P(y',x) => x = y' 
end

spec Mereo_DL =
  sort s
  pred P,PP: s * s;
       PP_i(x,y:s) <=> PP(y,x); 
       At(x:s)     <=> not (exists y:s . PP_i(x,y)); 
  forall x,y,z:s
  . PP(x,y) => P(x,y)   
  . (PP(x,y) /\ PP(y,z)) => PP(x,z) 
  . (P(x,y) /\ P(y,z)) => P(x,z) 
end

view Approximation_Proof : Mereo_DL to 
  { Mereo_FOL then pred PP_i(x,y:s) <=> PP(y,x) 
} end
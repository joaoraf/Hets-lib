library HasCASL/Complex
version 0.2

%author: L. Schroeder
%date: 02-05-2008

from Basic/Algebra_I get
        Field |-> BasicField, ExtField |-> BasicExtField

from HasCASL/Real get 
     Real

logic HasCASL

spec ConstructComplex = Real then
 free type Complex ::= __ + __ i (Re: Real; Im: Real)
 ops __+__, __*__: Complex * Complex -> Complex
 sort Real < Complex
 var x:Real
 . x = x + 0i
 var x,y,z,w: Real
 . (x + y i) + (z + w i) = ((x + z) + (y + w)i)
 . (x + y i) * (z + w i) = ((x*z - y*w) + (y*z + x*w)i)

view ConstructComplex_as_Field:
     BasicField to ConstructComplex =
  Elem |-> Complex, e |-> 1

%%spec  Complex = BasicExtField[view ConstructComplex_as_Field]

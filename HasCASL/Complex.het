library HasCASL/Complex
version 0.2

%author: L. Schroeder
%date: 02-05-2008

from Basic/Algebra_I get
        Field |-> BasicField, ExtField |-> BasicExtField

from HasCASL/Real get
     Real

logic HasCASL

spec ConstructComplex = Real then
 free type Complex ::= complex(Re: Real; Im: Real)
 ops __+__, __*__: Complex * Complex -> Complex;
     i: Complex
 sort Real < Complex
 var x:Real
 . x = complex(x,0)
 . i = complex(0,1)
 var x,y,z,w: Real
 . complex(x, y) + complex(z, w) = complex(x + z, y + w)
 . complex(x, y) * complex(z, w) = complex(x*z - y*w, y*z + x*w)

view ConstructComplex_as_Field:
     BasicField to ConstructComplex =
  Elem |-> Complex, e |-> 1

spec  Complex = BasicExtField[view ConstructComplex_as_Field]

library HasCASL/Metatheory/Ord

%display __<=__    %LATEX __\leq__

logic HasCASL

spec Ord =
class  Ord {
var    a: Ord
fun    __<=__ : Pred (a * a)
var    x, y, z: a
. x <= x
. x <= y /\ y <= z => x <= z
. x <= y /\ y <= x => x = y  
}

var a, b: +Ord
type  instances a * b: Ord
vars  v, w: b
. (x, v) <= (y, w) <=> x <= y /\ v <= w

type  instance Unit: Ord
. () <= ()

type  instance ?a: Ord
vars  x, y: ?a
. x <= y %% <=> def x() => x() <= y()

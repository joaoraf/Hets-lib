library HasCASL/MetricSpaces

%author: T. Mossakowski, S. Wölfl
%date: 2005-10-11

from HasCASL/Set get Set
from HasCASL/Real get Real

logic HasCASL

spec MetricSpace =
     Real
then
     sort S
     op d:S*S->Real
     var x,y,z:S
     . d(x,y) = 0 <=> x = y
     . d(x,y) = d(y,x)
     . d(x,z) <= d(x,y) + d(y,z)
end

spec ExtMetricSpaceByOpenDiscs[MetricSpace] given Set =
  op openDisc(x:S;r:Real) : Set S = \y:S . d(x,y)<r
  type OpenDiscs = {X:Set S . exists x:S;r:Real . X=openDisc(x,r)}
end

spec ExtMetricSpaceByOpenSets[MetricSpace] given Set =
     ExtMetricSpaceByOpenDiscs[MetricSpace] 
then %def
     pred Open : Set S 
     type OpenSets = {X:Set S . Open(X)}
     forall X:Set S
     . Open(X) <=> forall x:S . x isIn X => 
			exists r:Real . openDisc(x,r) subset X 
end

spec ExtMetricSpaceByClosedDiscs[MetricSpace] given Set = 
  op closedDisc(x:S;r:Real) : Set S = \y:S . d(x,y)<=r
  type ClosedDiscs = {X:Set S . exists x:S;r:Real . X=closedDisc(x,r)}
end

spec RichMetricSpace = 
    ExtMetricSpaceByOpenDiscs[MetricSpace]
and
    ExtMetricSpaceByClosedDiscs[MetricSpace]
end




library HasCASL/Real3D/Geometry
version 0.1

%author: E. Schulz
%date: 13-11-2008

logic HasCASL

from HasCASL/Real3D/Basics get AffineRealSpace3DWithSets


%[%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%                                                                  %%
%%                          Pure Geometry                           %%
%%                                                                  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]%


spec BaseObjects = AffineRealSpace3DWithSets
then

     ops Plane(offset:Point;normal:Vector):PointSet
	  = { \x:Point. orth(vec(x,offset),normal) }; %(def of Plane)%
	 Circle(offset:Point;r:Real;orientation:Vector):PointSet
	  = { \x:Point .! exists y:Vector.
	      orth(y,orientation) /\ ||y|| <= r /\ x=offset + y }; %(def of Circle)%
	 Cylinder(offset:Point;r:Real;axis:Vector):PointSet
	  = { \x:Point .! exists l:Real. exists y:Vector.
	      l isIn [0...1] /\ orth(y,axis) /\ ||y|| <= r /\
	      x=offset + l*axis + y };  %(def of Cylinder)%
	 Cylinder1(offset:Point;r:Real;axis:Vector):PointSet
	  = { \x:Point .! exists l:Real. exists y:Vector.
	      l isIn [0...1] /\ orth(y,axis) /\ ||y|| <= r /\
	      x=offset + l*axis + y };  %(def of Cylinder1)%
     
    
end

%% simple properties about planes
spec PlaneProps = BaseObjects then
     vars offset,x,y:Point; normal:Vector

     . let plane = Plane(offset, normal)
       in x isIn plane /\ y isIn plane => orth(vec(x,y),normal)
end

%% simple properties about circles ... missing


%% an assembly of all affine objects and their properties
spec AffineObjects = PlaneProps
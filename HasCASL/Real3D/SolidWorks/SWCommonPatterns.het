library HasCASL/Real3D/SolidWorks/SWCommonPatterns
version 0.1

%author: E. Schulz
%date: 12-12-2008

logic HasCASL

from HasCASL/Real3D/Geometry get BaseObjects
from HasCASL/Real3D/SolidWorks/SolidWorks get SolidWorksWithSemantics

%[%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%                                                                  %%
%%                       The SolidWorks common patterns             %%
%%                                                                  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]%


spec AbstractCylinder = BaseObjects then
     ops radius, height: Real;
	 offset:Point;
	 axis:Vector;
	 C: PointSet = Cylinder(offset,radius,axis);

     . |axis| = height;          %(the length of the axis is the height)%
     . radius > 0 /\ height > 0; %(non-collapsed cylinder)%
end


spec SolidWorksSemantics = SolidWorksWithSemantics then %implies

     vars pl1:SWPlaneNonDegenerated; pl2:SWPlane; c,p1,p2:SWPoint;
	  po1,po2:Point; alpha,beta,gamma:Type; A:alpha; Q:alpha->beta->gamma

     %{the interpretation for an complete arc: start=end.
     
       In that case the Halfspaces are a cover of the whole space
       and their intersection is the plane resulting from their
       defining normalvector}%
     . forall p2,n:SWPointNonDegenerated.
       VHalfSpace2(iv(p2)) intersection VHalfSpace2(- iv(p2))
	  = VPlane(iv(n)); %(help1)%

     %% here we don't need the nondegenerated condition
     . forall p2:SWPoint.
       (VHalfSpace2(iv(p2)) union VHalfSpace2(- iv(p2))) = allSet:VectorSet;
							 %(help2)%

     %% this special case point1 = point2 simplifies the semantics
     . i(Arc(SWArc(pl1,c,p1,p1))) =
       let cp = ip(c);
	   r = iv(p1) - iv(c);
	   Ball = VBall(|r|);
	   plane = i(Plane(pl1))
       in
       ActAttach(cp, Ball) intersection plane; %(help3)%
  
     %% a simple fact about the plane and its semantics
     . let pl = i(Plane(pl2))
       in ((po1 isIn pl) /\ (po2 isIn pl)) =>
	  orth(iv(NormalVector(pl2)),vec(po1,po2)); %(help4)%


     %% let-env and lambda commute
     . (let a = A in \b.! (Q a b)) = \b.! (let a = A in (Q a b)); %(help5)%

     %% unique structure of all planes
     . (p1 = SpacePoint(pl2) /\ p2 = NormalVector(pl2)) =>
       pl2 = SWPlane(p1, p2); %(help6)%

     
%[
]%

end

spec SolidWorksCylByArcExtrusion = SolidWorksSemantics then
     ops height:Real;
	 direction:Direction;
	 center,boundarypoint:SWPoint;
	 plane:SWPlaneNonDegenerated; %(real plane)%
         arc:SWArc=SWArc(plane,center,boundarypoint,boundarypoint); %(def of given arc)%
	 cylinder:SWObject=Extrusion(Arc(arc),height,direction); %(def of given cylinder)%


     %{constraints for the given parameters}%
     . height > 0; %(real extrusion)%
     . not (center = boundarypoint); %(real arc)%

     . let c = ip(center);
           bp = ip(boundarypoint);
           p = i(Plane(plane))
       in
       (c isIn p) /\ (bp isIn p) %(the arc is wellformed)%
end


view SWCylByAE_IsCylinder: AbstractCylinder
to
{ SolidWorksCylByArcExtrusion then
  ops
  offset:Point = ip(center); %(viewdef of offset)%
  axis:Vector = VWithLength(iv(NormalVector(plane)),direction*height); %(viewdef of axis)%
  C: PointSet = i(cylinder); %(viewdef of C)% %(def of C1)%
  radius:Real = |iv(boundarypoint) - iv(center)| %(viewdef of radius)%
}
end

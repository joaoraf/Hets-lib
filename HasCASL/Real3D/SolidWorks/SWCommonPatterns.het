library HasCASL/Real3D/SolidWorks/SWCommonPatterns
version 0.1

%author: E. Schulz
%date: 12-12-2008

logic HasCASL

from HasCASL/Real3D/Geometry get BaseObjects
from HasCASL/Real3D/SolidWorks/SolidWorks get SolidWorksWithSemantics

%[%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%                                                                  %%
%%                       The SolidWorks base objects                %%
%%                                                                  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]%


spec AbstractCylinder = BaseObjects then
     ops radius, height: Real;
	 offset:Point;
	 axis:Vector;
	 C: PointSet = Cylinder(offset,radius,axis);

     . |axis| = height;
     . radius > 0 /\ height > 0; %(non-collapsed cylinder)%
end


spec SolidWorksCylByArcExtrusion = SolidWorksWithSemantics then
     ops height:Real;
	 direction:Direction;
	 center,boundarypoint:SWPoint;
	 plane:SWPlane;
         arc:SWArc=SWArc(plane,center,boundarypoint,boundarypoint);
	 cylinder:SWObject=Extrusion(Arc(arc),height,direction);


     %{constraints for the given parameters}%
     . let c = ip(center);
           bp = ip(boundarypoint);
           p = i(Plane(plane))
       in
       (c isIn p) /\ (bp isIn p) %(the arc is wellformed)%
end

 
view SWCylByAE_IsCylinder: AbstractCylinder
to
{ SolidWorksCylByArcExtrusion then
  ops
  offset:Point = ip(center);
  axis:Vector = VWithLength(iv(NormalVector(plane)),direction*height);
  C: PointSet = i(cylinder);
  radius:Real = |iv(boundarypoint) - iv(center)|
}
end

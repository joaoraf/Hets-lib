library Ontology/Examples/Biblio

logic DL

spec Biblio_DL =
  Class: Researcher
  SubclassOf: name some string 

  ObjectProperty: hasArticle
  InverseOf: hasJournal

  Class: Article
  SubclassOf: author some Thing, title some string, hasJournal some Journal
  
  Class: Journal
  SubclassOf: name some string, hasArticle some Thing, impactFactor some integer

then %implies
  Class: Journal
  SubclassOf: hasArticle some Article

end

logic RelScheme

spec Biblio_RS =
  Tables
    person(key id:pointer, name:string)
    author_of(person, paper:pointer)
    paper(key id:pointer,title:string,published_in:pointer)
    journal(key id:pointer,name:string,impact_factor:integer)
  
  Relationships
    author_of[person]      -> person[id]  one_to_many
    author_of[paper]       -> paper[id]   one_to_many
    paper[published_in]    -> journal[id] one_to_many
end

logic CASL

spec Upper_FOL_Theory =
     {Biblio_RS with logic RelSchme -> CASL}
and 
     {Biblio_DL with logic DL -> CASL with Thing |-> pointer}     
then
     forall x,p:pointer;n:string;i:integer
     . journal(x,n,i) <=> Journal(x) /\ name (x,n) /\ impactFactor(x,i)
     . author_of(x,p) <=> Researcher(x) /\ Article(p) /\ author(p,x)
     . person(p,n)    <=> Researcher(p) /\ name(p,n)
     . Researcher(p)  <=> (exists t:string;q:pointer . person(p,t) /\ author(q,p))
     . Article(x)     <=> (exists t:string;q:pointer . paper(x,t,q))
     . Journal(x)     <=> (exists t:string;j:integer . journal(x,t,j))
end

sort U
ops ASEANRegionalForum, AbsoluteMonarchy, AcceptsICJJurisdiction,
    ActingConsulGeneral, AdministrationAndManagement,
    AdvisoryCommittee, Afghanistan,
    AfricanCaribbeanAndPacificGroupOfStates, AfricanDevelopmentBank,
    AgencyForTheFrenchSpeakingCommunity,
    AgencyForTheProhibitionOfNuclearWeaponsInLatinAmericaAndTheCaribbean,
    Agent, AgriculturalDevelopment, Alaska, Albania, Algeria,
    Ambassador, AmericanCity, AmericanInstituteInTaiwan, AmericanSamoa,
    AmericanState, Anarchy, AndeanCommunityOfNations, Andorra, Angola,
    Anguilla, AntarcticTreatyCouncil, Antarctica, AntiguaAndBarbuda,
    AntiterrorismAndEffectiveDeathPenaltyAct, AppealsCourt, April,
    ArabBankForEconomicDevelopmentInAfrica, ArabCooperationCouncil,
    ArabFundForEconomicAndSocialDevelopment, ArabLeague,
    ArabMaghrebUnion, ArabMonetaryFund, AreaMeasure, AreaOfConcern,
    Argentina, Armenia, ArmsControl, Aruba, AshmoreAndCartierIslands,
    Asia, AsiaPacificEconomicCooperation, AsianDevelopmentBank,
    AssociateMember, AssociatePartner,
    AssociationOfSoutheastAsianNations, AsymmetricRelation, Attribute,
    August, Australia, AustraliaGroup,
    AustraliaNewZealandUnitedStatesSecurityTreaty, Austria,
    AuthoritarianRegime, AuthoritarianSocialist, Azerbaijan, Bahrain,
    BakerIsland, Bangladesh, BankForInternationalSettlements, Barbados,
    BassasDaIndia, Belarus, Belgium, Belize, BeneluxEconomicUnion,
    Benin, Bermuda, Bhutan, BicameralLegislature, BigSeven, BigSix,
    BinaryFunction, BinaryPredicate, BlackSeaEconomicCooperationZone,
    BoardOfTrusteesMember, Bolivia, BosniaAndHerzegovina, Boston,
    Botswana, BoundaryDetermination, BouvetIsland, Brazil,
    BritishCrownColony, BritishIndianOceanTerritory,
    BritishVirginIslands, Brunei, Bulgaria, BurkinaFaso, Burma,
    Burundi, CBWExportControls, CabinetFn, California, Cambodia,
    Cameroon, Canada, CapeVerde, CaribbeanCommunityAndCommonMarket,
    CaribbeanDevelopmentBank, CategoryIIIMember, CategoryIIMember,
    CategoryIMember, CaymanIslands, CentralAfricanRepublic,
    CentralAfricanStatesDevelopmentBank,
    CentralAmericanBankForEconomicIntegration,
    CentralAmericanCommonMarket, CentralEuropeanInitiative, Chad,
    Chairman, ChargeDAffaires, Chicago, Chiefdom, ChildHealthServices,
    Chile, China, ChristmasIsland, City, CivilLaw, CivilPoliceTraining,
    ClippertonIsland, CocosKeelingIslands, CognitiveAgent, Collection,
    Colombia, ColomboPlan, CommissionForSocialDevelopment,
    CommissionOnCrimePreventionAndCriminalJustice,
    CommissionOnHumanRights, CommissionOnNarcoticsDrugs,
    CommissionOnPopulationAndDevelopment,
    CommissionOnScienceAndTechnologyForDevelopment,
    CommissionOnSustainableDevelopment, CommissionOnTheStatusOfWomen,
    Commissioner, Committing, Commonwealth,
    CommonwealthOfIndependentStates, CommonwealthOfNations,
    CommunicationsCoordination, CommunistState, Comoros,
    CompactOfFreeAssociationWithNewZealand,
    CompactOfFreeAssociationWithUnitedStates,
    CompensationAndReparation, CompulsorySuffrageLaw, Constitution,
    ConstitutionDocument, ConstitutionFn, ConstitutionalCourt,
    ConstitutionalDemocracy, ConstitutionalDemocraticRepublic,
    ConstitutionalGovernment, ConstitutionalMonarchy,
    ConstitutionalParliamentaryDemocracy, ConstitutionalRepublic,
    Consul, ConsulGeneral, Consulate, ConsulateGeneral,
    ContentBearingObject, Continent,
    ControlBiologicalAndChemicalWeapons, ControlNuclearWeapons,
    ControlWeaponsOfMassDestruction, ConventionalArmsControl,
    CookIslands, CooperatingState, CooperationInCivilAviation,
    CoordinateCreditPolicy, CoordinatingCommitteeOnExportControls,
    Coprincipality, CoralSeaIslands, CorrespondentMember, CostaRica,
    CoteDIvoire, CouncilForMutualEconomicAssistance,
    CouncilOfArabEconomicUnity, CouncilOfEurope,
    CouncilOfTheBalticSeaStates, CouncilOfTheEntente, County,
    CrimePrevention, Croatia, Cuba, CulturalCooperation, Cyprus,
    CzechRepublic, Dallas, December, Declaring, Democracy,
    DemocraticRepublicOfTheCongo, Denmark,
    DependencyOrSpecialSovereigntyArea, DialoguePartner, Dictatorship,
    DiplomaticAgent, DiplomaticOrganization, Djibouti, Dominica,
    DominicanRepublic, EastAfricanDevelopmentBank, EastTimor,
    EcclesiasticalGovernment,
    EconomicAndSocialCommissionForAsiaAndThePacific,
    EconomicAndSocialCommissionForWesternAsia,
    EconomicAndSocialCouncil, EconomicCommissionForAfrica,
    EconomicCommissionForEurope,
    EconomicCommissionForLatinAmericaAndTheCaribbean,
    EconomicCommunityOfTheGreatLakesCountries,
    EconomicCommunityOfWestAfricanStates, EconomicCooperation,
    EconomicCooperationOrganization, EconomicDevelopment,
    EconomicIntegration, EconomicPolicyCoordination, Ecuador,
    EducationalCooperation, EfficientCustomsAdministration, Egypt,
    ElSalvador, Election, ElectionFn, ElectoralCollegeElection,
    EliminateChemicalWeapons, Embassy, EmergingDemocracy,
    EmigrationAndImmigrationIssues, EnergyAndTheEnvironment,
    EnergyCooperation, EnglishCommonLaw, EnglishLanguage, Entity,
    EnvironmentalCooperation, EquatorialGuinea, Eritrea, Estonia,
    Ethiopia, EuroAtlanticPartnershipCouncil, EuroDollar, EuropaIsland,
    Europe, EuropeanBankForReconstructionAndDevelopment, EuropeanCity,
    EuropeanCommunity, EuropeanFreeTradeAssociation,
    EuropeanInvestmentBank, EuropeanMonetaryUnion, EuropeanNation,
    EuropeanOrganizationForNuclearResearch, EuropeanSpaceAgency,
    EuropeanUnion, ExclusiveMaleSuffrage, ExecutiveBoardMember,
    ExecutiveBranchFn, ExecutiveCommitteeMember, Factionalism,
    FalklandIslands, False, FaroeIslands, February,
    FederalDemocraticRepublic, FederalGovernment,
    FederalParliamentaryDemocracy, FederalRepublic, Federation, Female,
    Fiji, FinancialCooperation, Finland, FixedHoliday, FoodAid,
    FoodAndAgricultureOrganization, ForeignServicePosition,
    ForeignTerroristOrganization, FormOfGovernment, Formula, FrancZone,
    France, FrenchGuiana, FrenchPolynesia,
    FrenchSouthernAndAntarcticLands, FullMember, Gabon, Gambia,
    GazaStrip, GenderEquality, GeneralElection, GeographicArea,
    GeopoliticalArea, Georgia, Germany, Ghana, Gibraltar,
    GloriosoIslands, Government, GovernmentCabinet, GovernmentDeputy,
    GovernmentOrganization, Greece, Greenland, Grenada, Group,
    GroupOf10, GroupOf11, GroupOf15, GroupOf24, GroupOf3, GroupOf5,
    GroupOf6, GroupOf7, GroupOf77, GroupOf8, GroupOf9, Guadeloupe,
    Guam, Guatemala, Guernsey, GuestStatus, Guiding, Guinea,
    GuineaBissau, GulfCooperationCouncil, Guyana, Haiti,
    HeardIslandAndMcDonaldIslands, HereditaryMonarchy, Holiday,
    HolySee, Honduras, HongKong, HowlandIsland, Human,
    HumanRightsIssues, HumanitarianAid, HumanitarianAssistance,
    Hungary, Iceland, ImproveHumanSettlementConditions,
    IndependentState, India, IndianOceanCommission, Indonesia,
    IndustryStandards, InformationCooperation, InformationStandards,
    InfrastructureCooperation, Integer, IntellectualPropertyProtection,
    InterAmericanDevelopmentBank,
    InterGovernmentalAuthorityOnDevelopment,
    InternationalAtomicEnergyAgency,
    InternationalBankForReconstructionAndDevelopment,
    InternationalCenterForSecretariatOfInvestmentDisputes,
    InternationalChamberOfCommerce,
    InternationalCivilAviationOrganization,
    InternationalCommitteeOfTheRedCross,
    InternationalConfederationOfFreeTradeUnions,
    InternationalCourtOfJustice,
    InternationalCriminalPoliceOrganization,
    InternationalCriminalTribunalForRwanda,
    InternationalCriminalTribunalForTheFormerYugoslavia,
    InternationalDevelopmentAssociation, InternationalEnergyAgency,
    InternationalFederationOfRedCrossAndRedCrescentSocieties,
    InternationalFinanceCorporation,
    InternationalFundForAgriculturalDevelopment,
    InternationalHydrographicOrganization, InternationalJustice,
    InternationalLaborOrganization, InternationalMaritimeAffairs,
    InternationalMaritimeOrganization, InternationalMonetaryFund,
    InternationalOlympicCommittee, InternationalOrNonregionalMember,
    InternationalOrganization, InternationalOrganizationForMigration,
    InternationalOrganizationForStandardization,
    InternationalPeaceAndSecurity,
    InternationalRedCrossAndRedCrescentMovement,
    InternationalResearchAndTrainingInstituteForTheAdvancementOfWomen,
    InternationalTelecommunicationUnion, InternationalTradeSupport,
    Iran, Iraq, Ireland, IrreflexiveRelation, IslamicDevelopmentBank,
    IslamicGovernment, IslamicLaw, IslamicLawCourt, Island, IsleOfMan,
    Israel, Italy, Jamaica, JanMayenIsland, January, Japan,
    JarvisIsland, Jersey, JohnstonAtoll, JoiningAnOrganization, Jordan,
    JuanDeNovaIsland, JudgeAtLaw, JudicialOrganization,
    JudicialReviewOfExecutiveActs, JudicialReviewOfLegislativeActs,
    JudiciaryFn, July, June, JusticeIssues, KansasCityMissouri,
    Kazakhstan, Kenya, King, KingmanReef, Kiribati, Kuwait, Kyrgyzstan,
    LaborIssues, LandArea, Laos, LatinAmericanEconomicSystem,
    LatinAmericanIntegrationAssociation, Latvia, Law, Leader, Lebanon,
    LegalSystemAttribute, LegislativeChamber, LegislativeOrganization,
    LegislatureFn, Lesotho, Liberia, Libya, Liechtenstein, Lithuania,
    London, LosAngeles, Luxembourg, Macau, Macedonia, Madagascar,
    Malawi, Malaysia, Maldives, Male, Mali, Malta,
    ManchesterNewHampshire, March, MarshallIslands, Martinique,
    Mauritania, Mauritius, May, Mayotte, MemberFn, MemberRoleFn,
    MemberStatus, MembershipApplicant, MembershipPending, Mexico,
    Micronesia, MidwayIslands, MilitaryCommander, MilitaryCooperation,
    MilitaryDictatorship, MilitaryGeneral, MilitaryOfficer,
    MississippiRiver, Missouri, Moldova, Monaco, Monarch, Monarchy,
    MonetaryAndEconomicCommunityOfCentralAfrica, MonetaryStability,
    MonetaryUnion, Mongolia, Montserrat, Morocco, MoveableHoliday,
    Mozambique, MulitlateralInvestmentGeographicAgency,
    MultipartyDemocracy, MutualDefensePact, Namibia, NapoleonicCode,
    Nation, NationalCommitteeChairman, NationalGovernment, Nauru,
    NavassaIsland, Nepal, Netherlands, NetherlandsAntilles,
    NewCaledonia, NewEngland, NewYorkCity, NewYorkState, NewZealand,
    Nicaragua, Niger, Nigeria, Niue, NonalignedMovement,
    NonnegativeInteger, NonpermanentStatus, NonregionalMember,
    NonstateParticipant, NordicCouncil, NordicInvestmentBank,
    NorfolkIsland, NorthAtlanticTreatyOrganization, NorthKorea,
    NorthernMarianaIslands, Norway, November, NuclearDisarmament,
    NuclearEnergyAgency, NuclearExportControls,
    NuclearNonproliferation, NuclearSuppliersGroup, Obligation,
    ObservationAndMonitoring, ObserverStatus, October, Oman,
    Organization, OrganizationForEconomicCooperationAndDevelopment,
    OrganizationForSecurityAndCooperationInEurope,
    OrganizationForTheProhibitionOfChemicalWeapons,
    OrganizationOfAfricanUnity, OrganizationOfAmericanStates,
    OrganizationOfArabPetroleumExportingCountries,
    OrganizationOfEasternCaribbeanStates, OrganizationOfNations,
    OrganizationOfPetroleumExportingCountries,
    OrganizationOfTheIslamicConference, OrganizeOlympicGames,
    OverseasArea, OverseasAreaFn, PacificCommunity, PacificIslandForum,
    Pakistan, Palau, PalestinianLiberationOrganization, PalmyraAtoll,
    Panama, PapuaNewGuinea, ParacelIslands, Paraguay, Paris,
    Parliament, ParliamentaryDemocracy,
    ParliamentaryDemocraticRepublic, ParliamentaryGovernment,
    ParliamentaryRepublic, ParliamentaryTerritory, PartIIMember,
    PartIMember, PartnersForCooperation, PartnershipForPeace,
    PeacefulUseOfAtomicPower, PeacekeepingOperation, Pennsylvania,
    PermanentChargeDAffaires, PermanentCourtOfArbitration,
    PermanentRepresentative, PermanentStatus, Permission, Peru,
    Philippines, Physical, PitcairnIslands, Poland, PoliticalCoalition,
    PoliticalCooperation, PoliticalDevelopment, PoliticalIntegration,
    PoliticalOrganization, PoliticalParty, PoliticalPressureGroup,
    PopularElection, PopulationPolicySupport, Portugal, Position,
    President, PresidentialGovernment, PrimeMinister, PrincipalOfficer,
    PromotePrivateEnterprise, PromoteRegionalStability,
    PromoteSustainableDevelopment, PromoteTradeUnionism,
    PromotionOfFreeTrade, PromotionOfPrivateEnterprise,
    PromotionOfTourism, PromotionOfTradeAndInvestment, Proposition,
    PublicHealthConcern, PuertoRico, Qatar, QuaternaryPredicate, Queen,
    RealNumber, RedRiver, ReducePoverty, ReducingCrime,
    RefugeeAssistance, RegionalLaw, RegionalLawFn, RegionalMember,
    RegionalSecurity, RelationalAttribute, ReligiousOrganization,
    ReproductiveHealthAndFamilyPlannning, Republic, RepublicOfGeorgia,
    Requesting, RestrictedSuffrage, Reunion, RioGroup, River,
    RomanCanonLaw, Romania, Russia, Rwanda, SaintHelena,
    SaintKittsAndNevis, SaintLucia, SaintPierreAndMiquelon,
    SaintVincentAndTheGrenadines, Samoa, SanFrancisco, SanMarino,
    SaoTomeAndPrincipe, SaudiArabia, ScientificCooperation,
    SelfGoverningTerritory, Senegal, September, SerbiaAndMontenegro,
    SetOrClass, Seychelles, SierraLeone, SignatoryMember, Singapore,
    Slovakia, Slovenia, SocialCooperation, SocialDevelopment,
    SocialRole, SocioeconomicResearch, SolomonIslands, Somalia,
    SouthAfrica, SouthAsianAssociationForRegionalCooperation,
    SouthGeorgiaAndTheSouthSandwichIslands, SouthKorea,
    SouthPacificRegionalTradeAndEconomicCooperationAgreement,
    SouthernAfricanCustomsUnion, SouthernAfricanDevelopmentCommunity,
    SouthernConeCommonMarket, SovietUnion, SpaceResearchAndTechnology,
    Spain, Spokesperson, SpratlyIslands, SriLanka, StateOrProvince,
    Stating, StatisticalCommission, SubbureauMember, SubscriberMember,
    Sudan, SuffrageLaw, SupportLawEnforcement, SupremeCourt,
    SupremeCourtFn, SupremeCourtJudge, Suriname, SuspendedMember,
    Svalbard, Swaziland, Sweden, Switzerland, SymbolicString,
    SymmetricRelation, Syria, Taiwan, Tajikistan, Tanzania,
    TechnologyCooperation, TernaryPredicate, TerroristOrganization,
    Texas, Thailand, TheBahamas, TheocraticGovernment,
    TheocraticRepublic, TimeDuration, TimeInterval, TimePosition, Togo,
    Tokelau, Tonga, TransitionalAdministration, TransitionalGovernment,
    TransitiveRelation, TransnationalIssue, TransportationCoordination,
    TrinidadAndTobago, TromelinIsland, True, Tunisia, Turkey,
    Turkmenistan, TurksAndCaicosIslands, Tuvalu, USStateDepartment,
    Uganda, Ukraine, UnaryFunction, UnicameralLegislature,
    UnincorporatedUnitedStatesTerritory, UnitaryRule,
    UnitedArabEmirates, UnitedKingdom, UnitedNations,
    UnitedNationsCenterForHumanSettlements, UnitedNationsChildrensFund,
    UnitedNationsCivilianPoliceMissionInHaiti,
    UnitedNationsCompensationCommission,
    UnitedNationsConferenceOnTradeAndDevelopment,
    UnitedNationsDevelopmentProgram,
    UnitedNationsDisengagementObserverForce,
    UnitedNationsEducationalScientificAndCulturalOrganization,
    UnitedNationsEnvironmentProgram, UnitedNationsGeneralAssembly,
    UnitedNationsHighCommissionerForHumanRights,
    UnitedNationsHighCommissionerForRefugees,
    UnitedNationsIndustrialDevelopmentOrganization,
    UnitedNationsInstituteForDisarmamentResearch,
    UnitedNationsInstituteForTrainingAndResearch,
    UnitedNationsInterimAdministrationMissionInKosovo,
    UnitedNationsInterimAdminstrationMissionInKosovo,
    UnitedNationsInterimForceInLebanon,
    UnitedNationsInterregionalCrimeAndJusticeResearchInstitute,
    UnitedNationsIraqKuwaitBoundaryDemarcationCommission,
    UnitedNationsIraqKuwaitObservationMission,
    UnitedNationsMilitaryObserverGroupInIndiaAndPakistan,
    UnitedNationsMissionForTheReferendumInWesternSahara,
    UnitedNationsMissionInBosniaAndHerzegovina,
    UnitedNationsMissionInEthiopiaAndEritrea,
    UnitedNationsMissionInSierraLeone,
    UnitedNationsMissionOfObserversInPrevlaka,
    UnitedNationsMissionOfObserversInTajikistan,
    UnitedNationsMonitoringAndVerificationCommission,
    UnitedNationsObserverMissionInGeorgia,
    UnitedNationsOfficeOfProjectServices,
    UnitedNationsOrganizationMissionInTheDemocraticRepublicOfTheCongo,
    UnitedNationsPeaceKeepingForceInCyprus,
    UnitedNationsPopulationFund,
    UnitedNationsPreventiveDeploymentForce,
    UnitedNationsReliefAndWorksAgencyForPalestineRefugeesInTheNearEast,
    UnitedNationsResearchInstituteForSocialDevelopment,
    UnitedNationsSecretariat, UnitedNationsSecurityCouncil,
    UnitedNationsSystemStaffCollege,
    UnitedNationsTransitionalAdministrationInEastTimor,
    UnitedNationsTruceSupervisionOrganization,
    UnitedNationsTrusteeshipCouncil, UnitedNationsUniversity,
    UnitedStates, UniversalPostalUnion, UniversalSuffrageLaw, Uruguay,
    Uzbekistan, Vanuatu, Venezuela, ViceChairman, VicePresident,
    Vietnam, VirginIslands, Virginia, VoterAgeRequirement,
    VoterCitizenshipRequirement, Voting, VotingFn, WakeIsland,
    WallisAndFutuna, WarCrimesProsecution, WarsawPact, WashingtonDC,
    WassenaarArrangement, WeaponsInspection,
    WestAfricanDevelopmentBank, WestAfricanEconomicAndMonetaryUnion,
    WestBank, WesternEuropeanUnion, WesternSahara, WorldBankGroup,
    WorldConfederationOfLabor, WorldCustomsOrganization,
    WorldFederationOfTradeUnions, WorldFoodProgram,
    WorldHealthOrganization, WorldIntellectualPropertyOrganization,
    WorldLaborIssues, WorldMeteorologicalOrganization, WorldOcean,
    WorldTourismOrganization, WorldTradeOrganization, Yemen, Zambia,
    ZanggerCommittee, Zimbabwe, a_1, a_1_0, a_1_1, a_1_2, a_1_3, a_1_4,
    a_1_5, a_1_6, a_1_7, a_1_8, a_1_8_6_3, a_1_8_6_4, a_1_8_6_5,
    a_1_8_7_4, a_1_8_9_0, a_1_8_9_4, a_1_8_9_9, a_1_9, a_1_9_1_9,
    a_1_9_2_0, a_1_9_2_8, a_1_9_3_0, a_1_9_3_1, a_1_9_4_4, a_1_9_4_5,
    a_1_9_4_6, a_1_9_4_7, a_1_9_4_8, a_1_9_4_9, a_1_9_5_0, a_1_9_5_1,
    a_1_9_5_2, a_1_9_5_3, a_1_9_5_4, a_1_9_5_5, a_1_9_5_6, a_1_9_5_7,
    a_1_9_5_8, a_1_9_5_9, a_1_9_6_0, a_1_9_6_1, a_1_9_6_2, a_1_9_6_3,
    a_1_9_6_4, a_1_9_6_5, a_1_9_6_6, a_1_9_6_7, a_1_9_6_8, a_1_9_6_9,
    a_1_9_7_0, a_1_9_7_1, a_1_9_7_2, a_1_9_7_3, a_1_9_7_4, a_1_9_7_5,
    a_1_9_7_6, a_1_9_7_8, a_1_9_8_0, a_1_9_8_1, a_1_9_8_2, a_1_9_8_4,
    a_1_9_8_5, a_1_9_8_6, a_1_9_8_9, a_1_9_9_0, a_1_9_9_1, a_1_9_9_2,
    a_1_9_9_3, a_1_9_9_4, a_1_9_9_5, a_1_9_9_6, a_1_9_9_7, a_1_9_9_9,
    a_2, a_2_0, a_2_0_0_0, a_2_1, a_2_2, a_2_3, a_2_4, a_2_5, a_2_6,
    a_2_7, a_2_8, a_2_9, a_3, a_3_0, a_3_1, a_4, a_5, a_6, a_7, a_8,
    a_9,
    a_I_m_m_i_g_r_a_t_i_o_n_A_n_d_N_a_t_i_o_n_a_l_i_t_y_A_c_t_Minus_S_e_c_t_i_o_n_2_1_9,
    a_I_m_m_i_g_r_a_t_i_o_n_A_n_d_N_a_t_i_o_n_a_l_i_t_y_A_c_t_Minus_S_e_c_t_i_o_n_2_1_9_Minus_U_S,
    a_I_m_m_i_g_r_a_t_i_o_n_A_n_d_N_a_t_i_o_n_a_l_i_t_y_A_c_t_Minus_U_S,
    a_Quot_A_B_E_D_A_Quot, a_Quot_A_C_C_Quot, a_Quot_A_C_C_T_Quot,
    a_Quot_A_C_P_Space_G_r_o_u_p_Quot, a_Quot_A_F_E_S_D_Quot,
    a_Quot_A_G_Quot, a_Quot_A_L_A_D_I_Quot, a_Quot_A_L_Quot,
    a_Quot_A_M_F_Quot, a_Quot_A_M_U_Quot, a_Quot_A_N_Z_U_S_Quot,
    a_Quot_A_P_E_C_Quot, a_Quot_A_R_F_Quot, a_Quot_A_S_E_A_N_Quot,
    a_Quot_A_S_E_A_N_Space_R_e_g_i_o_n_a_l_Space_F_o_r_u_m_Quot,
    a_Quot_A_f_D_B_Quot, a_Quot_A_f_g_h_a_n_i_s_t_a_n_Quot,
    a_Quot_A_f_r_i_c_a_n_Comma_Space_C_a_r_i_b_b_e_a_n_Comma_Space_a_n_d_Space_P_a_c_i_f_i_c_Space_G_r_o_u_p_Space_o_f_Space_S_t_a_t_e_s_Quot,
    a_Quot_A_f_r_i_c_a_n_Space_U_n_i_o_n_Quot,
    a_Quot_A_g_e_n_c_y_Space_f_o_r_Space_C_u_l_t_u_r_a_l_Space_a_n_d_Space_T_e_c_h_n_i_c_a_l_Space_C_o_o_p_e_r_a_t_i_o_n_Quot,
    a_Quot_A_g_e_n_c_y_Space_f_o_r_Space_t_h_e_Space_F_r_e_n_c_h_Minus_S_p_e_a_k_i_n_g_Space_C_o_m_m_u_n_i_t_y_Quot,
    a_Quot_A_g_e_n_c_y_Space_f_o_r_Space_t_h_e_Space_P_r_o_h_i_b_i_t_i_o_n_Space_o_f_Space_N_u_c_l_e_a_r_Space_W_e_a_p_o_n_s_Space_i_n_Space_L_a_t_i_n_Space_A_m_e_r_i_c_a_Space_a_n_d_Space_t_h_e_Space_C_a_r_i_b_b_e_a_n_Quot,
    a_Quot_A_l_b_a_n_i_a_Quot, a_Quot_A_l_g_e_r_i_a_Quot,
    a_Quot_A_m_e_r_i_c_a_n_Space_S_a_m_o_a_Quot, a_Quot_A_n_c_o_m_Quot,
    a_Quot_A_n_d_e_a_n_G_r_o_u_p_Quot,
    a_Quot_A_n_d_e_a_n_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
    a_Quot_A_n_d_e_a_n_Space_C_o_m_m_u_n_i_t_y_Space_o_f_Space_N_a_t_i_o_n_s_Quot,
    a_Quot_A_n_d_e_a_n_Space_P_a_r_l_i_a_m_e_n_t_Quot,
    a_Quot_A_n_d_o_r_r_a_Quot, a_Quot_A_n_g_o_l_a_Quot,
    a_Quot_A_n_g_u_i_l_l_a_Quot,
    a_Quot_A_n_t_a_r_c_t_i_c_Space_T_r_e_a_t_y_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_A_n_t_i_g_u_a_Space_a_n_d_Space_B_a_r_b_u_d_a_Quot,
    a_Quot_A_r_a_b_Space_B_a_n_k_Space_f_o_r_Space_E_c_o_n_o_m_i_c_Space_D_e_v_e_l_o_p_m_e_n_t_Space_i_n_Space_A_f_r_i_c_a_Quot,
    a_Quot_A_r_a_b_Space_C_o_o_p_e_r_a_t_i_o_n_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_A_r_a_b_Space_F_u_n_d_Space_f_o_r_Space_E_c_o_n_o_m_i_c_Space_a_n_d_Space_S_o_c_i_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
    a_Quot_A_r_a_b_Space_L_e_a_g_u_e_Quot,
    a_Quot_A_r_a_b_Space_M_a_g_h_r_e_b_Space_U_n_i_o_n_Quot,
    a_Quot_A_r_a_b_Space_M_o_n_e_t_a_r_y_Space_F_u_n_d_Quot,
    a_Quot_A_r_g_e_n_t_i_n_a_Quot, a_Quot_A_r_m_e_n_i_a_Quot,
    a_Quot_A_r_u_b_a_Quot, a_Quot_A_s_D_B_Quot,
    a_Quot_A_s_h_m_o_r_e_Space_a_n_d_Space_C_a_r_t_i_e_r_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_A_s_i_a_Minus_P_a_c_i_f_i_c_Space_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Quot,
    a_Quot_A_s_i_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
    a_Quot_A_s_o_c_i_a_c_i_o_n_Space_L_a_t_i_n_o_a_m_e_r_i_c_a_n_a_Space_d_e_Space_I_n_t_e_g_r_a_c_i_o_n_Quot,
    a_Quot_A_s_s_o_c_i_a_t_i_o_n_Space_o_f_Space_S_o_u_t_h_e_a_s_t_Space_A_s_i_a_n_Space_N_a_t_i_o_n_s_Quot,
    a_Quot_A_u_s_t_r_a_l_i_a_Minus_N_e_w_Space_Z_e_a_l_a_n_d_Minus_U_n_i_t_e_d_Space_S_t_a_t_e_s_Space_S_e_c_u_r_i_t_y_Space_T_r_e_a_t_y_Quot,
    a_Quot_A_u_s_t_r_a_l_i_a_Quot,
    a_Quot_A_u_s_t_r_a_l_i_a_Space_G_r_o_u_p_Quot,
    a_Quot_A_u_s_t_r_i_a_Quot, a_Quot_A_z_e_r_b_a_i_j_a_n_Quot,
    a_Quot_B_A_D_E_A_Quot, a_Quot_B_A_D_Quot, a_Quot_B_C_I_E_Quot,
    a_Quot_B_D_E_A_C_Quot, a_Quot_B_I_D_Quot, a_Quot_B_I_S_Quot,
    a_Quot_B_O_A_D_Quot, a_Quot_B_S_E_C_Quot, a_Quot_B_V_I_Quot,
    a_Quot_B_a_h_a_m_a_s_Quot, a_Quot_B_a_h_r_a_i_n_Quot,
    a_Quot_B_a_k_e_r_Space_I_s_l_a_n_d_Quot,
    a_Quot_B_a_n_c_o_Space_C_e_n_t_r_o_a_m_e_r_i_c_a_n_o_Space_d_e_Space_I_n_t_e_g_r_a_c_i_o_n_Space_E_c_o_n_o_m_i_c_o_Quot,
    a_Quot_B_a_n_c_o_Space_I_n_t_e_r_a_m_e_r_i_c_a_n_o_Space_d_e_Space_D_e_s_a_r_r_o_l_l_o_Quot,
    a_Quot_B_a_n_g_l_a_d_e_s_h_Quot,
    a_Quot_B_a_n_k_Space_f_o_r_Space_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_S_e_t_t_l_e_m_e_n_t_s_Quot,
    a_Quot_B_a_n_q_u_e_Space_A_f_r_i_c_a_i_n_e_Space_d_e_Space_D_e_v_e_l_o_p_p_e_m_e_n_t_Quot,
    a_Quot_B_a_n_q_u_e_Space_A_r_a_b_e_Space_d_e_Space_D_e_v_e_l_o_p_p_e_m_e_n_t_Space_E_c_o_n_o_m_i_q_u_e_Space_e_n_Space_A_f_r_i_q_u_e_Quot,
    a_Quot_B_a_n_q_u_e_Space_O_u_e_s_t_Minus_A_f_r_i_c_a_i_n_e_Space_d_e_Space_D_e_v_e_l_o_p_p_e_m_e_n_t_Quot,
    a_Quot_B_a_n_q_u_e_Space_d_e_Space_D_e_v_e_l_o_p_p_e_m_e_n_t_Space_d_e_s_Space_E_t_a_t_s_Space_d_e_Space_l_'_A_f_r_i_q_u_e_Space_C_e_n_t_r_a_l_e_Quot,
    a_Quot_B_a_r_b_a_d_o_s_Quot,
    a_Quot_B_a_s_s_a_s_Space_d_a_Space_I_n_d_i_a_Quot,
    a_Quot_B_a_s_u_t_o_l_a_n_d_Quot, a_Quot_B_e_l_a_r_u_s_Quot,
    a_Quot_B_e_l_g_i_u_m_Quot, a_Quot_B_e_l_i_z_e_Quot,
    a_Quot_B_e_n_e_l_u_x_Quot,
    a_Quot_B_e_n_e_l_u_x_Space_E_c_o_n_o_m_i_c_Space_U_n_i_o_n_Quot,
    a_Quot_B_e_n_i_n_Quot, a_Quot_B_e_r_m_u_d_a_Quot,
    a_Quot_B_h_u_t_a_n_Quot, a_Quot_B_i_g_Space_S_e_v_e_n_Quot,
    a_Quot_B_i_g_Space_S_i_x_Quot,
    a_Quot_B_l_a_c_k_Space_S_e_a_Space_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_Z_o_n_e_Quot,
    a_Quot_B_o_l_i_v_i_a_Quot,
    a_Quot_B_o_s_n_i_a_Space_a_n_d_Space_H_e_r_z_e_g_o_v_i_n_a_Quot,
    a_Quot_B_o_t_s_w_a_n_a_Quot,
    a_Quot_B_o_u_v_e_t_Space_I_s_l_a_n_d_Quot, a_Quot_B_r_a_z_i_l_Quot,
    a_Quot_B_r_i_t_i_s_h_Space_I_n_d_i_a_n_Space_O_c_e_a_n_Space_T_e_r_r_i_t_o_r_y_Quot,
    a_Quot_B_r_i_t_i_s_h_Space_V_i_r_g_i_n_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_B_r_u_n_e_i_Quot, a_Quot_B_u_l_g_a_r_i_a_Quot,
    a_Quot_B_u_r_k_i_n_a_Space_F_a_s_o_Quot, a_Quot_B_u_r_m_a_Quot,
    a_Quot_B_u_r_u_n_d_i_Quot, a_Quot_C_A_C_M_Quot,
    a_Quot_C_A_E_U_Quot, a_Quot_C_A_N_Quot, a_Quot_C_B_S_S_Quot,
    a_Quot_C_C_C_Quot, a_Quot_C_D_B_Quot, a_Quot_C_E_I_Quot,
    a_Quot_C_E_M_A_C_Quot, a_Quot_C_E_M_A_Quot, a_Quot_C_E_P_G_L_Quot,
    a_Quot_C_E_Quot, a_Quot_C_E_R_N_Quot, a_Quot_C_I_S_Quot,
    a_Quot_C_M_E_A_Quot, a_Quot_C_O_C_O_M_Quot, a_Quot_C_P_Quot,
    a_Quot_C_Quot, a_Quot_C_S_C_E_Quot, a_Quot_C_a_m_b_o_d_i_a_Quot,
    a_Quot_C_a_m_e_r_o_o_n_Quot, a_Quot_C_a_n_a_d_a_Quot,
    a_Quot_C_a_p_e_Space_V_e_r_d_e_Quot,
    a_Quot_C_a_r_i_b_b_e_a_n_Space_C_o_m_m_u_n_i_t_y_Space_a_n_d_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
    a_Quot_C_a_r_i_b_b_e_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
    a_Quot_C_a_r_i_c_o_m_Quot,
    a_Quot_C_a_r_t_a_g_e_n_a_Space_G_r_o_u_p_Quot,
    a_Quot_C_a_y_m_a_n_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_C_e_n_t_r_a_l_Space_A_f_r_i_c_a_n_Space_C_u_s_t_o_m_s_Space_a_n_d_Space_E_c_o_n_o_m_i_c_Space_U_n_i_o_n_Quot,
    a_Quot_C_e_n_t_r_a_l_Space_A_f_r_i_c_a_n_Space_R_e_p_u_b_l_i_c_Quot,
    a_Quot_C_e_n_t_r_a_l_Space_A_f_r_i_c_a_n_Space_S_t_a_t_e_s_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
    a_Quot_C_e_n_t_r_a_l_Space_A_m_e_r_i_c_a_n_Space_B_a_n_k_Space_f_o_r_Space_E_c_o_n_o_m_i_c_Space_I_n_t_e_g_r_a_t_i_o_n_Quot,
    a_Quot_C_e_n_t_r_a_l_Space_A_m_e_r_i_c_a_n_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
    a_Quot_C_e_n_t_r_a_l_Space_E_u_r_o_p_e_a_n_Space_I_n_i_t_i_a_t_i_v_e_Quot,
    a_Quot_C_h_a_d_Quot, a_Quot_C_h_i_l_e_Quot, a_Quot_C_h_i_n_a_Quot,
    a_Quot_C_h_r_i_s_t_m_a_s_Space_I_s_l_a_n_d_Quot,
    a_Quot_C_l_i_p_p_e_r_t_o_n_Space_I_s_l_a_n_d_Quot,
    a_Quot_C_o_c_o_s_Space_K_e_e_l_i_n_g_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_C_o_l_o_m_b_i_a_Quot,
    a_Quot_C_o_l_o_m_b_o_Space_P_l_a_n_Quot, a_Quot_C_o_m_e_c_o_n_Quot,
    a_Quot_C_o_m_m_o_n_w_e_a_l_t_h_Quot,
    a_Quot_C_o_m_m_o_n_w_e_a_l_t_h_Space_o_f_Space_I_n_d_e_p_e_n_d_e_n_t_Space_S_t_a_t_e_s_Quot,
    a_Quot_C_o_m_m_o_n_w_e_a_l_t_h_Space_o_f_Space_N_a_t_i_o_n_s_Quot,
    a_Quot_C_o_m_m_u_n_a_u_t_e_Space_E_c_o_n_o_m_i_q_u_e_Space_d_e_s_Space_P_a_y_s_Space_d_e_s_Space_G_r_a_n_d_s_Space_L_a_c_s_Quot,
    a_Quot_C_o_m_o_r_o_s_Quot,
    a_Quot_C_o_n_f_e_r_e_n_c_e_Space_d_e_s_Space_M_i_n_i_s_t_r_e_s_Space_d_e_s_Space_F_i_n_a_n_c_e_s_Space_d_e_s_Space_P_a_y_s_Space_d_e_Space_l_a_Space_Z_o_n_e_Space_F_r_a_n_c_Quot,
    a_Quot_C_o_n_f_e_r_e_n_c_e_Space_o_n_Space_S_e_c_u_r_i_t_y_Space_a_n_d_Space_C_o_o_p_e_r_a_t_i_o_n_Space_i_n_Space_E_u_r_o_p_e_Quot,
    a_Quot_C_o_n_s_e_i_l_Space_E_u_r_o_p_e_e_n_n_e_Space_p_o_u_r_Space_l_a_Space_R_e_c_h_e_r_c_h_e_Space_N_u_c_l_e_a_i_r_e_Quot,
    a_Quot_C_o_o_k_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_C_o_o_r_d_i_n_a_t_i_n_g_Space_C_o_m_m_i_t_t_e_e_Space_o_n_Space_E_x_p_o_r_t_Space_C_o_n_t_r_o_l_s_Quot,
    a_Quot_C_o_r_a_l_Space_S_e_a_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_C_o_s_t_a_Space_R_i_c_a_Quot,
    a_Quot_C_o_t_e_Space_d_'_I_v_o_i_r_e_Quot,
    a_Quot_C_o_u_n_c_i_l_Space_f_o_r_Space_M_u_t_u_a_l_Space_E_c_o_n_o_m_i_c_Space_A_s_s_i_s_t_a_n_c_e_Quot,
    a_Quot_C_o_u_n_c_i_l_Space_o_f_Space_A_r_a_b_Space_E_c_o_n_o_m_i_c_Space_U_n_i_t_y_Quot,
    a_Quot_C_o_u_n_c_i_l_Space_o_f_Space_E_u_r_o_p_e_Quot,
    a_Quot_C_o_u_n_c_i_l_Space_o_f_Space_t_h_e_Space_B_a_l_t_i_c_Space_S_e_a_Space_S_t_a_t_e_s_Quot,
    a_Quot_C_o_u_n_c_i_l_Space_o_f_Space_t_h_e_Space_E_n_t_e_n_t_e_Quot,
    a_Quot_C_r_o_a_t_i_a_Quot, a_Quot_C_u_b_a_Quot,
    a_Quot_C_u_s_t_o_m_s_Space_C_o_o_p_e_r_a_t_i_o_n_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_C_y_p_r_u_s_Quot,
    a_Quot_C_z_e_c_h_Space_R_e_p_u_b_l_i_c_Quot,
    a_Quot_D_e_m_o_c_r_a_t_i_c_Space_R_e_p_u_b_l_i_c_Space_o_f_Space_t_h_e_Space_C_o_n_g_o_Quot,
    a_Quot_D_e_n_m_a_r_k_Quot, a_Quot_D_j_i_b_o_u_t_i_Quot,
    a_Quot_D_o_m_i_n_i_c_a_Quot,
    a_Quot_D_o_m_i_n_i_c_a_n_Space_R_e_p_u_b_l_i_c_Quot,
    a_Quot_E_A_D_B_Quot, a_Quot_E_A_P_C_Quot, a_Quot_E_B_R_D_Quot,
    a_Quot_E_C_O_Quot, a_Quot_E_C_O_S_O_C_Quot,
    a_Quot_E_C_O_W_A_S_Quot, a_Quot_E_C_Quot, a_Quot_E_F_T_A_Quot,
    a_Quot_E_I_B_Quot, a_Quot_E_M_U_Quot, a_Quot_E_S_A_Quot,
    a_Quot_E_U_Quot,
    a_Quot_E_a_s_t_Space_A_f_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
    a_Quot_E_a_s_t_Space_T_i_m_o_r_Quot,
    a_Quot_E_c_o_n_o_m_i_c_Space_C_o_m_m_u_n_i_t_y_Space_o_f_Space_W_e_s_t_Space_A_f_r_i_c_a_n_Space_S_t_a_t_e_s_Quot,
    a_Quot_E_c_o_n_o_m_i_c_Space_C_o_m_m_u_n_i_t_y_Space_o_f_Space_t_h_e_Space_G_r_e_a_t_Space_L_a_k_e_s_Space_C_o_u_n_t_r_i_e_s_Quot,
    a_Quot_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_E_c_o_n_o_m_i_c_Space_a_n_d_Space_S_o_c_i_a_l_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_E_c_u_a_d_o_r_Quot, a_Quot_E_g_y_p_t_Quot,
    a_Quot_E_l_Space_S_a_l_v_a_d_o_r_Quot,
    a_Quot_E_l_l_i_c_e_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_E_n_t_e_n_t_e_Quot,
    a_Quot_E_q_u_a_t_o_r_i_a_l_Space_G_u_i_n_e_a_Quot,
    a_Quot_E_r_i_t_r_e_a_Quot, a_Quot_E_s_t_o_n_i_a_Quot,
    a_Quot_E_t_h_i_o_p_i_a_Quot,
    a_Quot_E_u_r_o_Minus_A_t_l_a_n_t_i_c_Space_P_a_r_t_n_e_r_s_h_i_p_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_E_u_r_o_p_a_Space_I_s_l_a_n_d_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_B_a_n_k_Space_f_o_r_Space_R_e_c_o_n_s_t_r_u_c_t_i_o_n_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_C_o_m_m_u_n_i_t_i_e_s_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_C_o_m_m_u_n_i_t_y_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_E_c_o_n_o_m_i_c_Space_a_n_d_Space_M_o_n_e_t_a_r_y_Space_U_n_i_o_n_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_F_r_e_e_Space_T_r_a_d_e_Space_A_s_s_o_c_i_a_t_i_o_n_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_I_n_v_e_s_t_m_e_n_t_Space_B_a_n_k_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_M_o_n_e_t_a_r_y_Space_U_n_i_o_n_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_N_u_c_l_e_a_r_Space_R_e_s_e_a_r_c_h_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_S_p_a_c_e_Space_A_g_e_n_c_y_Quot,
    a_Quot_E_u_r_o_p_e_a_n_Space_U_n_i_o_n_Quot, a_Quot_F_A_O_Quot,
    a_Quot_F_Z_Quot, a_Quot_F_a_l_k_l_a_n_d_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_F_a_r_o_e_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_F_e_d_e_r_a_t_e_d_Space_S_t_a_t_e_s_Space_o_f_Space_M_i_c_r_o_n_e_s_i_a_Quot,
    a_Quot_F_i_j_i_Quot, a_Quot_F_i_n_l_a_n_d_Quot,
    a_Quot_F_o_o_d_Space_a_n_d_Space_A_g_r_i_c_u_l_t_u_r_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_F_r_a_n_c_Space_Z_o_n_e_Quot, a_Quot_F_r_a_n_c_e_Quot,
    a_Quot_F_r_e_n_c_h_Space_G_u_i_a_n_a_Quot,
    a_Quot_F_r_e_n_c_h_Space_P_o_l_y_n_e_s_i_a_Quot,
    a_Quot_F_r_e_n_c_h_Space_S_o_u_t_h_e_r_n_Space_a_n_d_Space_A_n_t_a_r_c_t_i_c_Space_L_a_n_d_s_Quot,
    a_Quot_G_C_C_Quot, a_Quot_G_Minus_1_0_Quot,
    a_Quot_G_Minus_1_1_Quot, a_Quot_G_Minus_1_5_Quot,
    a_Quot_G_Minus_2_4_Quot, a_Quot_G_Minus_3_Quot,
    a_Quot_G_Minus_5_Quot, a_Quot_G_Minus_6_Quot,
    a_Quot_G_Minus_7_7_Quot, a_Quot_G_Minus_7_Quot,
    a_Quot_G_Minus_8_Quot, a_Quot_G_Minus_9_Quot,
    a_Quot_G_a_b_o_n_Quot, a_Quot_G_a_m_b_i_a_Quot,
    a_Quot_G_a_z_a_Space_S_t_r_i_p_Quot, a_Quot_G_e_r_m_a_n_y_Quot,
    a_Quot_G_h_a_n_a_Quot, a_Quot_G_i_b_r_a_l_t_a_r_Quot,
    a_Quot_G_i_l_b_e_r_t_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_G_l_o_r_i_o_s_o_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_G_r_e_a_t_Space_B_r_i_t_a_i_n_Quot, a_Quot_G_r_e_e_c_e_Quot,
    a_Quot_G_r_e_e_n_l_a_n_d_Quot, a_Quot_G_r_e_n_a_d_a_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_1_0_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_1_1_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_1_5_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_2_4_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_3_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_5_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_6_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_7_7_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_7_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_8_Quot,
    a_Quot_G_r_o_u_p_Space_o_f_Space_9_Quot,
    a_Quot_G_r_o_u_p_e_Space_d_e_s_Space_S_i_x_Space_S_u_r_Space_l_e_Space_D_e_s_a_r_m_e_m_e_n_t_Quot,
    a_Quot_G_r_u_p_o_Space_d_e_Space_l_o_s_Space_O_c_h_o_Quot,
    a_Quot_G_u_a_d_e_l_o_u_p_e_Quot, a_Quot_G_u_a_m_Quot,
    a_Quot_G_u_a_t_e_m_a_l_a_Quot, a_Quot_G_u_e_r_n_s_e_y_Quot,
    a_Quot_G_u_i_n_e_a_Quot, a_Quot_G_u_i_n_e_a_Space_B_i_s_s_a_u_Quot,
    a_Quot_G_u_l_f_Space_C_o_o_p_e_r_a_t_i_o_n_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_G_u_y_a_n_a_Quot, a_Quot_H_a_b_i_t_a_t_Quot,
    a_Quot_H_a_i_t_i_Quot,
    a_Quot_H_e_a_r_d_Space_I_s_l_a_n_d_Space_a_n_d_Space_M_c_D_o_n_a_l_d_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_H_e_x_a_g_o_n_a_l_Space_I_n_i_t_i_a_t_i_v_e_Quot,
    a_Quot_H_o_l_y_Space_S_e_e_Quot, a_Quot_H_o_n_d_u_r_a_s_Quot,
    a_Quot_H_o_n_g_Space_K_o_n_g_Quot,
    a_Quot_H_o_w_l_a_n_d_Space_I_s_l_a_n_d_Quot,
    a_Quot_H_u_n_g_a_r_y_Quot, a_Quot_I_A_D_B_Quot,
    a_Quot_I_A_E_A_Quot, a_Quot_I_B_R_D_Quot, a_Quot_I_C_A_O_Quot,
    a_Quot_I_C_C_Quot, a_Quot_I_C_E_M_Quot, a_Quot_I_C_F_T_U_Quot,
    a_Quot_I_C_J_Quot, a_Quot_I_C_M_Quot, a_Quot_I_C_R_C_Quot,
    a_Quot_I_C_R_M_Quot, a_Quot_I_C_T_R_Quot, a_Quot_I_C_T_Y_Quot,
    a_Quot_I_D_A_Quot, a_Quot_I_D_B_Quot, a_Quot_I_E_A_Quot,
    a_Quot_I_F_A_D_Quot, a_Quot_I_F_C_Quot, a_Quot_I_F_C_T_U_Quot,
    a_Quot_I_F_R_C_S_Quot, a_Quot_I_G_A_D_D_Quot, a_Quot_I_G_A_D_Quot,
    a_Quot_I_H_O_Quot, a_Quot_I_L_O_Quot, a_Quot_I_M_C_O_Quot,
    a_Quot_I_M_F_Quot, a_Quot_I_M_O_Quot, a_Quot_I_N_S_T_R_A_W_Quot,
    a_Quot_I_O_C_Quot, a_Quot_I_O_M_Quot, a_Quot_I_S_O_Quot,
    a_Quot_I_T_U_Quot, a_Quot_I_c_e_l_a_n_d_Quot, a_Quot_I_n_O_C_Quot,
    a_Quot_I_n_d_i_a_Quot,
    a_Quot_I_n_d_i_a_n_Space_O_c_e_a_n_Space_C_o_m_m_i_s_s_i_o_n_Quot,
    a_Quot_I_n_d_o_n_e_s_i_a_Quot,
    a_Quot_I_n_t_e_r_Minus_A_m_e_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
    a_Quot_I_n_t_e_r_Minus_G_o_v_e_r_n_m_e_n_t_a_l_Space_A_u_t_h_o_r_i_t_y_Space_o_n_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
    a_Quot_I_n_t_e_r_Minus_G_o_v_e_r_n_m_e_n_t_a_l_Space_A_u_t_h_o_r_i_t_y_Space_o_n_Space_D_r_o_u_g_h_t_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
    a_Quot_I_n_t_e_r_g_o_v_e_r_n_m_e_n_t_a_l_Space_C_o_m_m_i_t_t_e_e_Space_f_o_r_Space_E_u_r_o_p_e_a_n_Space_M_i_g_r_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_g_o_v_e_r_n_m_e_n_t_a_l_Space_C_o_m_m_i_t_t_e_e_Space_f_o_r_Space_M_i_g_r_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_g_o_v_e_r_n_m_e_n_t_a_l_Space_M_a_r_i_t_i_m_e_Space_C_o_n_s_u_l_t_a_t_i_v_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_A_t_o_m_i_c_Space_E_n_e_r_g_y_Space_A_g_e_n_c_y_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_B_a_n_k_Space_f_o_r_Space_R_e_c_o_n_s_t_r_u_c_t_i_o_n_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_h_a_m_b_e_r_Space_o_f_Space_C_o_m_m_e_r_c_e_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_i_v_i_l_Space_A_v_i_a_t_i_o_n_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_o_m_m_i_t_t_e_e_Space_o_f_Space_t_h_e_Space_R_e_d_Space_C_r_o_s_s_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_o_n_f_e_d_e_r_a_t_i_o_n_Space_o_f_Space_F_r_e_e_Space_T_r_a_d_e_Space_U_n_i_o_n_s_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_o_u_r_t_Space_o_f_Space_J_u_s_t_i_c_e_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_r_i_m_i_n_a_l_Space_P_o_l_i_c_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_r_i_m_i_n_a_l_Space_T_r_i_b_u_n_a_l_Space_f_o_r_Space_R_w_a_n_d_a_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_r_i_m_i_n_a_l_Space_T_r_i_b_u_n_a_l_Space_f_o_r_Space_t_h_e_Space_F_o_r_m_e_r_Space_Y_u_g_o_s_l_a_v_i_a_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Space_A_s_s_o_c_i_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_E_n_e_r_g_y_Space_A_g_e_n_c_y_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_F_e_d_e_r_a_t_i_o_n_Space_o_f_Space_C_h_r_i_s_t_i_a_n_Space_T_r_a_d_e_Space_U_n_i_o_n_s_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_F_e_d_e_r_a_t_i_o_n_Space_o_f_Space_R_e_d_Space_C_r_o_s_s_Space_a_n_d_Space_R_e_d_Space_C_r_e_s_c_e_n_t_Space_S_o_c_i_e_t_i_e_s_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_F_i_n_a_n_c_e_Space_C_o_r_p_o_r_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_F_u_n_d_Space_f_o_r_Space_A_g_r_i_c_u_l_t_u_r_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_H_y_d_r_o_g_r_a_p_h_i_c_Space_B_u_r_e_a_u_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_H_y_d_r_o_g_r_a_p_h_i_c_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_L_a_b_o_r_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_M_a_r_i_t_i_m_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_M_o_n_e_t_a_r_y_Space_F_u_n_d_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_O_l_y_m_p_i_c_Space_C_o_m_m_i_t_t_e_e_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_M_i_g_r_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_S_t_a_n_d_a_r_d_i_z_a_t_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_R_e_d_Space_C_r_o_s_s_Space_a_n_d_Space_R_e_d_Space_C_r_e_s_c_e_n_t_Space_M_o_v_e_m_e_n_t_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_R_e_s_e_a_r_c_h_Space_a_n_d_Space_T_r_a_i_n_i_n_g_Space_I_n_s_t_i_t_u_t_e_Space_f_o_r_Space_t_h_e_Space_A_d_v_a_n_c_e_m_e_n_t_Space_o_f_Space_W_o_m_e_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_T_e_l_e_c_o_m_m_u_n_i_c_a_t_i_o_n_Space_U_n_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_T_e_l_e_g_r_a_p_h_Space_U_n_i_o_n_Quot,
    a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_U_n_i_o_n_Space_o_f_Space_A_m_e_r_i_c_a_n_Space_R_e_p_u_b_l_i_c_s_Quot,
    a_Quot_I_n_t_e_r_p_o_l_Quot, a_Quot_I_r_a_n_Quot,
    a_Quot_I_r_e_l_a_n_d_Quot,
    a_Quot_I_s_l_a_m_i_c_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
    a_Quot_I_s_l_e_Space_o_f_Space_M_a_n_Quot, a_Quot_I_s_r_a_e_l_Quot,
    a_Quot_I_t_a_l_y_Quot, a_Quot_J_a_m_a_i_c_a_Quot,
    a_Quot_J_a_n_Space_M_a_y_e_n_Space_I_s_l_a_n_d_Quot,
    a_Quot_J_a_p_a_n_Quot, a_Quot_J_a_r_v_i_s_Space_I_s_l_a_n_d_Quot,
    a_Quot_J_e_r_s_e_y_Quot,
    a_Quot_J_o_h_n_s_t_o_n_Space_A_t_o_l_l_Quot,
    a_Quot_J_o_r_d_a_n_Quot,
    a_Quot_J_u_a_n_Space_d_e_Space_N_o_v_a_Space_I_s_l_a_n_d_Quot,
    a_Quot_K_a_z_a_k_h_s_t_a_n_Quot, a_Quot_K_e_n_y_a_Quot,
    a_Quot_K_i_n_g_m_a_n_Space_R_e_e_f_Quot,
    a_Quot_K_i_r_i_b_a_t_i_Quot, a_Quot_K_u_w_a_i_t_Quot,
    a_Quot_K_y_r_g_y_z_s_t_a_n_Quot, a_Quot_L_A_E_S_Quot,
    a_Quot_L_A_I_A_Quot, a_Quot_L_A_S_Quot, a_Quot_L_O_R_C_S_Quot,
    a_Quot_L_a_o_s_Quot,
    a_Quot_L_a_t_i_n_Space_A_m_e_r_i_c_a_n_Space_E_c_o_n_o_m_i_c_Space_S_y_s_t_e_m_Quot,
    a_Quot_L_a_t_i_n_Space_A_m_e_r_i_c_a_n_Space_I_n_t_e_g_r_a_t_i_o_n_Space_A_s_s_o_c_i_a_t_i_o_n_Quot,
    a_Quot_L_a_t_v_i_a_Quot,
    a_Quot_L_e_a_g_u_e_Space_o_f_Space_A_r_a_b_Space_S_t_a_t_e_s_Quot,
    a_Quot_L_e_a_g_u_e_Space_o_f_Space_R_e_d_Space_C_r_o_s_s_Space_a_n_d_Space_R_e_d_Space_C_r_e_s_c_e_n_t_Space_S_o_c_i_e_t_i_e_s_Quot,
    a_Quot_L_e_b_a_n_o_n_Quot, a_Quot_L_e_s_o_t_h_o_Quot,
    a_Quot_L_i_b_e_r_i_a_Quot, a_Quot_L_i_b_y_a_Quot,
    a_Quot_L_i_e_c_h_t_e_n_s_t_e_i_n_Quot,
    a_Quot_L_i_t_h_u_a_n_i_a_Quot,
    a_Quot_L_o_n_d_o_n_Space_G_r_o_u_p_Quot,
    a_Quot_L_o_n_d_o_n_Space_S_u_p_p_l_i_e_r_s_Space_G_r_o_u_p_Quot,
    a_Quot_L_u_x_e_m_b_o_u_r_g_Quot, a_Quot_M_I_N_U_R_S_O_Quot,
    a_Quot_M_I_P_O_N_U_H_Quot, a_Quot_M_O_N_U_C_Quot,
    a_Quot_M_a_c_a_u_Quot, a_Quot_M_a_c_e_d_o_n_i_a_Quot,
    a_Quot_M_a_d_a_g_a_s_c_a_r_Quot, a_Quot_M_a_l_a_w_i_Quot,
    a_Quot_M_a_l_a_y_s_i_a_Quot, a_Quot_M_a_l_d_i_v_e_s_Quot,
    a_Quot_M_a_l_i_Quot, a_Quot_M_a_l_t_a_Quot,
    a_Quot_M_a_r_s_h_a_l_l_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_M_a_r_t_i_n_i_q_u_e_Quot, a_Quot_M_a_u_r_i_t_a_n_i_a_Quot,
    a_Quot_M_a_u_r_i_t_i_u_s_Quot, a_Quot_M_a_y_o_t_t_e_Quot,
    a_Quot_M_e_r_c_a_d_o_Space_C_o_m_u_n_Space_d_e_l_Space_C_o_n_o_Space_S_u_r_Quot,
    a_Quot_M_e_r_c_o_s_u_r_Quot, a_Quot_M_e_x_i_c_o_Quot,
    a_Quot_M_i_c_r_o_n_e_s_i_a_Quot,
    a_Quot_M_i_d_w_a_y_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_M_o_l_d_o_v_a_Quot, a_Quot_M_o_n_a_c_o_Quot,
    a_Quot_M_o_n_e_t_a_r_y_Space_a_n_d_Space_E_c_o_n_o_m_i_c_Space_C_o_m_m_u_n_i_t_y_Space_o_f_Space_C_e_n_t_r_a_l_Space_A_f_r_i_c_a_Quot,
    a_Quot_M_o_n_g_o_l_i_a_Quot, a_Quot_M_o_n_t_s_e_r_r_a_t_Quot,
    a_Quot_M_o_r_o_c_c_o_Quot, a_Quot_M_o_z_a_m_b_i_q_u_e_Quot,
    a_Quot_N_A_M_Quot, a_Quot_N_A_T_O_Quot, a_Quot_N_C_Quot,
    a_Quot_N_E_A_Quot, a_Quot_N_I_B_Quot, a_Quot_N_S_G_Quot,
    a_Quot_N_a_m_i_b_i_a_Quot, a_Quot_N_a_u_r_u_Quot,
    a_Quot_N_a_v_a_s_s_a_Space_I_s_l_a_n_d_Quot, a_Quot_N_e_p_a_l_Quot,
    a_Quot_N_e_t_h_e_r_l_a_n_d_s_Quot,
    a_Quot_N_e_t_h_e_r_l_a_n_d_s_Space_A_n_t_i_l_l_e_s_Quot,
    a_Quot_N_e_w_Space_C_a_l_e_d_o_n_i_a_Quot,
    a_Quot_N_e_w_Space_H_e_b_r_i_d_e_s_Quot,
    a_Quot_N_e_w_Space_Z_e_a_l_a_n_d_Quot,
    a_Quot_N_i_c_a_r_a_g_u_a_Quot, a_Quot_N_i_g_e_r_Quot,
    a_Quot_N_i_g_e_r_i_a_Quot, a_Quot_N_i_u_e_Quot,
    a_Quot_N_o_n_a_l_i_g_n_e_d_Space_M_o_v_e_m_e_n_t_Quot,
    a_Quot_N_o_r_d_i_c_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_N_o_r_d_i_c_Space_I_n_v_e_s_t_m_e_n_t_Space_B_a_n_k_Quot,
    a_Quot_N_o_r_f_o_l_k_Space_I_s_l_a_n_d_Quot,
    a_Quot_N_o_r_t_h_K_o_r_e_a_Quot,
    a_Quot_N_o_r_t_h_Space_A_t_l_a_n_t_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_N_o_r_t_h_Space_A_t_l_a_n_t_i_c_Space_T_r_e_a_t_y_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_N_o_r_t_h_e_r_n_Space_M_a_r_i_a_n_a_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_N_o_r_w_a_y_Quot,
    a_Quot_N_u_c_l_e_a_r_Space_E_n_e_r_g_y_Space_A_g_e_n_c_y_Quot,
    a_Quot_N_u_c_l_e_a_r_Space_S_u_p_p_l_i_e_r_s_Space_G_r_o_u_p_Quot,
    a_Quot_O_A_P_E_C_Quot, a_Quot_O_A_S_Quot, a_Quot_O_A_U_Quot,
    a_Quot_O_E_C_D_Quot,
    a_Quot_O_E_C_D_Space_N_u_c_l_e_a_r_Space_E_n_e_r_g_y_Space_A_g_e_n_c_y_Quot,
    a_Quot_O_E_C_S_Quot, a_Quot_O_I_C_Quot, a_Quot_O_P_A_N_A_L_Quot,
    a_Quot_O_P_C_W_Quot, a_Quot_O_P_E_C_Quot, a_Quot_O_S_C_E_Quot,
    a_Quot_O_m_a_n_Quot,
    a_Quot_O_r_g_a_n_i_s_m_o_Space_p_a_r_a_Space_l_a_Space_P_r_o_s_c_r_i_p_c_i_o_n_Space_d_e_Space_l_a_s_Space_A_r_m_a_s_Space_N_u_c_l_e_a_r_e_s_Space_e_n_Space_l_a_Space_A_m_e_r_i_c_a_Space_L_a_t_i_n_a_Space_y_Space_e_l_Space_C_a_r_i_b_e_Quot,
    a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
    a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_S_e_c_u_r_i_t_y_Space_a_n_d_Space_C_o_o_p_e_r_a_t_i_o_n_Space_i_n_Space_E_u_r_o_p_e_Quot,
    a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_t_h_e_Space_P_r_o_h_i_b_i_t_i_o_n_Space_o_f_Space_C_h_e_m_i_c_a_l_Space_W_e_a_p_o_n_s_Quot,
    a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_A_f_r_i_c_a_n_Space_U_n_i_t_y_Quot,
    a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_A_m_e_r_i_c_a_n_Space_S_t_a_t_e_s_Quot,
    a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_A_r_a_b_Space_P_e_t_r_o_l_e_u_m_Space_E_x_p_o_r_t_i_n_g_Space_C_o_u_n_t_r_i_e_s_Quot,
    a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_E_a_s_t_e_r_n_Space_C_a_r_i_b_b_e_a_n_Space_S_t_a_t_e_s_Quot,
    a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_P_e_t_r_o_l_e_u_m_Space_E_x_p_o_r_t_i_n_g_Space_C_o_u_n_t_r_i_e_s_Quot,
    a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_t_h_e_Space_I_s_l_a_m_i_c_Space_C_o_n_f_e_r_e_n_c_e_Quot,
    a_Quot_P_C_A_Quot, a_Quot_P_F_P_Quot,
    a_Quot_P_a_c_i_f_i_c_Space_C_o_m_m_u_n_i_t_y_Quot,
    a_Quot_P_a_c_i_f_i_c_Space_I_s_l_a_n_d_Space_F_o_r_u_m_Quot,
    a_Quot_P_a_k_i_s_t_a_n_Quot, a_Quot_P_a_l_a_u_Quot,
    a_Quot_P_a_l_m_y_r_a_Space_A_t_o_l_l_Quot, a_Quot_P_a_n_a_m_a_Quot,
    a_Quot_P_a_p_u_a_Space_N_e_w_Space_G_u_i_n_e_a_Quot,
    a_Quot_P_a_r_a_c_e_l_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_P_a_r_a_g_u_a_y_Quot, a_Quot_P_a_r_i_s_Space_C_l_u_b_Quot,
    a_Quot_P_a_r_t_n_e_r_s_h_i_p_Space_f_o_r_Space_P_e_a_c_e_Quot,
    a_Quot_P_e_r_m_a_n_e_n_t_Space_C_o_u_r_t_Space_o_f_Space_A_r_b_i_t_r_a_t_i_o_n_Quot,
    a_Quot_P_e_r_u_Quot, a_Quot_P_h_i_l_i_p_p_i_n_e_s_Quot,
    a_Quot_P_i_t_c_a_i_r_n_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_P_o_l_a_n_d_Quot, a_Quot_P_o_r_t_u_g_a_l_Quot,
    a_Quot_P_r_o_v_i_s_i_o_n_a_l_Space_I_n_t_e_r_g_o_v_e_r_n_m_e_n_t_a_l_Space_C_o_m_m_i_t_t_e_e_Space_f_o_r_Space_t_h_e_Space_M_o_v_e_m_e_n_t_Space_o_f_Space_M_i_g_r_a_n_t_s_Space_f_r_o_m_Space_E_u_r_o_p_e_Quot,
    a_Quot_P_u_e_r_t_o_Space_R_i_c_o_Quot, a_Quot_Q_a_t_a_r_Quot,
    a_Quot_Q_u_a_d_r_i_l_a_t_e_r_a_l_Space_I_n_i_t_i_a_t_i_v_e_Quot,
    a_Quot_R_G_Quot, a_Quot_R_O_C_Quot,
    a_Quot_R_e_d_Space_C_r_o_s_s_Quot,
    a_Quot_R_e_p_u_b_l_i_c_Space_O_f_Space_G_e_o_r_g_i_a_Quot,
    a_Quot_R_e_p_u_b_l_i_c_Space_o_f_Space_C_h_i_n_a_Quot,
    a_Quot_R_e_u_n_i_o_n_Quot, a_Quot_R_i_o_Space_G_r_o_u_p_Quot,
    a_Quot_R_o_m_a_n_i_a_Quot, a_Quot_R_u_s_s_i_a_Quot,
    a_Quot_R_w_a_n_d_a_Quot, a_Quot_S_A_A_R_C_Quot,
    a_Quot_S_A_C_U_Quot, a_Quot_S_A_D_C_C_Quot, a_Quot_S_A_D_C_Quot,
    a_Quot_S_E_L_A_Quot, a_Quot_S_P_C_Quot,
    a_Quot_S_a_i_n_t_Space_H_e_l_e_n_a_Quot,
    a_Quot_S_a_i_n_t_Space_K_i_t_t_s_Space_a_n_d_Space_N_e_v_i_s_Quot,
    a_Quot_S_a_i_n_t_Space_L_u_c_i_a_Quot,
    a_Quot_S_a_i_n_t_Space_P_i_e_r_r_e_Space_a_n_d_Space_M_i_q_u_e_l_o_n_Quot,
    a_Quot_S_a_i_n_t_Space_V_i_n_c_e_n_t_Space_a_n_d_Space_t_h_e_Space_G_r_e_n_a_d_i_n_e_s_Quot,
    a_Quot_S_a_m_o_a_Quot, a_Quot_S_a_n_Space_M_a_r_i_n_o_Quot,
    a_Quot_S_a_o_Space_T_o_m_e_Space_a_n_d_Space_P_r_i_n_c_i_p_e_Quot,
    a_Quot_S_a_u_d_i_Space_A_r_a_b_i_a_Quot, a_Quot_S_e_n_e_g_a_l_Quot,
    a_Quot_S_e_r_b_i_a_Space_a_n_d_Space_M_o_n_t_e_n_e_g_r_o_Quot,
    a_Quot_S_e_y_c_h_e_l_l_e_s_Quot,
    a_Quot_S_i_e_r_r_a_Space_L_e_o_n_e_Quot,
    a_Quot_S_i_n_g_a_p_o_r_e_Quot,
    a_Quot_S_i_s_t_e_m_a_Space_E_c_o_n_o_m_i_c_o_Space_L_a_t_i_n_o_a_m_e_r_i_c_a_n_a_Quot,
    a_Quot_S_l_o_v_a_k_i_a_Quot, a_Quot_S_l_o_v_e_n_i_a_Quot,
    a_Quot_S_o_l_o_m_o_n_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_S_o_m_a_l_i_a_Quot, a_Quot_S_o_u_t_h_K_o_r_e_a_Quot,
    a_Quot_S_o_u_t_h_Space_A_f_r_i_c_a_Quot,
    a_Quot_S_o_u_t_h_Space_A_s_i_a_n_Space_A_s_s_o_c_i_a_t_i_o_n_Space_f_o_r_Space_R_e_g_i_o_n_a_l_Space_C_o_o_p_e_r_a_t_i_o_n_Quot,
    a_Quot_S_o_u_t_h_Space_G_e_o_r_g_i_a_Space_a_n_d_Space_t_h_e_Space_S_o_u_t_h_Space_S_a_n_d_w_i_c_h_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_S_o_u_t_h_Space_P_a_c_i_f_i_c_Space_C_o_m_m_i_s_s_i_o_n_Quot,
    a_Quot_S_o_u_t_h_Space_P_a_c_i_f_i_c_Space_F_o_r_u_m_Quot,
    a_Quot_S_o_u_t_h_Space_P_a_c_i_f_i_c_Space_R_e_g_i_o_n_a_l_Space_T_r_a_d_e_Space_a_n_d_Space_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_A_g_r_e_e_m_e_n_t_Quot,
    a_Quot_S_o_u_t_h_e_r_n_Space_A_f_r_i_c_a_n_Space_C_u_s_t_o_m_s_Space_U_n_i_o_n_Quot,
    a_Quot_S_o_u_t_h_e_r_n_Space_A_f_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_C_o_m_m_u_n_i_t_y_Quot,
    a_Quot_S_o_u_t_h_e_r_n_Space_A_f_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_C_o_o_r_d_i_n_a_t_i_o_n_Space_C_o_n_f_e_r_e_n_c_e_Quot,
    a_Quot_S_o_u_t_h_e_r_n_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
    a_Quot_S_o_u_t_h_e_r_n_Space_C_o_n_e_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
    a_Quot_S_p_a_i_n_Quot, a_Quot_S_p_a_r_t_e_c_a_Quot,
    a_Quot_S_p_r_a_t_l_y_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_S_r_i_Space_L_a_n_k_a_Quot, a_Quot_S_u_d_a_n_Quot,
    a_Quot_S_u_r_i_n_a_m_e_Quot, a_Quot_S_v_a_l_b_a_r_d_Quot,
    a_Quot_S_w_a_z_i_l_a_n_d_Quot, a_Quot_S_w_e_d_e_n_Quot,
    a_Quot_S_w_i_t_z_e_r_l_a_n_d_Quot, a_Quot_S_y_r_i_a_Quot,
    a_Quot_T_a_i_w_a_n_Quot, a_Quot_T_a_j_i_k_i_s_t_a_n_Quot,
    a_Quot_T_a_n_z_a_n_i_a_Quot, a_Quot_T_h_a_i_l_a_n_d_Quot,
    a_Quot_T_o_g_o_Quot, a_Quot_T_o_k_e_l_a_u_Quot,
    a_Quot_T_o_n_g_a_Quot,
    a_Quot_T_r_i_n_i_d_a_d_Space_a_n_d_Space_T_o_b_a_g_o_Quot,
    a_Quot_T_r_o_m_e_l_i_n_Space_I_s_l_a_n_d_Quot,
    a_Quot_T_u_n_i_s_i_a_Quot, a_Quot_T_u_r_k_e_y_Quot,
    a_Quot_T_u_r_k_m_e_n_i_s_t_a_n_Quot,
    a_Quot_T_u_r_k_s_Space_a_n_d_Space_C_a_i_c_o_s_Space_I_s_l_a_n_d_s_Quot,
    a_Quot_T_u_v_a_l_u_Quot, a_Quot_U_D_E_A_C_Quot, a_Quot_U_K_Quot,
    a_Quot_U_N_A_M_S_I_L_Quot, a_Quot_U_N_C_C_Quot,
    a_Quot_U_N_C_H_S_Quot, a_Quot_U_N_C_T_A_D_Quot,
    a_Quot_U_N_D_O_F_Quot, a_Quot_U_N_D_P_Quot, a_Quot_U_N_E_P_Quot,
    a_Quot_U_N_E_S_C_O_Quot, a_Quot_U_N_F_I_C_Y_P_Quot,
    a_Quot_U_N_F_P_A_Quot, a_Quot_U_N_H_C_H_R_Quot,
    a_Quot_U_N_H_C_R_Quot, a_Quot_U_N_I_C_E_F_Quot,
    a_Quot_U_N_I_C_R_I_Quot, a_Quot_U_N_I_D_I_R_Quot,
    a_Quot_U_N_I_D_O_Quot, a_Quot_U_N_I_F_I_L_Quot,
    a_Quot_U_N_I_K_O_M_Quot, a_Quot_U_N_I_T_A_R_Quot,
    a_Quot_U_N_M_E_E_Quot, a_Quot_U_N_M_I_B_H_Quot,
    a_Quot_U_N_M_I_K_Quot, a_Quot_U_N_M_O_G_I_P_Quot,
    a_Quot_U_N_M_O_P_Quot, a_Quot_U_N_M_O_T_Quot,
    a_Quot_U_N_M_O_V_I_C_Quot, a_Quot_U_N_Minus_H_A_B_I_T_A_T_Quot,
    a_Quot_U_N_O_M_I_G_Quot, a_Quot_U_N_O_P_S_Quot,
    a_Quot_U_N_P_R_E_D_E_P_Quot, a_Quot_U_N_Quot,
    a_Quot_U_N_R_I_S_D_Quot, a_Quot_U_N_R_W_A_Quot,
    a_Quot_U_N_S_C_O_M_Quot, a_Quot_U_N_S_D_R_I_Quot,
    a_Quot_U_N_S_S_C_Quot,
    a_Quot_U_N_Space_F_u_n_d_Space_f_o_r_Space_P_o_p_u_l_a_t_i_o_n_Space_A_c_t_i_v_i_t_i_e_s_Quot,
    a_Quot_U_N_Space_G_e_n_e_r_a_l_Space_A_s_s_e_m_b_l_y_Quot,
    a_Quot_U_N_Space_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_h_i_l_d_r_e_n_s_Space_E_m_e_r_g_e_n_c_y_Space_F_u_n_d_Quot,
    a_Quot_U_N_T_A_E_T_Quot, a_Quot_U_N_T_S_O_Quot, a_Quot_U_N_U_Quot,
    a_Quot_U_P_U_Quot, a_Quot_U_g_a_n_d_a_Quot,
    a_Quot_U_k_r_a_i_n_e_Quot,
    a_Quot_U_n_i_o_n_Space_E_c_o_n_o_m_i_q_u_e_Space_e_t_Space_M_o_n_e_t_a_i_r_e_Space_O_u_e_s_t_Space_A_f_r_i_c_a_i_n_e_Quot,
    a_Quot_U_n_i_t_e_d_Space_A_r_a_b_Space_E_m_i_r_a_t_e_s_Quot,
    a_Quot_U_n_i_t_e_d_Space_K_i_n_g_d_o_m_Quot,
    a_Quot_U_n_i_t_e_d_Space_K_i_n_g_d_o_m_Space_o_f_Space_G_r_e_a_t_Space_B_r_i_t_a_i_n_Space_a_n_d_Space_N_o_r_t_h_e_r_n_Space_I_r_e_l_a_n_d_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_e_n_t_e_r_Space_f_o_r_Space_H_u_m_a_n_Space_S_e_t_t_l_e_m_e_n_t_s_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_h_i_l_d_r_e_n_s_Space_F_u_n_d_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_i_v_i_l_i_a_n_Space_P_o_l_i_c_e_Space_M_i_s_s_i_o_n_Space_i_n_Space_H_a_i_t_i_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_o_m_p_e_n_s_a_t_i_o_n_Space_C_o_m_m_i_s_s_i_o_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_o_n_f_e_r_e_n_c_e_Space_o_n_Space_T_r_a_d_e_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_D_e_v_e_l_o_p_m_e_n_t_Space_P_r_o_g_r_a_m_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_D_i_s_e_n_g_a_g_e_m_e_n_t_Space_O_b_s_e_r_v_e_r_Space_F_o_r_c_e_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_E_d_u_c_a_t_i_o_n_a_l_Comma_Space_S_c_i_e_n_t_i_f_i_c_Comma_Space_a_n_d_Space_C_u_l_t_u_r_a_l_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_E_n_v_i_r_o_n_m_e_n_t_Space_P_r_o_g_r_a_m_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_G_e_n_e_r_a_l_Space_A_s_s_e_m_b_l_y_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_H_i_g_h_Space_C_o_m_m_i_s_s_i_o_n_e_r_Space_f_o_r_Space_H_u_m_a_n_Space_R_i_g_h_t_s_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_H_i_g_h_Space_C_o_m_m_i_s_s_i_o_n_e_r_Space_f_o_r_Space_R_e_f_u_g_e_e_s_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_d_u_s_t_r_i_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_s_t_i_t_u_t_e_Space_f_o_r_Space_D_i_s_a_r_m_a_m_e_n_t_Space_R_e_s_e_a_r_c_h_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_s_t_i_t_u_t_e_Space_f_o_r_Space_T_r_a_i_n_i_n_g_Space_a_n_d_Space_R_e_s_e_a_r_c_h_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_t_e_r_i_m_Space_A_d_m_i_n_i_s_t_r_a_t_i_o_n_Space_M_i_s_s_i_o_n_Space_i_n_Space_K_o_s_o_v_o_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_t_e_r_i_m_Space_F_o_r_c_e_Space_i_n_Space_L_e_b_a_n_o_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_t_e_r_r_e_g_i_o_n_a_l_Space_C_r_i_m_e_Space_a_n_d_Space_J_u_s_t_i_c_e_Space_R_e_s_e_a_r_c_h_Space_I_n_s_t_i_t_u_t_e_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_r_a_q_Minus_K_u_w_a_i_t_Space_B_o_u_n_d_a_r_y_Space_D_e_m_a_r_c_a_t_i_o_n_Space_C_o_m_m_i_s_s_i_o_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_r_a_q_Minus_K_u_w_a_i_t_Space_O_b_s_e_r_v_a_t_i_o_n_Space_M_i_s_s_i_o_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_l_i_t_a_r_y_Space_O_b_s_e_r_v_e_r_Space_G_r_o_u_p_Space_i_n_Space_I_n_d_i_a_Space_a_n_d_Space_P_a_k_i_s_t_a_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_f_o_r_Space_t_h_e_Space_R_e_f_e_r_e_n_d_u_m_Space_i_n_Space_W_e_s_t_e_r_n_Space_S_a_h_a_r_a_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_i_n_Space_B_o_s_n_i_a_Space_a_n_d_Space_H_e_r_z_e_g_o_v_i_n_a_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_i_n_Space_E_t_h_i_o_p_i_a_Space_a_n_d_Space_E_r_i_t_r_e_a_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_i_n_Space_S_i_e_r_r_a_Space_L_e_o_n_e_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_o_f_Space_O_b_s_e_r_v_e_r_s_Space_i_n_Space_P_r_e_v_l_a_k_a_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_o_f_Space_O_b_s_e_r_v_e_r_s_Space_i_n_Space_T_a_j_i_k_i_s_t_a_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_o_n_i_t_o_r_i_n_g_Space_a_n_d_Space_V_e_r_i_f_i_c_a_t_i_o_n_Space_C_o_m_m_i_s_s_i_o_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_O_b_s_e_r_v_e_r_Space_M_i_s_s_i_o_n_Space_i_n_Space_G_e_o_r_g_i_a_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_O_f_f_i_c_e_Space_o_f_Space_P_r_o_j_e_c_t_Space_S_e_r_v_i_c_e_s_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_O_r_g_a_n_i_z_a_t_i_o_n_Space_M_i_s_s_i_o_n_Space_i_n_Space_t_h_e_Space_D_e_m_o_c_r_a_t_i_c_Space_R_e_p_u_b_l_i_c_Space_o_f_Space_t_h_e_Space_C_o_n_g_o_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_P_e_a_c_e_Minus_k_e_e_p_i_n_g_Space_F_o_r_c_e_Space_i_n_Space_C_y_p_r_u_s_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_P_o_p_u_l_a_t_i_o_n_Space_F_u_n_d_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_P_r_e_v_e_n_t_i_v_e_Space_D_e_p_l_o_y_m_e_n_t_Space_F_o_r_c_e_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_R_e_l_i_e_f_Space_a_n_d_Space_W_o_r_k_s_Space_A_g_e_n_c_y_Space_f_o_r_Space_P_a_l_e_s_t_i_n_e_Space_R_e_f_u_g_e_e_s_Space_i_n_Space_t_h_e_Space_N_e_a_r_Space_E_a_s_t_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_R_e_s_e_a_r_c_h_Space_I_n_s_t_i_t_u_t_e_Space_f_o_r_Space_S_o_c_i_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_e_c_r_e_t_a_r_i_a_t_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_e_c_u_r_i_t_y_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_o_c_i_a_l_Space_D_e_f_e_n_s_e_Space_R_e_s_e_a_r_c_h_Space_I_n_s_t_i_t_u_t_e_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_p_e_c_i_a_l_Space_C_o_m_m_i_s_s_i_o_n_Space_f_o_r_Space_t_h_e_Space_E_l_i_m_i_n_a_t_i_o_n_Space_o_f_Space_I_r_a_q_i_Space_W_e_a_p_o_n_s_Space_o_f_Space_M_a_s_s_Space_D_e_s_t_r_u_c_t_i_o_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_y_s_t_e_m_s_Space_S_t_a_f_f_Space_C_o_l_l_e_g_e_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_T_r_a_n_s_i_t_i_o_n_a_l_Space_A_d_m_i_n_i_s_t_r_a_t_i_o_n_Space_i_n_Space_E_a_s_t_Space_T_i_m_o_r_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_T_r_u_c_e_Space_S_u_p_e_r_v_i_s_i_o_n_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_T_r_u_s_t_e_e_s_h_i_p_Space_C_o_u_n_c_i_l_Quot,
    a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_U_n_i_v_e_r_s_i_t_y_Quot,
    a_Quot_U_n_i_t_e_d_Space_S_t_a_t_e_s_Quot,
    a_Quot_U_n_i_v_e_r_s_a_l_Space_P_o_s_t_a_l_Space_U_n_i_o_n_Quot,
    a_Quot_U_r_u_g_u_a_y_Quot, a_Quot_U_z_b_e_k_i_s_t_a_n_Quot,
    a_Quot_V_a_n_u_a_t_u_Quot, a_Quot_V_e_n_e_z_u_e_l_a_Quot,
    a_Quot_V_i_e_t_n_a_m_Quot,
    a_Quot_V_i_r_g_i_n_Space_I_s_l_a_n_d_s_Quot, a_Quot_W_A_D_B_Quot,
    a_Quot_W_A_E_M_U_Quot, a_Quot_W_C_L_Quot, a_Quot_W_C_O_Quot,
    a_Quot_W_E_U_Quot, a_Quot_W_F_P_Quot, a_Quot_W_F_T_U_Quot,
    a_Quot_W_H_O_Quot, a_Quot_W_I_P_O_Quot, a_Quot_W_M_O_Quot,
    a_Quot_W_P_Quot, a_Quot_W_T_o_O_Quot, a_Quot_W_T_r_O_Quot,
    a_Quot_W_a_k_e_Space_I_s_l_a_n_d_Quot,
    a_Quot_W_a_l_l_i_s_Space_a_n_d_Space_F_u_t_u_n_a_Quot,
    a_Quot_W_a_r_s_a_w_Space_P_a_c_t_Quot,
    a_Quot_W_a_s_s_e_n_a_a_r_Space_A_r_r_a_n_g_e_m_e_n_t_Quot,
    a_Quot_W_e_s_t_Space_A_f_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
    a_Quot_W_e_s_t_Space_A_f_r_i_c_a_n_Space_E_c_o_n_o_m_i_c_Space_a_n_d_Space_M_o_n_e_t_a_r_y_Space_U_n_i_o_n_Quot,
    a_Quot_W_e_s_t_Space_B_a_n_k_Quot,
    a_Quot_W_e_s_t_e_r_n_Space_E_u_r_o_p_e_a_n_Space_U_n_i_o_n_Quot,
    a_Quot_W_e_s_t_e_r_n_Space_S_a_h_a_r_a_Quot,
    a_Quot_W_o_r_l_d_Space_B_a_n_k_Quot,
    a_Quot_W_o_r_l_d_Space_B_a_n_k_Space_G_r_o_u_p_Quot,
    a_Quot_W_o_r_l_d_Space_C_o_n_f_e_d_e_r_a_t_i_o_n_Space_o_f_Space_L_a_b_o_r_Quot,
    a_Quot_W_o_r_l_d_Space_C_o_u_r_t_Quot,
    a_Quot_W_o_r_l_d_Space_C_u_s_t_o_m_s_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_W_o_r_l_d_Space_F_e_d_e_r_a_t_i_o_n_Space_o_f_Space_T_r_a_d_e_Space_U_n_i_o_n_s_Quot,
    a_Quot_W_o_r_l_d_Space_F_o_o_d_Space_P_r_o_g_r_a_m_Quot,
    a_Quot_W_o_r_l_d_Space_H_e_a_l_t_h_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_W_o_r_l_d_Space_I_n_t_e_l_l_e_c_t_u_a_l_Space_P_r_o_p_e_r_t_y_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_W_o_r_l_d_Space_M_e_t_e_o_r_o_l_o_g_i_c_a_l_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_W_o_r_l_d_Space_T_o_u_r_i_s_m_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_W_o_r_l_d_Space_T_r_a_d_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
    a_Quot_Y_e_m_e_n_Quot, a_Quot_Z_C_Quot, a_Quot_Z_a_m_b_i_a_Quot,
    a_Quot_Z_a_n_g_g_e_r_Space_C_o_m_m_i_t_t_e_e_Quot,
    a_Quot_Z_i_m_b_a_b_w_e_Quot, a_Quot_a_c_r_o_n_y_m_Quot,
    a_Quot_o_f_f_i_c_i_a_l_Space_n_a_m_e_Quot, abbreviation,
    administrativeCenter, agent, agentOperatesInArea,
    agreementAdoptionDate, agreementEffectiveDate,
    agreementEffectiveDuring, agreementRevisionDate, aimOfOrganization,
    associateInOrganization, associateWithStatus, attribute,
    candidateForPosition, capitalCity, cardinality,
    chamberOfLegislature, chanceryAddressInArea,
    chanceryFAXNumberInArea, chanceryMailingAddressInArea,
    chanceryTelephoneNumberInArea, chiefOfDiplomaticMission,
    chiefOfState, chiefOfStateType, commemoratesDate,
    conventionalLongName, conventionalShortName, dateDissolved,
    dateEstablished, dependentAreaOfType, dependentGeopoliticalArea,
    diplomaticOrganizationType, diplomaticRelations,
    diplomaticRepresentationType, diplomaticRepresentativeInRole,
    electionDatePlannedForPosition, electionForOrganization,
    electionForPosition, electionWinner, executiveBranch,
    flagDescription, flagImage, formerName, geopoliticalSubdivision,
    governmentType, headOfGovernment, holidayTimeInArea,
    independenceDate, judicialBranch, leaderPosition, legalSystemType,
    legislativeBranch, localLongName, localShortName, member,
    memberCount, names, nationalCelebration, nationalHoliday,
    occupiesPosition, organizationalObjective, partlyLocated,
    politicalPartyOfCountry, primaryGeopoliticalSubdivision,
    primaryGeopoliticalSubdivisionType, representativeAgentToAgent,
    roleAppointsRole, roleApprovesRole, roleNominatesRole,
    seatsHeldInOrganization, seatsInOrganizationCount,
    seatsWonInElection, subOrganization, successorOrganization,
    suffrageAgeMaximum, suffrageAgeMinimum, termLength,
    voteFractionReceived
        : U;
    BeginFn, CabinetFn, CardinalityFn, ConstitutionFn, ElectionFn,
    EndFn, ExecutiveBranchFn, GovernmentFn, ImmediateFutureFn,
    ImmediatePastFn, JudiciaryFn, LegislatureFn, MemberFn, MonthFn,
    OverseasAreaFn, RegionalLawFn, ResidentFn, SupremeCourtFn,
    VotingFn, WhenFn, Year, YearFn, a_n_o_t
        : U -> U;
    DayFn, MeasureFn, MemberRoleFn, Month, MonthFn, believes,
    conventionalLongName, holdsObligation, holdsRight, subProposition,
    suffrageAgeMaximum, suffrageAgeMinimum
        : U * U -> U;
    occupiesPosition : U * U * U -> U
preds dateEstablished : U;
      abbreviation, age, agent, agentOperatesInArea,
      agreementAdoptionDate, agreementEffectiveDate,
      agreementEffectiveDuring, associateInOrganization, attribute,
      capitalCity, cardinality, chiefOfStateType, citizen,
      claimedTerritory, commemoratesDate, containsInformation,
      contraryAttribute, conventionalLongName, conventionalShortName,
      currencyType, dateDissolved, dateEstablished,
      dependentGeopoliticalArea, desires, diplomaticRelations, disjoint,
      earlier, electionForOrganization, electionForPosition, employs,
      executiveBranch, formerName, geopoliticalSubdivision,
      governmentType, greaterThan, greaterThanOrEqualTo, hasPurpose,
      holdsDuring, holdsObligation, holidayTimeInArea, inScopeOfInterest,
      independenceDate, instance, judicialBranch, leader, leaderPosition,
      legalSystemType, legislativeBranch, lessThan, lessThanOrEqualTo,
      localLongName, localShortName, located, measure, meetsSpatially,
      member, memberCount, modalAttribute, names, nationalHoliday,
      organizationalObjective, overlapsTemporally, part, patient,
      possesses, primaryGeopoliticalSubdivision,
      primaryGeopoliticalSubdivisionType, range, rangeSubclass,
      relatedInternalConcept, seatsInOrganizationCount, subAttribute,
      subOrganization, subOrganizations, subProposition, subclass,
      subrelation, subsumesContentInstance, successorOrganization,
      suffrageAgeMaximum, suffrageAgeMinimum, time : U * U;
      agreementRevisionDate, associateWithStatus, candidateForPosition,
      capability, chiefOfState, confersObligation, confersRight,
      dependentAreaOfType, diplomaticOrganizationType,
      diplomaticRepresentationType, domain, domainSubclass,
      electionWinner, headOfGovernment, occupiesPosition,
      relatedExternalConcept, representativeAgentToAgent : U * U * U;
      diplomaticRepresentativeInRole, voteFractionReceived : U * U * U *
                                                             U
vars vACT, vADVICE, vAGE, vAGENT, vAGENT1, vAGENT2, vAGENT3,
     vAGERULE, vAGR, vAIM, vANYO, vAREA, vAREA2, vBRANCH, vCAB,
     vCANDIDATE, vCHAMBER1, vCHAMBER2, vCHANGE, vCITY, vCONST,
     vCONTENDER, vCORPUS, vCOUNT, vCOUNTRY, vCOUNTRY1, vCOUNTRY2,
     vCOUNTY, vCOURT, vDATE, vDAY, vDOC, vELECTION, vEV, vFORMULA,
     vFRACTION, vGOV, vGROUP, vHOLIDAY, vISLAND, vJOIN, vLEADER,
     vLEADING, vLEGE, vMEM, vMEMBERS, vMONTH, vNUMBER1, vNUMBER2, vORG,
     vORG1, vORG2, vORGANIZATION, vOVERAIM, vPART, vPERSON, vPERSON1,
     vPERSON2, vPLACE, vPOLITY, vPOSITION, vPROCESS, vRECEIVER, vREP,
     vREQ, vROLE, vROLE1, vROLE2, vSEATS, vSENDER, vSET, vSTATE,
     vSTATUS, vSUB, vSUBAREA, vSUFFRAGE, vTHING, vTIME, vTOPIC, vTYPE,
     vUNIT, vVOTER, vVOTING, vVOTINGAGE, vX, vYEAR, vagent, vorg: U
. instance(conventionalLongName, BinaryPredicate)
%{conventionalLongName
"(&%conventionalLongName ?NAME ?THING) 
means that the string ?NAME is the long form of the name conventionally 
used for ?THING."}%
. domain(conventionalLongName, a_1, SymbolicString)
. domain(conventionalLongName, a_2, Entity)
. relatedExternalConcept(a_Quot_o_f_f_i_c_i_a_l_Space_n_a_m_e_Quot,
                         conventionalLongName, EnglishLanguage)
. subrelation(conventionalLongName, names)
. instance(conventionalShortName, BinaryPredicate)
%{conventionalShortName
"(&%conventionalShortName ?NAME 
?THING) means that the string ?NAME is the short form of the name 
conventionally used for ?THING.  For a more specialized subset of short 
names, see &%abbreviation."}%
. domain(conventionalShortName, a_1, SymbolicString)
. domain(conventionalShortName, a_2, Entity)
. subrelation(conventionalShortName, names)
. instance(abbreviation, BinaryPredicate)
. domain(abbreviation, a_1, SymbolicString)
. domain(abbreviation, a_2, Entity)
. subrelation(abbreviation, conventionalShortName)
%{abbreviation
"(&%abbreviation ?STRING ?THING) means that 
?STRING is an abbreviation used to refer to ?THING.  Abbreviations include 
acronyms and other abbreviated forms."}%
. relatedExternalConcept(a_Quot_a_c_r_o_n_y_m_Quot,
                         conventionalShortName, EnglishLanguage)
. instance(localLongName, BinaryPredicate)
%{localLongName
"(&%localLongName ?NAME ?THING) means that 
the string ?NAME is the long form of the name used for ?THING in its local 
area or language."}%
. domain(localLongName, a_1, SymbolicString)
. domain(localLongName, a_2, Entity)
. instance(localShortName, BinaryPredicate)
%{localShortName
"(&%localShortName ?NAME ?THING) means that 
the string ?NAME is the short form of the name used for ?THING in its 
local area or language."}%
. domain(localShortName, a_1, SymbolicString)
. domain(localShortName, a_2, Entity)
. instance(formerName, BinaryPredicate)
%{formerName
"(&%formerName ?NAME ?THING) means that the 
string ?NAME is a name formerly used for ?THING."}%
. domain(formerName, a_1, SymbolicString)
. domain(formerName, a_2, Entity)
. instance(GazaStrip, GeopoliticalArea)
. instance(ParacelIslands, GeopoliticalArea)
. instance(SpratlyIslands, GeopoliticalArea)
. instance(WestBank, GeopoliticalArea)
. instance(WesternSahara, GeopoliticalArea)
. instance(Antarctica, GeopoliticalArea)
. instance(RedRiver, River)
. part(RedRiver, MississippiRiver)
. part(RedRiver, UnitedStates)
%{RedRiver
"A tributary of the Mississippi River."}%
. subclass(County, GeopoliticalArea)
. subclass(County, LandArea)
%{County
"A &%GeopoliticalArea that is a subdivision of a 
&%StateOrProvince. Aside from City, this is the smallest geopolitical 
subdivision, and it is known by various names in various counties, 
e.g. parrish, commune, etc."}%
. instance(vCOUNTY, County) =>
      exists vSTATE: U
          . instance(vSTATE, StateOrProvince) /\ part(vCOUNTY, vSTATE)
. instance(VirginIslands, Collection)
%{VirginIslands
"A &%Collection of &%Islands in the 
West Indies that are dependencies of the &%UnitedStates and the 
&%UnitedKingdom."}%
. member(vISLAND, VirginIslands) => instance(vISLAND, Island)
. instance(Guam, Island)
%{Guam
"An &%Island in the &%PacificOcean that is a 
protectorate of the &%UnitedStates."}%
. subclass(AmericanState, StateOrProvince)
%{AmericanState
"The class of states that make up the 
&%UnitedStates."}%
. instance(vSTATE, AmericanState) => part(vSTATE, UnitedStates)
. instance(Alaska, AmericanState)
%{Alaska
"The largest state in the &%UnitedStates."}%
. subclass(vUNIT, AreaMeasure)
  /\ measure(Alaska, MeasureFn(vNUMBER1, vUNIT))
  /\ measure(vSTATE, MeasureFn(vNUMBER2, vUNIT))
  /\ instance(vSTATE, AmericanState)
  /\ not Alaska = vSTATE =>
      lessThan(vNUMBER2, vNUMBER1)
. instance(California, AmericanState)
%{California
"The &%AmericanState with the highest population."}%
. instance(vSTATE, AmericanState) /\ not vSTATE = California =>
      greaterThan(ResidentFn(California), ResidentFn(vSTATE))
. instance(NewYorkState, AmericanState)
%{NewYorkState
"A populous state in the northeastern &%UnitedStates."}%
. instance(Pennsylvania, AmericanState)
%{Pennsylvania
"A mid-Atlantic &%AmericanState.  Its two major cities 
are Philadelphia and Pittsburgh."}%
. instance(Texas, AmericanState)
%{Texas
"The second largest &%AmericanState, located in the southwest 
on the Gulf of Mexico."}%
. instance(Virginia, AmericanState)
. meetsSpatially(Virginia, WashingtonDC)
. capitalCity(WashingtonDC, UnitedStates)
%{Virginia
"A state in the southeastern &%UnitedStates 
that borders on &%WashingtonDC."}%
. instance(Georgia, AmericanState)
%{Georgia
"A state in the southeastern &%UnitedStates."}%
. instance(NewEngland, GeographicArea)
. part(NewEngland, UnitedStates)
%{NewEngland
"A &%GeographicArea in the &%UnitedStates that is 
made up of the states of Maine, New Hampshire, Vermont, Massachusetts, Rhode Island, 
and Connecticut."}%
. subclass(AmericanCity, City)
%{AmericanCity
"The class of cities that are in the 
&%UnitedStates."}%
. instance(vCITY, AmericanCity) => part(vCITY, UnitedStates)
. instance(NewYorkCity, AmericanCity)
. part(NewYorkCity, NewYorkState)
%{NewYorkCity
"The largest city in the &%UnitedStates.  
A worldwide center of finance and culture, it is comprised of five boroughs."}%
. instance(vCITY, AmericanCity) =>
      lessThanOrEqualTo(CardinalityFn(ResidentFn(vCITY)),
                        CardinalityFn(ResidentFn(NewYorkCity)))
. instance(WashingtonDC, AmericanCity)
%{WashingtonDC
"The capital city of the &%UnitedStates."}%
. instance(Chicago, AmericanCity)
%{Chicago
"Often referred to as the second city, Chicago is 
the largest city in the midwestern United States."}%
. instance(Dallas, AmericanCity)
%{Dallas
"A large &%City in northeastern Texas."}%
. instance(KansasCityMissouri, AmericanCity)
. part(KansasCityMissouri, Missouri)
%{KansasCityMissouri
"A large &%City at the western edge of Missouri."}%
. instance(Boston, AmericanCity)
%{Boston
"The largest &%City in Massachusetts."}%
. instance(LosAngeles, AmericanCity)
. part(LosAngeles, California)
%{LosAngeles
"The largest &%City in &%California."}%
. instance(vCITY, AmericanCity)
  /\ part(vCITY, California)
  /\ not vCITY = LosAngeles =>
      greaterThan(ResidentFn(LosAngeles), ResidentFn(vCITY))
. instance(SanFrancisco, AmericanCity)
. part(SanFrancisco, California)
%{SanFrancisco
"A large &%City in &%California, located on the 
San Francisco Bay."}%
. instance(ManchesterNewHampshire, AmericanCity)
%{ManchesterNewHampshire
"The largest &%City in New Hampshire."}%
. instance(PuertoRico, Island)
. part(PuertoRico, UnitedStates)
%{PuertoRico
"An dependent part of the &%UnitedStates."}%
. instance(Europe, Continent)
%{Europe
"The second smallest &%Continent."}%
. meetsSpatially(Europe, Asia)
. subclass(EuropeanCity, City)
%{EuropeanCity
"The class of cities that are in &%Europe."}%
. instance(vCITY, EuropeanCity) => part(vCITY, Europe)
. instance(Paris, EuropeanCity)
. part(Paris, France)
%{Paris
"The capital of &%France and the largest &%City of the country."}%
. instance(vCITY, City) /\ part(vCITY, France) =>
      lessThanOrEqualTo(CardinalityFn(ResidentFn(vCITY)),
                        CardinalityFn(ResidentFn(Paris)))
. instance(London, City)
. part(London, UnitedKingdom)
%{London
"The capital city and the largest city of the
&%UnitedKingdom."}%
. instance(SovietUnion, EuropeanNation)
%{SovietUnion
"The former communist nation of the Soviet Union."}%
. subclass(IndependentState, GeopoliticalArea)
. subclass(IndependentState, Nation)
%{IndependentState
"&%IndependentState is a subclass of 
&%GeopoliticalArea, representing the classification 'Independent State' 
used by the CIA World Fact Book.  Cf. 
&%DependencyOrSpecialSovereigntyArea."}%
. subclass(DependencyOrSpecialSovereigntyArea, GeopoliticalArea)
. disjoint(IndependentState, DependencyOrSpecialSovereigntyArea)
. subclass(OverseasArea, DependencyOrSpecialSovereigntyArea)
%{DependencyOrSpecialSovereigntyArea
"&%DependencyOrSpecialSovereigntyArea is a subclass of 
&%GeopoliticalArea, representing the classification 'Dependency or Special 
Sovereignty Area' used by the CIA World Fact Book.  Cf. 
&%IndependentState."}%
. claimedTerritory(GazaStrip, Israel)
. claimedTerritory(GazaStrip, PalestinianLiberationOrganization)
. claimedTerritory(ParacelIslands, China)
. claimedTerritory(ParacelIslands, Taiwan)
. claimedTerritory(ParacelIslands, Vietnam)
. claimedTerritory(SpratlyIslands, China)
. claimedTerritory(SpratlyIslands, Taiwan)
. claimedTerritory(SpratlyIslands, Vietnam)
. claimedTerritory(WestBank, Israel)
. claimedTerritory(WestBank, PalestinianLiberationOrganization)
. claimedTerritory(WesternSahara, Morocco)
. dependentGeopoliticalArea(AmericanSamoa, UnitedStates)
%{AmericanSamoa
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(Anguilla, UnitedKingdom)
%{Anguilla
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(Aruba, Netherlands)
%{Aruba
"A dependency of the &%Netherlands"}%
. dependentGeopoliticalArea(AshmoreAndCartierIslands, Australia)
%{AshmoreAndCartierIslands
"A dependency of &%Australia"}%
. dependentGeopoliticalArea(BakerIsland, UnitedStates)
%{BakerIsland
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(BassasDaIndia, France)
%{BassasDaIndia
"A dependency of &%France"}%
. dependentGeopoliticalArea(Bermuda, UnitedKingdom)
%{Bermuda
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(BouvetIsland, Norway)
%{BouvetIsland
"A dependency of &%Norway"}%
. dependentGeopoliticalArea(BritishIndianOceanTerritory,
                            UnitedKingdom)
%{BritishIndianOceanTerritory
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(BritishVirginIslands, UnitedKingdom)
%{BritishVirginIslands
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(CaymanIslands, UnitedKingdom)
%{CaymanIslands
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(ChristmasIsland, Australia)
%{ChristmasIsland
"A dependency of &%Australia"}%
. dependentGeopoliticalArea(ClippertonIsland, France)
%{ClippertonIsland
"A dependency of &%France"}%
. dependentGeopoliticalArea(CocosKeelingIslands, Australia)
%{CocosKeelingIslands
"A dependency of &%Australia"}%
. dependentGeopoliticalArea(CookIslands, NewZealand)
%{CookIslands
"A dependency of &%NewZealand"}%
. dependentGeopoliticalArea(CoralSeaIslands, Australia)
%{CoralSeaIslands
"A dependency of &%Australia"}%
. dependentGeopoliticalArea(EuropaIsland, France)
%{EuropaIsland
"A dependency of &%France"}%
. dependentGeopoliticalArea(FalklandIslands, UnitedKingdom)
%{FalklandIslands
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(FaroeIslands, Denmark)
%{FaroeIslands
"A dependency of &%Denmark"}%
. dependentGeopoliticalArea(FrenchGuiana, France)
%{FrenchGuiana
"A dependency of &%France"}%
. dependentGeopoliticalArea(FrenchPolynesia, France)
%{FrenchPolynesia
"A dependency of &%France"}%
. dependentGeopoliticalArea(FrenchSouthernAndAntarcticLands,
                            France)
%{FrenchSouthernAndAntarcticLands
"A dependency of &%France"}%
. dependentGeopoliticalArea(Gibraltar, UnitedKingdom)
%{Gibraltar
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(GloriosoIslands, France)
%{GloriosoIslands
"A dependency of &%France"}%
. dependentGeopoliticalArea(Greenland, Denmark)
%{Greenland
"A dependency of &%Denmark"}%
. dependentGeopoliticalArea(Guadeloupe, France)
%{Guadeloupe
"A dependency of &%France"}%
. dependentGeopoliticalArea(Guam, UnitedStates)
%{Guam
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(Guernsey, UnitedKingdom)
%{Guernsey
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(HeardIslandAndMcDonaldIslands,
                            Australia)
%{HeardIslandAndMcDonaldIslands
"A dependency of &%Australia"}%
. dependentGeopoliticalArea(HongKong, China)
%{HongKong
"A dependency of &%China"}%
. dependentGeopoliticalArea(HowlandIsland, UnitedStates)
%{HowlandIsland
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(IsleOfMan, UnitedKingdom)
%{IsleOfMan
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(JanMayenIsland, Norway)
%{JanMayenIsland
"A dependency of &%Norway"}%
. dependentGeopoliticalArea(JarvisIsland, UnitedStates)
%{JarvisIsland
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(Jersey, UnitedKingdom)
%{Jersey
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(JohnstonAtoll, UnitedStates)
%{JohnstonAtoll
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(JuanDeNovaIsland, France)
%{JuanDeNovaIsland
"A dependency of &%France"}%
. dependentGeopoliticalArea(KingmanReef, UnitedStates)
%{KingmanReef
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(Macau, China)
%{Macau
"A dependency of &%China"}%
. dependentGeopoliticalArea(Martinique, France)
%{Martinique
"A dependency of &%France"}%
. dependentGeopoliticalArea(Mayotte, France)
%{Mayotte
"A dependency of &%France"}%
. dependentGeopoliticalArea(MidwayIslands, UnitedStates)
%{MidwayIslands
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(Montserrat, UnitedKingdom)
%{Montserrat
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(NavassaIsland, UnitedStates)
%{NavassaIsland
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(NetherlandsAntilles, Netherlands)
%{NetherlandsAntilles
"A dependency of the &%Netherlands"}%
. dependentGeopoliticalArea(NewCaledonia, France)
%{NewCaledonia
"A dependency of &%France"}%
. dependentGeopoliticalArea(Niue, NewZealand)
%{Niue
"A dependency of &%NewZealand"}%
. dependentGeopoliticalArea(NorfolkIsland, Australia)
%{NorfolkIsland
"A dependency of &%Australia"}%
. dependentGeopoliticalArea(NorthernMarianaIslands, UnitedStates)
%{NorthernMarianaIslands
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(PalmyraAtoll, UnitedStates)
%{PalmyraAtoll
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(PitcairnIslands, UnitedKingdom)
%{PitcairnIslands
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(PuertoRico, UnitedStates)
. dependentGeopoliticalArea(Reunion, France)
%{Reunion
"A dependency of &%France"}%
. dependentGeopoliticalArea(SaintHelena, UnitedKingdom)
%{SaintHelena
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(SaintPierreAndMiquelon, France)
%{SaintPierreAndMiquelon
"A dependency of &%France"}%
. dependentGeopoliticalArea(SouthGeorgiaAndTheSouthSandwichIslands,
                            UnitedKingdom)
%{SouthGeorgiaAndTheSouthSandwichIslands
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(Svalbard, Norway)
%{Svalbard
"A dependency of &%Norway"}%
. dependentGeopoliticalArea(Tokelau, NewZealand)
%{Tokelau
"A dependency of &%NewZealand"}%
. dependentGeopoliticalArea(TromelinIsland, France)
%{TromelinIsland
"A dependency of &%France"}%
. dependentGeopoliticalArea(TurksAndCaicosIslands, UnitedKingdom)
%{TurksAndCaicosIslands
"A dependency of the &%UnitedKingdom"}%
. dependentGeopoliticalArea(VirginIslands, UnitedStates)
%{VirginIslands
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(WakeIsland, UnitedStates)
%{WakeIsland
"A dependency of the &%UnitedStates"}%
. dependentGeopoliticalArea(WallisAndFutuna, France)
%{WallisAndFutuna
"A dependency of &%France"}%
. instance(AmericanSamoa, DependencyOrSpecialSovereigntyArea)
. instance(Anguilla, DependencyOrSpecialSovereigntyArea)
. instance(Aruba, DependencyOrSpecialSovereigntyArea)
. instance(AshmoreAndCartierIslands,
           DependencyOrSpecialSovereigntyArea)
. instance(BakerIsland, DependencyOrSpecialSovereigntyArea)
. instance(BassasDaIndia, DependencyOrSpecialSovereigntyArea)
. instance(Bermuda, DependencyOrSpecialSovereigntyArea)
. instance(BouvetIsland, DependencyOrSpecialSovereigntyArea)
. instance(BritishIndianOceanTerritory,
           DependencyOrSpecialSovereigntyArea)
. instance(BritishVirginIslands,
           DependencyOrSpecialSovereigntyArea)
. instance(CaymanIslands, DependencyOrSpecialSovereigntyArea)
. instance(ChristmasIsland, DependencyOrSpecialSovereigntyArea)
. instance(ClippertonIsland, DependencyOrSpecialSovereigntyArea)
. instance(CocosKeelingIslands, DependencyOrSpecialSovereigntyArea)
. instance(CookIslands, DependencyOrSpecialSovereigntyArea)
. instance(CoralSeaIslands, DependencyOrSpecialSovereigntyArea)
. instance(EuropaIsland, DependencyOrSpecialSovereigntyArea)
. instance(FalklandIslands, DependencyOrSpecialSovereigntyArea)
. instance(FaroeIslands, DependencyOrSpecialSovereigntyArea)
. instance(FrenchGuiana, DependencyOrSpecialSovereigntyArea)
. instance(FrenchPolynesia, DependencyOrSpecialSovereigntyArea)
. instance(FrenchSouthernAndAntarcticLands,
           DependencyOrSpecialSovereigntyArea)
. instance(Gibraltar, DependencyOrSpecialSovereigntyArea)
. instance(GloriosoIslands, DependencyOrSpecialSovereigntyArea)
. instance(Greenland, DependencyOrSpecialSovereigntyArea)
. instance(Guadeloupe, DependencyOrSpecialSovereigntyArea)
. instance(Guam, DependencyOrSpecialSovereigntyArea)
. instance(Guernsey, DependencyOrSpecialSovereigntyArea)
. instance(HeardIslandAndMcDonaldIslands,
           DependencyOrSpecialSovereigntyArea)
. instance(HongKong, DependencyOrSpecialSovereigntyArea)
. instance(HowlandIsland, DependencyOrSpecialSovereigntyArea)
. instance(IsleOfMan, DependencyOrSpecialSovereigntyArea)
. instance(JanMayenIsland, DependencyOrSpecialSovereigntyArea)
. instance(JarvisIsland, DependencyOrSpecialSovereigntyArea)
. instance(Jersey, DependencyOrSpecialSovereigntyArea)
. instance(JohnstonAtoll, DependencyOrSpecialSovereigntyArea)
. instance(JuanDeNovaIsland, DependencyOrSpecialSovereigntyArea)
. instance(KingmanReef, DependencyOrSpecialSovereigntyArea)
. instance(Macau, DependencyOrSpecialSovereigntyArea)
. instance(Martinique, DependencyOrSpecialSovereigntyArea)
. instance(Mayotte, DependencyOrSpecialSovereigntyArea)
. instance(MidwayIslands, DependencyOrSpecialSovereigntyArea)
. instance(Montserrat, DependencyOrSpecialSovereigntyArea)
. instance(NavassaIsland, DependencyOrSpecialSovereigntyArea)
. instance(NetherlandsAntilles, DependencyOrSpecialSovereigntyArea)
. instance(NewCaledonia, DependencyOrSpecialSovereigntyArea)
. instance(Niue, DependencyOrSpecialSovereigntyArea)
. instance(NorfolkIsland, DependencyOrSpecialSovereigntyArea)
. instance(NorthernMarianaIslands,
           DependencyOrSpecialSovereigntyArea)
. instance(PalestinianLiberationOrganization,
           PoliticalOrganization)
. instance(PalmyraAtoll, DependencyOrSpecialSovereigntyArea)
. instance(PitcairnIslands, DependencyOrSpecialSovereigntyArea)
. instance(PuertoRico, DependencyOrSpecialSovereigntyArea)
. instance(Reunion, DependencyOrSpecialSovereigntyArea)
. instance(SaintHelena, DependencyOrSpecialSovereigntyArea)
. instance(SaintPierreAndMiquelon,
           DependencyOrSpecialSovereigntyArea)
. instance(SouthGeorgiaAndTheSouthSandwichIslands,
           DependencyOrSpecialSovereigntyArea)
. instance(Svalbard, DependencyOrSpecialSovereigntyArea)
. instance(Tokelau, DependencyOrSpecialSovereigntyArea)
. instance(TromelinIsland, DependencyOrSpecialSovereigntyArea)
. instance(TurksAndCaicosIslands,
           DependencyOrSpecialSovereigntyArea)
. instance(VirginIslands, DependencyOrSpecialSovereigntyArea)
. instance(WakeIsland, DependencyOrSpecialSovereigntyArea)
. instance(WallisAndFutuna, DependencyOrSpecialSovereigntyArea)
. claimedTerritory(Antarctica, Argentina)
. claimedTerritory(Antarctica, Australia)
. claimedTerritory(Antarctica, Chile)
. claimedTerritory(Antarctica, France)
. claimedTerritory(Antarctica, NewZealand)
. claimedTerritory(Antarctica, Norway)
. claimedTerritory(Antarctica, UnitedKingdom)
. names(a_Quot_B_u_r_u_n_d_i_Quot, Burundi)
. names(a_Quot_C_e_n_t_r_a_l_Space_A_f_r_i_c_a_n_Space_R_e_p_u_b_l_i_c_Quot,
        CentralAfricanRepublic)
. names(a_Quot_C_h_a_d_Quot, Chad)
. names(a_Quot_D_e_m_o_c_r_a_t_i_c_Space_R_e_p_u_b_l_i_c_Space_o_f_Space_t_h_e_Space_C_o_n_g_o_Quot,
        DemocraticRepublicOfTheCongo)
. names(a_Quot_R_w_a_n_d_a_Quot, Rwanda)
. names(a_Quot_D_j_i_b_o_u_t_i_Quot, Djibouti)
. names(a_Quot_E_r_i_t_r_e_a_Quot, Eritrea)
. names(a_Quot_E_t_h_i_o_p_i_a_Quot, Ethiopia)
. names(a_Quot_K_e_n_y_a_Quot, Kenya)
. names(a_Quot_S_e_y_c_h_e_l_l_e_s_Quot, Seychelles)
. names(a_Quot_S_o_m_a_l_i_a_Quot, Somalia)
. names(a_Quot_T_a_n_z_a_n_i_a_Quot, Tanzania)
. names(a_Quot_U_g_a_n_d_a_Quot, Uganda)
. names(a_Quot_A_l_g_e_r_i_a_Quot, Algeria)
. names(a_Quot_E_g_y_p_t_Quot, Egypt)
. names(a_Quot_L_i_b_y_a_Quot, Libya)
. names(a_Quot_M_a_u_r_i_t_a_n_i_a_Quot, Mauritania)
. names(a_Quot_M_o_r_o_c_c_o_Quot, Morocco)
. names(a_Quot_S_u_d_a_n_Quot, Sudan)
. names(a_Quot_T_u_n_i_s_i_a_Quot, Tunisia)
. names(a_Quot_W_e_s_t_e_r_n_Space_S_a_h_a_r_a_Quot, WesternSahara)
. names(a_Quot_A_n_g_o_l_a_Quot, Angola)
. names(a_Quot_B_a_s_s_a_s_Space_d_a_Space_I_n_d_i_a_Quot,
        BassasDaIndia)
. names(a_Quot_B_o_t_s_w_a_n_a_Quot, Botswana)
. names(a_Quot_B_o_u_v_e_t_Space_I_s_l_a_n_d_Quot, BouvetIsland)
. names(a_Quot_C_o_m_o_r_o_s_Quot, Comoros)
. names(a_Quot_E_u_r_o_p_a_Space_I_s_l_a_n_d_Quot, EuropaIsland)
. names(a_Quot_G_l_o_r_i_o_s_o_Space_I_s_l_a_n_d_s_Quot,
        GloriosoIslands)
. names(a_Quot_H_e_a_r_d_Space_I_s_l_a_n_d_Space_a_n_d_Space_M_c_D_o_n_a_l_d_Space_I_s_l_a_n_d_s_Quot,
        HeardIslandAndMcDonaldIslands)
. names(a_Quot_J_u_a_n_Space_d_e_Space_N_o_v_a_Space_I_s_l_a_n_d_Quot,
        JuanDeNovaIsland)
. names(a_Quot_L_e_s_o_t_h_o_Quot, Lesotho)
. names(a_Quot_B_a_s_u_t_o_l_a_n_d_Quot, Lesotho)
. names(a_Quot_M_a_d_a_g_a_s_c_a_r_Quot, Madagascar)
. names(a_Quot_M_a_l_a_w_i_Quot, Malawi)
. names(a_Quot_M_a_u_r_i_t_i_u_s_Quot, Mauritius)
. names(a_Quot_M_a_y_o_t_t_e_Quot, Mayotte)
. names(a_Quot_M_o_z_a_m_b_i_q_u_e_Quot, Mozambique)
. names(a_Quot_N_a_m_i_b_i_a_Quot, Namibia)
. names(a_Quot_R_e_u_n_i_o_n_Quot, Reunion)
. names(a_Quot_S_o_u_t_h_Space_A_f_r_i_c_a_Quot, SouthAfrica)
. names(a_Quot_S_w_a_z_i_l_a_n_d_Quot, Swaziland)
. names(a_Quot_T_r_o_m_e_l_i_n_Space_I_s_l_a_n_d_Quot,
        TromelinIsland)
. names(a_Quot_Z_a_m_b_i_a_Quot, Zambia)
. names(a_Quot_Z_i_m_b_a_b_w_e_Quot, Zimbabwe)
. names(a_Quot_B_e_n_i_n_Quot, Benin)
. names(a_Quot_B_u_r_k_i_n_a_Space_F_a_s_o_Quot, BurkinaFaso)
. names(a_Quot_C_a_m_e_r_o_o_n_Quot, Cameroon)
. names(a_Quot_C_a_p_e_Space_V_e_r_d_e_Quot, CapeVerde)
. names(a_Quot_C_o_t_e_Space_d_'_I_v_o_i_r_e_Quot, CoteDIvoire)
. names(a_Quot_E_q_u_a_t_o_r_i_a_l_Space_G_u_i_n_e_a_Quot,
        EquatorialGuinea)
. names(a_Quot_G_a_b_o_n_Quot, Gabon)
. names(a_Quot_G_a_m_b_i_a_Quot, Gambia)
. names(a_Quot_G_h_a_n_a_Quot, Ghana)
. names(a_Quot_G_u_i_n_e_a_Quot, Guinea)
. names(a_Quot_G_u_i_n_e_a_Space_B_i_s_s_a_u_Quot, GuineaBissau)
. names(a_Quot_L_i_b_e_r_i_a_Quot, Liberia)
. names(a_Quot_M_a_l_i_Quot, Mali)
. names(a_Quot_N_i_g_e_r_Quot, Niger)
. names(a_Quot_N_i_g_e_r_i_a_Quot, Nigeria)
. names(a_Quot_S_a_o_Space_T_o_m_e_Space_a_n_d_Space_P_r_i_n_c_i_p_e_Quot,
        SaoTomeAndPrincipe)
. names(a_Quot_S_e_n_e_g_a_l_Quot, Senegal)
. names(a_Quot_S_i_e_r_r_a_Space_L_e_o_n_e_Quot, SierraLeone)
. names(a_Quot_T_o_g_o_Quot, Togo)
. names(a_Quot_S_a_i_n_t_Space_H_e_l_e_n_a_Quot, SaintHelena)
. names(a_Quot_B_a_h_r_a_i_n_Quot, Bahrain)
. names(a_Quot_C_y_p_r_u_s_Quot, Cyprus)
. names(a_Quot_G_a_z_a_Space_S_t_r_i_p_Quot, GazaStrip)
. names(a_Quot_I_r_a_n_Quot, Iran)
. names(a_Quot_I_r_a_n_Quot, Iraq)
. names(a_Quot_I_s_r_a_e_l_Quot, Israel)
. names(a_Quot_J_o_r_d_a_n_Quot, Jordan)
. names(a_Quot_K_u_w_a_i_t_Quot, Kuwait)
. names(a_Quot_L_e_b_a_n_o_n_Quot, Lebanon)
. names(a_Quot_O_m_a_n_Quot, Oman)
. names(a_Quot_Q_a_t_a_r_Quot, Qatar)
. names(a_Quot_S_a_u_d_i_Space_A_r_a_b_i_a_Quot, SaudiArabia)
. names(a_Quot_S_y_r_i_a_Quot, Syria)
. names(a_Quot_U_n_i_t_e_d_Space_A_r_a_b_Space_E_m_i_r_a_t_e_s_Quot,
        UnitedArabEmirates)
. names(a_Quot_W_e_s_t_Space_B_a_n_k_Quot, WestBank)
. names(a_Quot_Y_e_m_e_n_Quot, Yemen)
. names(a_Quot_A_u_s_t_r_i_a_Quot, Austria)
. names(a_Quot_C_z_e_c_h_Space_R_e_p_u_b_l_i_c_Quot, CzechRepublic)
. names(a_Quot_G_e_r_m_a_n_y_Quot, Germany)
. names(a_Quot_H_u_n_g_a_r_y_Quot, Hungary)
. names(a_Quot_L_i_e_c_h_t_e_n_s_t_e_i_n_Quot, Liechtenstein)
. names(a_Quot_P_o_l_a_n_d_Quot, Poland)
. names(a_Quot_S_l_o_v_a_k_i_a_Quot, Slovakia)
. names(a_Quot_S_l_o_v_e_n_i_a_Quot, Slovenia)
. names(a_Quot_S_w_i_t_z_e_r_l_a_n_d_Quot, Switzerland)
. names(a_Quot_B_e_l_a_r_u_s_Quot, Belarus)
. names(a_Quot_E_s_t_o_n_i_a_Quot, Estonia)
. names(a_Quot_L_a_t_v_i_a_Quot, Latvia)
. names(a_Quot_L_i_t_h_u_a_n_i_a_Quot, Lithuania)
. names(a_Quot_M_o_l_d_o_v_a_Quot, Moldova)
. names(a_Quot_U_k_r_a_i_n_e_Quot, Ukraine)
. names(a_Quot_D_e_n_m_a_r_k_Quot, Denmark)
. names(a_Quot_F_a_r_o_e_Space_I_s_l_a_n_d_s_Quot, FaroeIslands)
. names(a_Quot_F_i_n_l_a_n_d_Quot, Finland)
. names(a_Quot_I_c_e_l_a_n_d_Quot, Iceland)
. names(a_Quot_J_a_n_Space_M_a_y_e_n_Space_I_s_l_a_n_d_Quot,
        JanMayenIsland)
. names(a_Quot_N_o_r_w_a_y_Quot, Norway)
. names(a_Quot_S_v_a_l_b_a_r_d_Quot, Svalbard)
. names(a_Quot_S_w_e_d_e_n_Quot, Sweden)
. names(a_Quot_G_r_e_e_c_e_Quot, Greece)
. names(a_Quot_H_o_l_y_Space_S_e_e_Quot, HolySee)
. names(a_Quot_I_t_a_l_y_Quot, Italy)
. names(a_Quot_M_a_l_t_a_Quot, Malta)
. names(a_Quot_S_a_n_Space_M_a_r_i_n_o_Quot, SanMarino)
. names(a_Quot_B_e_l_g_i_u_m_Quot, Belgium)
. names(a_Quot_F_r_a_n_c_e_Quot, France)
. names(a_Quot_G_u_e_r_n_s_e_y_Quot, Guernsey)
. names(a_Quot_I_r_e_l_a_n_d_Quot, Ireland)
. names(a_Quot_J_e_r_s_e_y_Quot, Jersey)
. names(a_Quot_L_u_x_e_m_b_o_u_r_g_Quot, Luxembourg)
. names(a_Quot_I_s_l_e_Space_o_f_Space_M_a_n_Quot, IsleOfMan)
. names(a_Quot_M_o_n_a_c_o_Quot, Monaco)
. names(a_Quot_N_e_t_h_e_r_l_a_n_d_s_Quot, Netherlands)
. names(a_Quot_U_n_i_t_e_d_Space_K_i_n_g_d_o_m_Space_o_f_Space_G_r_e_a_t_Space_B_r_i_t_a_i_n_Space_a_n_d_Space_N_o_r_t_h_e_r_n_Space_I_r_e_l_a_n_d_Quot,
        UnitedKingdom)
. names(a_Quot_U_n_i_t_e_d_Space_K_i_n_g_d_o_m_Quot, UnitedKingdom)
. names(a_Quot_G_r_e_a_t_Space_B_r_i_t_a_i_n_Quot, UnitedKingdom)
. abbreviation(a_Quot_U_K_Quot, UnitedKingdom)
. names(a_Quot_A_l_b_a_n_i_a_Quot, Albania)
. names(a_Quot_B_o_s_n_i_a_Space_a_n_d_Space_H_e_r_z_e_g_o_v_i_n_a_Quot,
        BosniaAndHerzegovina)
. names(a_Quot_B_u_l_g_a_r_i_a_Quot, Bulgaria)
. names(a_Quot_C_r_o_a_t_i_a_Quot, Croatia)
. names(a_Quot_M_a_c_e_d_o_n_i_a_Quot, Macedonia)
. names(a_Quot_R_o_m_a_n_i_a_Quot, Romania)
. names(a_Quot_T_u_r_k_e_y_Quot, Turkey)
. names(a_Quot_S_e_r_b_i_a_Space_a_n_d_Space_M_o_n_t_e_n_e_g_r_o_Quot,
        SerbiaAndMontenegro)
. names(a_Quot_A_n_d_o_r_r_a_Quot, Andorra)
. names(a_Quot_G_i_b_r_a_l_t_a_r_Quot, Gibraltar)
. names(a_Quot_P_o_r_t_u_g_a_l_Quot, Portugal)
. names(a_Quot_S_p_a_i_n_Quot, Spain)
. names(a_Quot_B_e_r_m_u_d_a_Quot, Bermuda)
. names(a_Quot_U_n_i_t_e_d_Space_S_t_a_t_e_s_Quot, UnitedStates)
. names(a_Quot_C_a_n_a_d_a_Quot, Canada)
. names(a_Quot_G_r_e_e_n_l_a_n_d_Quot, Greenland)
. names(a_Quot_S_a_i_n_t_Space_P_i_e_r_r_e_Space_a_n_d_Space_M_i_q_u_e_l_o_n_Quot,
        SaintPierreAndMiquelon)
. names(a_Quot_A_n_g_u_i_l_l_a_Quot, Anguilla)
. names(a_Quot_A_n_t_i_g_u_a_Space_a_n_d_Space_B_a_r_b_u_d_a_Quot,
        AntiguaAndBarbuda)
. names(a_Quot_A_r_u_b_a_Quot, Aruba)
. names(a_Quot_B_a_h_a_m_a_s_Quot, TheBahamas)
. names(a_Quot_B_a_r_b_a_d_o_s_Quot, Barbados)
. names(a_Quot_B_r_i_t_i_s_h_Space_V_i_r_g_i_n_Space_I_s_l_a_n_d_s_Quot,
        BritishVirginIslands)
. abbreviation(a_Quot_B_V_I_Quot, BritishVirginIslands)
. names(a_Quot_C_a_y_m_a_n_Space_I_s_l_a_n_d_s_Quot, CaymanIslands)
. names(a_Quot_C_u_b_a_Quot, Cuba)
. names(a_Quot_D_o_m_i_n_i_c_a_Quot, Dominica)
. names(a_Quot_D_o_m_i_n_i_c_a_n_Space_R_e_p_u_b_l_i_c_Quot,
        DominicanRepublic)
. names(a_Quot_G_r_e_n_a_d_a_Quot, Grenada)
. names(a_Quot_G_u_a_d_e_l_o_u_p_e_Quot, Guadeloupe)
. names(a_Quot_H_a_i_t_i_Quot, Haiti)
. names(a_Quot_J_a_m_a_i_c_a_Quot, Jamaica)
. names(a_Quot_M_a_r_t_i_n_i_q_u_e_Quot, Martinique)
. names(a_Quot_M_o_n_t_s_e_r_r_a_t_Quot, Montserrat)
. names(a_Quot_N_a_v_a_s_s_a_Space_I_s_l_a_n_d_Quot, NavassaIsland)
. names(a_Quot_N_e_t_h_e_r_l_a_n_d_s_Space_A_n_t_i_l_l_e_s_Quot,
        NetherlandsAntilles)
. names(a_Quot_P_u_e_r_t_o_Space_R_i_c_o_Quot, PuertoRico)
. names(a_Quot_S_a_i_n_t_Space_K_i_t_t_s_Space_a_n_d_Space_N_e_v_i_s_Quot,
        SaintKittsAndNevis)
. names(a_Quot_S_a_i_n_t_Space_L_u_c_i_a_Quot, SaintLucia)
. names(a_Quot_S_a_i_n_t_Space_V_i_n_c_e_n_t_Space_a_n_d_Space_t_h_e_Space_G_r_e_n_a_d_i_n_e_s_Quot,
        SaintVincentAndTheGrenadines)
. names(a_Quot_T_r_i_n_i_d_a_d_Space_a_n_d_Space_T_o_b_a_g_o_Quot,
        TrinidadAndTobago)
. names(a_Quot_T_u_r_k_s_Space_a_n_d_Space_C_a_i_c_o_s_Space_I_s_l_a_n_d_s_Quot,
        TurksAndCaicosIslands)
. names(a_Quot_V_i_r_g_i_n_Space_I_s_l_a_n_d_s_Quot, VirginIslands)
. names(a_Quot_B_e_l_i_z_e_Quot, Belize)
. names(a_Quot_C_l_i_p_p_e_r_t_o_n_Space_I_s_l_a_n_d_Quot,
        ClippertonIsland)
. names(a_Quot_C_o_s_t_a_Space_R_i_c_a_Quot, CostaRica)
. names(a_Quot_E_l_Space_S_a_l_v_a_d_o_r_Quot, ElSalvador)
. names(a_Quot_G_u_a_t_e_m_a_l_a_Quot, Guatemala)
. names(a_Quot_H_o_n_d_u_r_a_s_Quot, Honduras)
. names(a_Quot_M_e_x_i_c_o_Quot, Mexico)
. names(a_Quot_N_i_c_a_r_a_g_u_a_Quot, Nicaragua)
. names(a_Quot_P_a_n_a_m_a_Quot, Panama)
. names(a_Quot_B_o_l_i_v_i_a_Quot, Bolivia)
. names(a_Quot_P_a_r_a_g_u_a_y_Quot, Paraguay)
. names(a_Quot_B_r_a_z_i_l_Quot, Brazil)
. names(a_Quot_C_o_l_o_m_b_i_a_Quot, Colombia)
. names(a_Quot_F_r_e_n_c_h_Space_G_u_i_a_n_a_Quot, FrenchGuiana)
. names(a_Quot_G_u_y_a_n_a_Quot, Guyana)
. names(a_Quot_S_u_r_i_n_a_m_e_Quot, Suriname)
. names(a_Quot_V_e_n_e_z_u_e_l_a_Quot, Venezuela)
. names(a_Quot_A_r_g_e_n_t_i_n_a_Quot, Argentina)
. names(a_Quot_C_h_i_l_e_Quot, Chile)
. names(a_Quot_F_a_l_k_l_a_n_d_Space_I_s_l_a_n_d_s_Quot,
        FalklandIslands)
. names(a_Quot_S_o_u_t_h_Space_G_e_o_r_g_i_a_Space_a_n_d_Space_t_h_e_Space_S_o_u_t_h_Space_S_a_n_d_w_i_c_h_Space_I_s_l_a_n_d_s_Quot,
        SouthGeorgiaAndTheSouthSandwichIslands)
. names(a_Quot_U_r_u_g_u_a_y_Quot, Uruguay)
. names(a_Quot_E_c_u_a_d_o_r_Quot, Ecuador)
. names(a_Quot_P_e_r_u_Quot, Peru)
. names(a_Quot_K_a_z_a_k_h_s_t_a_n_Quot, Kazakhstan)
. names(a_Quot_K_y_r_g_y_z_s_t_a_n_Quot, Kyrgyzstan)
. names(a_Quot_T_a_j_i_k_i_s_t_a_n_Quot, Tajikistan)
. names(a_Quot_T_u_r_k_m_e_n_i_s_t_a_n_Quot, Turkmenistan)
. names(a_Quot_U_z_b_e_k_i_s_t_a_n_Quot, Uzbekistan)
. names(a_Quot_C_h_i_n_a_Quot, China)
. names(a_Quot_H_o_n_g_Space_K_o_n_g_Quot, HongKong)
. names(a_Quot_J_a_p_a_n_Quot, Japan)
. names(a_Quot_N_o_r_t_h_K_o_r_e_a_Quot, NorthKorea)
. names(a_Quot_S_o_u_t_h_K_o_r_e_a_Quot, SouthKorea)
. names(a_Quot_M_a_c_a_u_Quot, Macau)
. names(a_Quot_T_a_i_w_a_n_Quot, Taiwan)
. names(a_Quot_R_e_p_u_b_l_i_c_Space_o_f_Space_C_h_i_n_a_Quot,
        Taiwan)
. abbreviation(a_Quot_R_O_C_Quot, Taiwan)
. names(a_Quot_M_o_n_g_o_l_i_a_Quot, Mongolia)
. names(a_Quot_R_u_s_s_i_a_Quot, Russia)
. names(a_Quot_A_f_g_h_a_n_i_s_t_a_n_Quot, Afghanistan)
. names(a_Quot_B_a_n_g_l_a_d_e_s_h_Quot, Bangladesh)
. names(a_Quot_B_h_u_t_a_n_Quot, Bhutan)
. names(a_Quot_B_r_i_t_i_s_h_Space_I_n_d_i_a_n_Space_O_c_e_a_n_Space_T_e_r_r_i_t_o_r_y_Quot,
        BritishIndianOceanTerritory)
. names(a_Quot_I_n_d_i_a_Quot, India)
. names(a_Quot_M_a_l_d_i_v_e_s_Quot, Maldives)
. names(a_Quot_N_e_p_a_l_Quot, Nepal)
. names(a_Quot_P_a_k_i_s_t_a_n_Quot, Pakistan)
. names(a_Quot_S_r_i_Space_L_a_n_k_a_Quot, SriLanka)
. names(a_Quot_F_r_e_n_c_h_Space_S_o_u_t_h_e_r_n_Space_a_n_d_Space_A_n_t_a_r_c_t_i_c_Space_L_a_n_d_s_Quot,
        FrenchSouthernAndAntarcticLands)
. names(a_Quot_A_s_h_m_o_r_e_Space_a_n_d_Space_C_a_r_t_i_e_r_Space_I_s_l_a_n_d_s_Quot,
        AshmoreAndCartierIslands)
. names(a_Quot_B_r_u_n_e_i_Quot, Brunei)
. names(a_Quot_B_u_r_m_a_Quot, Burma)
. names(a_Quot_C_a_m_b_o_d_i_a_Quot, Cambodia)
. names(a_Quot_C_h_r_i_s_t_m_a_s_Space_I_s_l_a_n_d_Quot,
        ChristmasIsland)
. names(a_Quot_C_o_c_o_s_Space_K_e_e_l_i_n_g_Space_I_s_l_a_n_d_s_Quot,
        CocosKeelingIslands)
. names(a_Quot_E_a_s_t_Space_T_i_m_o_r_Quot, EastTimor)
. names(a_Quot_I_n_d_o_n_e_s_i_a_Quot, Indonesia)
. names(a_Quot_L_a_o_s_Quot, Laos)
. names(a_Quot_M_a_l_a_y_s_i_a_Quot, Malaysia)
. names(a_Quot_P_a_p_u_a_Space_N_e_w_Space_G_u_i_n_e_a_Quot,
        PapuaNewGuinea)
. names(a_Quot_P_a_r_a_c_e_l_Space_I_s_l_a_n_d_s_Quot,
        ParacelIslands)
. names(a_Quot_P_h_i_l_i_p_p_i_n_e_s_Quot, Philippines)
. names(a_Quot_S_i_n_g_a_p_o_r_e_Quot, Singapore)
. names(a_Quot_S_p_r_a_t_l_y_Space_I_s_l_a_n_d_s_Quot,
        SpratlyIslands)
. names(a_Quot_T_h_a_i_l_a_n_d_Quot, Thailand)
. names(a_Quot_V_i_e_t_n_a_m_Quot, Vietnam)
. names(a_Quot_A_r_m_e_n_i_a_Quot, Armenia)
. names(a_Quot_A_z_e_r_b_a_i_j_a_n_Quot, Azerbaijan)
. names(a_Quot_R_e_p_u_b_l_i_c_Space_O_f_Space_G_e_o_r_g_i_a_Quot,
        RepublicOfGeorgia)
. names(a_Quot_A_m_e_r_i_c_a_n_Space_S_a_m_o_a_Quot, AmericanSamoa)
. names(a_Quot_A_u_s_t_r_a_l_i_a_Quot, Australia)
. names(a_Quot_B_a_k_e_r_Space_I_s_l_a_n_d_Quot, BakerIsland)
. names(a_Quot_C_o_o_k_Space_I_s_l_a_n_d_s_Quot, CookIslands)
. names(a_Quot_C_o_r_a_l_Space_S_e_a_Space_I_s_l_a_n_d_s_Quot,
        CoralSeaIslands)
. names(a_Quot_F_i_j_i_Quot, Fiji)
. names(a_Quot_F_r_e_n_c_h_Space_P_o_l_y_n_e_s_i_a_Quot,
        FrenchPolynesia)
. names(a_Quot_G_u_a_m_Quot, Guam)
. names(a_Quot_H_o_w_l_a_n_d_Space_I_s_l_a_n_d_Quot, HowlandIsland)
. names(a_Quot_J_a_r_v_i_s_Space_I_s_l_a_n_d_Quot, JarvisIsland)
. names(a_Quot_J_o_h_n_s_t_o_n_Space_A_t_o_l_l_Quot, JohnstonAtoll)
. names(a_Quot_K_i_n_g_m_a_n_Space_R_e_e_f_Quot, KingmanReef)
. names(a_Quot_K_i_r_i_b_a_t_i_Quot, Kiribati)
. formerName(a_Quot_G_i_l_b_e_r_t_Space_I_s_l_a_n_d_s_Quot,
             Kiribati)
. names(a_Quot_M_a_r_s_h_a_l_l_Space_I_s_l_a_n_d_s_Quot,
        MarshallIslands)
. names(a_Quot_M_i_c_r_o_n_e_s_i_a_Quot, Micronesia)
. conventionalLongName(a_Quot_F_e_d_e_r_a_t_e_d_Space_S_t_a_t_e_s_Space_o_f_Space_M_i_c_r_o_n_e_s_i_a_Quot,
                       Micronesia)
. names(a_Quot_M_i_d_w_a_y_Space_I_s_l_a_n_d_s_Quot, MidwayIslands)
. names(a_Quot_N_a_u_r_u_Quot, Nauru)
. names(a_Quot_N_e_w_Space_C_a_l_e_d_o_n_i_a_Quot, NewCaledonia)
. names(a_Quot_N_e_w_Space_Z_e_a_l_a_n_d_Quot, NewZealand)
. names(a_Quot_N_i_u_e_Quot, Niue)
. names(a_Quot_N_o_r_f_o_l_k_Space_I_s_l_a_n_d_Quot, NorfolkIsland)
. names(a_Quot_N_o_r_t_h_e_r_n_Space_M_a_r_i_a_n_a_Space_I_s_l_a_n_d_s_Quot,
        NorthernMarianaIslands)
. names(a_Quot_P_a_l_a_u_Quot, Palau)
. names(a_Quot_P_a_l_m_y_r_a_Space_A_t_o_l_l_Quot, PalmyraAtoll)
. names(a_Quot_P_i_t_c_a_i_r_n_Space_I_s_l_a_n_d_s_Quot,
        PitcairnIslands)
. names(a_Quot_S_a_m_o_a_Quot, Samoa)
. names(a_Quot_S_o_l_o_m_o_n_Space_I_s_l_a_n_d_s_Quot,
        SolomonIslands)
. names(a_Quot_T_o_k_e_l_a_u_Quot, Tokelau)
. names(a_Quot_T_o_n_g_a_Quot, Tonga)
. names(a_Quot_T_u_v_a_l_u_Quot, Tuvalu)
. formerName(a_Quot_E_l_l_i_c_e_Space_I_s_l_a_n_d_s_Quot, Tuvalu)
. names(a_Quot_V_a_n_u_a_t_u_Quot, Vanuatu)
. formerName(a_Quot_N_e_w_Space_H_e_b_r_i_d_e_s_Quot, Vanuatu)
. names(a_Quot_W_a_k_e_Space_I_s_l_a_n_d_Quot, WakeIsland)
. names(a_Quot_W_a_l_l_i_s_Space_a_n_d_Space_F_u_t_u_n_a_Quot,
        WallisAndFutuna)
. instance(dependentAreaOfType, TernaryPredicate)
. domain(dependentAreaOfType, a_1, GeopoliticalArea)
. domain(dependentAreaOfType, a_2, GeopoliticalArea)
. domainSubclass(dependentAreaOfType, a_3, GeopoliticalArea)
%{dependentAreaOfType
"(&%dependentAreaOfType ?AREA ?COUNTRY 
?TYPE) means that the &%GeopoliticalArea ?AREA is a dependency of the 
independent &%Nation ?COUNTRY, administered as a unit of ?TYPE.  For 
example, (&%dependentAreaOfType &%SaintHelena 
&%UnitedKingdomOfGreatBritainAndIreland &%OverseasArea)."}%
. dependentAreaOfType(vAREA, vCOUNTRY, vTYPE) =>
      instance(vAREA, vTYPE)
. subclass(NationalGovernment, Government)
%{NationalGovernment
"&%NationalGovernment is the class of 
national-level governments of &%Nations."}%
. instance(vORG, GovernmentOrganization) <=>
      instance(vORG, Government)
      \/ (exists vGOV: U
              . instance(vGOV, Government) /\ subOrganization(vORG, vGOV))
. instance(vCOUNTRY, Nation) =>
      instance(GovernmentFn(vCOUNTRY), NationalGovernment)
. instance(vAREA, GeopoliticalArea)
  /\ instance(GovernmentFn(vAREA), NationalGovernment) =>
      instance(vAREA, Nation)
. instance(governmentType, BinaryPredicate)
. domain(governmentType, a_1, Agent)
. domain(governmentType, a_2, FormOfGovernment)
. subrelation(governmentType, attribute)
%{governmentType
"(&%governmentType ?BODY ?FORM) means that 
the &%GeopoliticalArea or &%Organization ?BODY has a government with 
characteristic(s) of the type ?FORM."}%
. governmentType(vAGENT, vTYPE) =>
      instance(vAGENT, Organization)
      \/ instance(vAGENT, GeopoliticalArea)
. instance(vAREA, GeopoliticalArea)
  /\ governmentType(vAREA, vTYPE) =>
      attribute(GovernmentFn(vAREA), vTYPE)
. attribute(GovernmentFn(vAREA), vTYPE)
  /\ instance(vTYPE, FormOfGovernment) =>
      governmentType(vAREA, vTYPE)
. subclass(FormOfGovernment, RelationalAttribute)
%{FormOfGovernment
"&%FormOfGovernment is a class of 
&%Attributes used to describe the characteristics of a government, 
especially a &%NationalGovernment.  The concept &%FormOfGovernment is 
interpreted broadly enough to include &%Anarchy and &%Factionalism."}%
. instance(Monarchy, FormOfGovernment)
. instance(HereditaryMonarchy, FormOfGovernment)
. instance(Chiefdom, FormOfGovernment)
. instance(ConstitutionalMonarchy, FormOfGovernment)
. instance(Coprincipality, FormOfGovernment)
. instance(Republic, FormOfGovernment)
. instance(FederalRepublic, FormOfGovernment)
. instance(FederalDemocraticRepublic, FormOfGovernment)
. instance(ParliamentaryGovernment, FormOfGovernment)
. instance(ParliamentaryRepublic, FormOfGovernment)
. instance(ParliamentaryDemocracy, FormOfGovernment)
. instance(ParliamentaryDemocraticRepublic, FormOfGovernment)
. instance(FederalParliamentaryDemocracy, FormOfGovernment)
. instance(PresidentialGovernment, FormOfGovernment)
. instance(ConstitutionalGovernment, FormOfGovernment)
. instance(ConstitutionalRepublic, FormOfGovernment)
. instance(ConstitutionalParliamentaryDemocracy, FormOfGovernment)
. instance(ConstitutionalDemocraticRepublic, FormOfGovernment)
. instance(FederalGovernment, FormOfGovernment)
. instance(Federation, FormOfGovernment)
. instance(Commonwealth, FormOfGovernment)
. instance(Democracy, FormOfGovernment)
. instance(MultipartyDemocracy, FormOfGovernment)
. instance(TransitionalGovernment, FormOfGovernment)
. instance(EmergingDemocracy, FormOfGovernment)
. instance(Factionalism, FormOfGovernment)
. instance(Anarchy, FormOfGovernment)
. instance(AuthoritarianRegime, FormOfGovernment)
. instance(MilitaryDictatorship, FormOfGovernment)
. instance(Dictatorship, FormOfGovernment)
. instance(CommunistState, FormOfGovernment)
. instance(AuthoritarianSocialist, FormOfGovernment)
. instance(TheocraticGovernment, FormOfGovernment)
. instance(TheocraticRepublic, FormOfGovernment)
. instance(EcclesiasticalGovernment, FormOfGovernment)
. instance(IslamicGovernment, FormOfGovernment)
. instance(CompactOfFreeAssociationWithUnitedStates,
           FormOfGovernment)
. instance(CompactOfFreeAssociationWithNewZealand,
           FormOfGovernment)
. instance(UnitaryRule, FormOfGovernment)
%{Monarchy
"&%Monarchy is the attribute of a government 
that is ruled by a monarch, which is usually a hereditary role."}%
. governmentType(vPLACE, vTYPE) /\ subAttribute(vTYPE, Monarchy) =>
      exists vPERSON: U; vROLE: U
          . instance(vPERSON, Human)
            /\ chiefOfState(vPLACE, vROLE, vPERSON)
            /\ subAttribute(vROLE, Monarch)
. subAttribute(HereditaryMonarchy, Monarchy)
. subAttribute(Chiefdom, Monarchy)
. subAttribute(ConstitutionalMonarchy, Monarchy)
. subAttribute(AbsoluteMonarchy, Monarchy)
. governmentType(vPLACE, AbsoluteMonarchy)
  /\ instance(vPLACE, GeopoliticalArea) =>
      leaderPosition(vPLACE, Monarch)
. contraryAttribute(Monarchy, Republic)
. contraryAttribute(Monarchy, Federation)
%{ParliamentaryGovernment
"&%ParliamentaryGovernment is the 
attribute of a government whose chief &%LegislativeOrganization is a 
&%Parliament.  A parliamentary government is compatible with various 
other government types, including &%Monarchy."}%
. governmentType(vPLACE, vTYPE)
  /\ instance(vPLACE, GeopoliticalArea)
  /\ subAttribute(vTYPE, ParliamentaryGovernment) =>
      exists vORG: U
          . instance(vORG, Parliament)
            /\ subOrganization(vORG, GovernmentFn(vPLACE))
. subAttribute(ParliamentaryRepublic, ParliamentaryGovernment)
. subAttribute(ParliamentaryDemocracy, ParliamentaryGovernment)
. subAttribute(FederalParliamentaryDemocracy,
               ParliamentaryGovernment)
. subAttribute(ConstitutionalParliamentaryDemocracy,
               ParliamentaryGovernment)
%{FederalGovernment
"&%FederalGovernment is the attribute of 
a government that is formed by agreement between a collection of political 
units that agree to give up some of their power to the central government, 
while reserving some powers to themselves.  The government of the 
&%UnitedStates is a federal government, in which power is shared between 
the states and the central goverment, as set out in the U.S. 
Constitution."}%
. subAttribute(FederalRepublic, FederalGovernment)
. subAttribute(FederalDemocraticRepublic, FederalGovernment)
. subAttribute(FederalParliamentaryDemocracy, FederalGovernment)
. subAttribute(Federation, FederalGovernment)
. contraryAttribute(FederalGovernment, UnitaryRule)
. contraryAttribute(FederalGovernment, AuthoritarianRegime)
%{Republic
"&%Republic is the attribute of a government 
whose power and authority are vested in its members, who elect 
representatives to exercise that power."}%
. subAttribute(ConstitutionalRepublic, Republic)
. subAttribute(ConstitutionalDemocraticRepublic, Republic)
. subAttribute(FederalRepublic, Republic)
. subAttribute(ParliamentaryRepublic, Republic)
. subAttribute(ParliamentaryDemocraticRepublic, Republic)
. subAttribute(FederalDemocraticRepublic, Republic)
%{Democracy
"&%Democracy is the attribute of a government 
whose authority and rule are based in the will of the people governed.  
The will of the people is usually expressed through &%Elections, direct or 
indirect."}%
. subAttribute(FederalDemocraticRepublic, Democracy)
. subAttribute(ParliamentaryDemocracy, Democracy)
. subAttribute(ParliamentaryDemocraticRepublic, Democracy)
. subAttribute(FederalParliamentaryDemocracy, Democracy)
. subAttribute(ConstitutionalParliamentaryDemocracy, Democracy)
. subAttribute(ConstitutionalDemocraticRepublic, Democracy)
. subAttribute(MultipartyDemocracy, Democracy)
. subAttribute(EmergingDemocracy, Democracy)
%{ConstitutionalGovernment
"&%ConstitutionalGovernment is 
the attribute of a government whose authority and rule are guided by  
principles expressed in a written &%Constitution."}%
. subAttribute(ConstitutionalDemocracy, ConstitutionalGovernment)
. subAttribute(ConstitutionalMonarchy, ConstitutionalGovernment)
. subAttribute(ConstitutionalParliamentaryDemocracy,
               ConstitutionalDemocracy)
. subAttribute(ConstitutionalRepublic, ConstitutionalGovernment)
%{AuthoritarianRegime
"&%AuthoritarianRegime is the 
attribute of a government that rules autocratically, not allowing 
opposition."}%
. subAttribute(Dictatorship, AuthoritarianRegime)
. subAttribute(MilitaryDictatorship, Dictatorship)
. subAttribute(AbsoluteMonarchy, AuthoritarianRegime)
. subAttribute(CommunistState, AuthoritarianRegime)
. subAttribute(AuthoritarianSocialist, AuthoritarianRegime)
. subAttribute(TheocraticGovernment, AuthoritarianRegime)
. governmentType(vPLACE, MilitaryDictatorship) =>
      leaderPosition(vPLACE, MilitaryCommander)
. contraryAttribute(AuthoritarianRegime, MultipartyDemocracy)
%{TheocraticGovernment
"&%TheocraticGovernment is the 
attribute of a government that bases its authority on &%Religion."}%
. subAttribute(TheocraticRepublic, TheocraticGovernment)
. subAttribute(EcclesiasticalGovernment, TheocraticGovernment)
. subAttribute(IslamicGovernment, TheocraticGovernment)
. governmentType(vAGENT, vTYPE)
  /\ subAttribute(vTYPE, TheocraticGovernment)
  /\ instance(vAGENT, Organization) =>
      instance(vAGENT, ReligiousOrganization)
. governmentType(vAGENT, vTYPE)
  /\ subAttribute(vTYPE, TheocraticGovernment)
  /\ instance(vAGENT, GeopoliticalArea) =>
      instance(GovernmentFn(vAGENT), ReligiousOrganization)
%{UnitaryRule
"&%UnitaryRule is a &%FormOfGovernment in which 
the central government controls affairs at all levels, including the local 
level."}%
%{TransitionalGovernment
"&%TransitionalGovernment is the 
attribute of a government that is changing from one form of government 
to another.  This may be accompanied by social unrest or instability."}%
. subAttribute(EmergingDemocracy, TransitionalGovernment)
. subAttribute(Factionalism, TransitionalGovernment)
. instance(capitalCity, BinaryPredicate)
. domain(capitalCity, a_1, City)
. domain(capitalCity, a_2, GeopoliticalArea)
. subrelation(capitalCity, administrativeCenter)
%{capitalCity
"(&%capitalCity ?CITY ?REGION) means that the 
&%City ?CITY is the capital of the &%GeopoliticalArea ?REGION."}%
. instance(administrativeCenter, BinaryPredicate)
. domain(administrativeCenter, a_1, GeopoliticalArea)
. domain(administrativeCenter, a_2, GeopoliticalArea)
. subrelation(administrativeCenter, geopoliticalSubdivision)
%{administrativeCenter
"(&%administrativeCenter ?CENTER 
?REGION) means that ?CENTER is the &%City (or other area) from which 
the larger &%GeopoliticalArea ?REGION is administered."}%
. geopoliticalSubdivision(vSUB, vAREA) =>
      not instance(vSUB, IndependentState)
. instance(primaryGeopoliticalSubdivision, BinaryPredicate)
. instance(primaryGeopoliticalSubdivision, AsymmetricRelation)
. domain(primaryGeopoliticalSubdivision, a_1, GeopoliticalArea)
. domain(primaryGeopoliticalSubdivision, a_2, GeopoliticalArea)
. subrelation(primaryGeopoliticalSubdivision,
              geopoliticalSubdivision)
%{primaryGeopoliticalSubdivision
"(&%primaryGeopoliticalSubdivision ?AREA ?COUNTRY) means that the 
&%GeopoliticalArea ?AREA is one of the first-order administrative 
divisions of the &%Nation ?COUNTRY.  For example, in the United States, 
any of the fifty states.  This does not include subordinate regions that 
have a lesser status, such as British Crown colonies, U.S. territories, 
or protectorates.  See &%geopoliticalSubdivision."}%
. instance(primaryGeopoliticalSubdivisionType, BinaryPredicate)
. instance(primaryGeopoliticalSubdivisionType, AsymmetricRelation)
. domain(primaryGeopoliticalSubdivisionType, a_1, GeopoliticalArea)
. domainSubclass(primaryGeopoliticalSubdivisionType, a_2,
                 GeopoliticalArea)
%{primaryGeopoliticalSubdivisionType
"(&%primaryGeopoliticalSubdivisionType ?COUNTRY ?TYPE) means that the 
first-order administrative divisons of ?COUNTRY are of the type ?TYPE."}%
. primaryGeopoliticalSubdivisionType(vAREA, vTYPE) =>
      exists vSUBAREA: U
          . instance(vSUBAREA, vTYPE)
            /\ primaryGeopoliticalSubdivision(vSUBAREA, vAREA)
. primaryGeopoliticalSubdivisionType(vAREA, vTYPE)
  /\ primaryGeopoliticalSubdivision(vSUBAREA, vAREA) =>
      instance(vSUBAREA, vTYPE)
. instance(cardinality, BinaryPredicate)
. instance(cardinality, AsymmetricRelation)
. domain(cardinality, a_1, SetOrClass)
. domain(cardinality, a_2, NonnegativeInteger)
%{cardinality
"(&%cardinality ?SET ?NUMBER) means that there 
are ?NUMBER of elements in the &%SetOrClass ?SET."}%
. cardinality(vSET, vCOUNT) => CardinalityFn(vSET) = vCOUNT
. instance(vSET, SetOrClass) /\ CardinalityFn(vSET) = vCOUNT =>
      cardinality(vSET, vCOUNT)
. instance(dependentGeopoliticalArea, AsymmetricRelation)
. instance(dependentGeopoliticalArea, TransitiveRelation)
. domain(dependentGeopoliticalArea, a_1, GeopoliticalArea)
. domain(dependentGeopoliticalArea, a_2, GeopoliticalArea)
%{dependentGeopoliticalArea
"(&%dependentGeopoliticalArea 
?AREA1 ?AREA2) means that ?AREA1 is a geopolitical possession of the 
&%GeopoliticalArea ?AREA2 and is not a &%geopoliticalSubdivision of 
?AREA2.  For example, (&%dependentGeopoliticalArea &%Guam &%UnitedStates), 
because Guam is a territory of the &%UnitedStates, not one of the fifty 
U.S. states.  Contrast &%primaryGeopoliticalSubdivision."}%
. dependentGeopoliticalArea(vAREA, vCOUNTRY) =>
      possesses(vCOUNTRY, vAREA)
. dependentAreaOfType(vAREA, vCOUNTRY, vTYPE) =>
      dependentGeopoliticalArea(vAREA, vCOUNTRY)
. dependentGeopoliticalArea(vAREA, vCOUNTRY) =>
      not geopoliticalSubdivision(vAREA, vCOUNTRY)
. geopoliticalSubdivision(vAREA, vCOUNTRY) =>
      not dependentGeopoliticalArea(vAREA, vCOUNTRY)
. subclass(OverseasArea, GeopoliticalArea)
%{OverseasArea
"&%OverseasArea is the class of 
&%GeopoliticalAreas that are related to a &%Nation as overseas 
territories, possessions, protectorates, or departments."}%
. instance(vAREA, OverseasArea) =>
      exists vCOUNTRY: U
          . instance(vCOUNTRY, Nation)
            /\ dependentGeopoliticalArea(vAREA, vCOUNTRY)
. instance(OverseasAreaFn, UnaryFunction)
. domain(OverseasAreaFn, a_1, GeopoliticalArea)
. rangeSubclass(OverseasAreaFn, OverseasArea)
%{OverseasAreaFn
"(&%OverseasAreaFn ?AREA) denotes the class 
of &%OverseasAreas that belong to the &%GeopoliticalArea ?AREA."}%
. instance(vCOUNTRY, Nation)
  /\ instance(vAREA, OverseasAreaFn(vCOUNTRY)) =>
      dependentAreaOfType(vAREA, vCOUNTRY, OverseasArea)
. subclass(UnincorporatedUnitedStatesTerritory, OverseasArea)
. instance(vAREA, UnincorporatedUnitedStatesTerritory) =>
      dependentAreaOfType(vAREA, UnitedStates, OverseasArea)
. subclass(BritishCrownColony, OverseasArea)
. instance(vAREA, BritishCrownColony) =>
      dependentAreaOfType(vAREA, UnitedKingdom, BritishCrownColony)
. subclass(ParliamentaryTerritory, GeopoliticalArea)
. instance(vAREA, ParliamentaryTerritory) =>
      governmentType(GovernmentFn(vAREA), ParliamentaryGovernment)
. subclass(SelfGoverningTerritory, GeopoliticalArea)
. instance(independenceDate, BinaryPredicate)
. domain(independenceDate, a_1, GeopoliticalArea)
. domainSubclass(independenceDate, a_2, TimeInterval)
%{independenceDate
"(&%independenceDate ?AREA ?DATE) means 
that the &%GeopoliticalArea ?AREA achieved its sovereignty on the date 
?DATE.  For example, (&%independenceDate &%Afghanistan (&%DayFn 19 
(&%MonthFn &%August (&%YearFn 1919))))."}%
. independenceDate(vCOUNTRY1, vDATE) =>
      forall vCOUNTRY2: U
          . not dependentGeopoliticalArea(vCOUNTRY1, vCOUNTRY2)
. independenceDate(vAREA, vDATE) =>
      exists vTIME: U
          . instance(vTIME, vDATE)
            /\ holdsDuring(ImmediateFutureFn(vTIME),
                           True
                               when forall vCOUNTRY: U
                                        . not dependentGeopoliticalArea(vAREA,
                                                                        vCOUNTRY)
                               else False)
. instance(nationalCelebration, BinaryPredicate)
. domain(nationalCelebration, a_1, GeopoliticalArea)
. domainSubclass(nationalCelebration, a_2, Holiday)
. subrelation(nationalCelebration, nationalHoliday)
%{nationalCelebration
"(&%nationalCelebration ?AREA ?HOLIDAY) 
means that the primary day of national celebration in the 
&%GeopoliticalArea ?AREA is ?HOLIDAY.  For example, (&%nationalCelebration 
&%Afghanistan &%AfghanIndependenceDay)."}%
. instance(nationalHoliday, BinaryPredicate)
. domain(nationalHoliday, a_1, GeopoliticalArea)
. domainSubclass(nationalHoliday, a_2, Holiday)
%{nationalHoliday
"(&%nationalHoliday ?AREA ?HOLIDAY) means 
that ?HOLIDAY is a national holiday observed in ?AREA.  The 
&%GeopoliticalArea ?AREA observes a holiday on days specified as a 
?HOLIDAY, during which national government offices and other facilities 
typically are closed.  There may be multiple &%nationalHolidays.  For 
example, (&%nationalHoliday &%UnitedStates &%UnitedStatesMemorialDay)."}%
. subclass(Holiday, TimeInterval)
%{Holiday
"&%Holiday is the class of time periods that are 
observed as holidays in a country, culture, or religion.  Holidays may 
recur annually on the same date, or they may be moveable, for example, 
&%UnitedStatesThanksgivingDay falls on the last &%Thursday of each 
&%November."}%
. subclass(FixedHoliday, Holiday)
%{FixedHoliday
"&%FixedHoliday is the class of &%Holidays 
whose observance is fixed to recurrences of the calendar day that the 
holiday commemorates.  See &%commemoratesDate."}%
. subclass(MoveableHoliday, Holiday)
%{MoveableHoliday
"&%MoveableHoliday is the class of 
&%Holidays whose observance is not fixed to recurrences of any particular 
calendar day.  For example, &%UnitedStatesMemorialDay is observed on the 
last &%Monday of &%May."}%
. instance(commemoratesDate, BinaryPredicate)
. domain(commemoratesDate, a_1, Holiday)
. domainSubclass(commemoratesDate, a_2, TimeInterval)
%{commemoratesDate
"(&%commemoratesDate ?HOLIDAY ?DATE) means 
that instances of the &%Holiday ?HOLIDAY are observed to commemorate 
something that happened during the &%TimeInterval specified by ?DATE.  For 
example, (&%commemoratesDate &%BastilleDay (&%DayFn 14 (&%MonthFn &%July 
(&%YearFn 1789))))."}%
. commemoratesDate(vHOLIDAY,
                   DayFn(vDAY, MonthFn(vMONTH, YearFn(vYEAR))))
  /\ instance(vDATE, vHOLIDAY)
  /\ instance(vANYO, YearFn(vYEAR)) =>
      not earlier(vDATE, vANYO)
. commemoratesDate(vHOLIDAY,
                   DayFn(vDAY, MonthFn(vMONTH, YearFn(vYEAR))))
  /\ instance(vDATE, vHOLIDAY)
  /\ instance(vHOLIDAY, FixedHoliday) =>
      instance(vDATE, DayFn(vDAY, MonthFn(vMONTH)))
. instance(holidayTimeInArea, BinaryPredicate)
. instance(holidayTimeInArea, AsymmetricRelation)
. domain(holidayTimeInArea, a_1, GeopoliticalArea)
. domain(holidayTimeInArea, a_2, TimePosition)
%{holidayTimeInArea
"(&%holidayTimeInArea ?AREA 
?TIME) means that ?TIME is a particular time period during which &%Holiday 
is observed, thus during which normal government, business, and other 
services may not operate."}%
. nationalHoliday(vAREA, vHOLIDAY) /\ instance(vDAY, vHOLIDAY) =>
      holidayTimeInArea(vAREA, vDAY)
. subclass(Constitution, Proposition)
%{Constitution
"The class &%Constitution includes the bodies of
abstract principles formulated to guide the laws, institutions and practices 
of various &%Governments.  Also see &%ConstitutionDocument."}%
. instance(vCONST, Constitution) =>
      exists vFORMULA: U; vPART: U
          . instance(vFORMULA, Formula)
            /\ containsInformation(vFORMULA, vPART)
            /\ instance(vPART, Proposition)
            /\ subProposition(vPART, vCONST)
            /\ modalAttribute(vFORMULA, Obligation)
. instance(vCONST, Constitution) =>
      exists vFORMULA: U; vPART: U
          . instance(vFORMULA, Formula)
            /\ containsInformation(vFORMULA, vPART)
            /\ instance(vPART, Proposition)
            /\ subProposition(vPART, vCONST)
            /\ modalAttribute(vFORMULA, Permission)
. instance(ConstitutionFn, UnaryFunction)
. domain(ConstitutionFn, a_1, GeopoliticalArea)
. rangeSubclass(ConstitutionFn, Constitution)
%{ConstitutionFn
"(&%ConstitutionFn ?AREA) denotes a class 
containing all &%Constitutions adopted by the government of the 
&%GeopoliticalArea ?AREA.  For example, (&%ConstitutionFn &%UnitedStates) 
contains the &%ConstitutionOfTheUnitedStates."}%
. subclass(ConstitutionDocument, ContentBearingObject)
%{ConstitutionDocument
"&%ConstitutionDocument is the class 
of information-containing objects in which the &$Constitution of a 
government is encoded."}%
. instance(vDOC, ConstitutionDocument) =>
      exists vCONST: U
          . instance(vCONST, Constitution)
            /\ containsInformation(vDOC, vCONST)
. instance(agreementAdoptionDate, BinaryPredicate)
. instance(agreementAdoptionDate, AsymmetricRelation)
. domain(agreementAdoptionDate, a_1, Proposition)
. domainSubclass(agreementAdoptionDate, a_2, TimePosition)
%{agreementAdoptionDate
"(&%agreementAdoptionDate ?AGR ?TIME) 
means that the agreement ?AGR was adopted on the date indicated by ?TIME.  
For example, (&%agreementAdoptionDate &%ConstitutionOfTheUnitedStates 
(&%DayFn 17 (&%MonthFn &%September (&%YearFn 1787))))."}%
. agreementAdoptionDate(vAGR, vDATE) =>
      exists vPROCESS: U; vDAY: U
          . instance(vPROCESS, Committing)
            /\ instance(vDAY, vDATE)
            /\ patient(vPROCESS, vAGR)
            /\ time(vPROCESS, vDAY)
. instance(agreementEffectiveDate, BinaryPredicate)
. instance(agreementEffectiveDate, AsymmetricRelation)
. domain(agreementEffectiveDate, a_1, Proposition)
. domainSubclass(agreementEffectiveDate, a_2, TimePosition)
%{agreementEffectiveDate
"(&%agreementEffectiveDate ?AGR 
?TIME) means that the agreement ?AGR becomes effective on the date 
indicated by ?TIME.  For example, (&%agreementEffectiveDate 
&%ConstitutionOfTheUnitedStates (&%DayFn 4 (&%MonthFn &%March (&%YearFn 
1789))))."}%
. agreementEffectiveDate(vAGR, vDATE)
  /\ confersObligation(vFORMULA, vAGR, vAGENT)
  /\ instance(vTIME, vDATE) =>
      holdsDuring(ImmediateFutureFn(vTIME),
                  holdsObligation(vFORMULA, vAGENT))
. agreementEffectiveDate(vAGR, vDATE)
  /\ confersRight(vFORMULA, vAGR, vAGENT)
  /\ instance(vTIME, vDATE) =>
      holdsDuring(ImmediateFutureFn(vTIME), holdsRight(vFORMULA, vAGENT))
. instance(agreementRevisionDate, TernaryPredicate)
. instance(agreementRevisionDate, AsymmetricRelation)
. domain(agreementRevisionDate, a_1, Proposition)
. domainSubclass(agreementRevisionDate, a_2, TimePosition)
. domain(agreementRevisionDate, a_3, Proposition)
%{agreementRevisionDate
"(&%agreementRevisionDate ?AGR ?DATE ?CHANGE) means that the agreement 
?AGR was revised at the time indicated by ?DATE, with respect to the 
part ?CHANGE.  Revisions cover additions and removals."}%
. agreementRevisionDate(vAGR, vDATE, vCHANGE) =>
      exists vTIME: U
          . instance(vTIME, vDATE)
            /\ ((holdsDuring(ImmediatePastFn(vTIME),
                             a_n_o_t(subProposition(vCHANGE, vAGR)))
                 /\ holdsDuring(ImmediateFutureFn(vTIME),
                                subProposition(vCHANGE, vAGR)))
                \/ (holdsDuring(ImmediatePastFn(vTIME),
                                subProposition(vCHANGE, vAGR))
                    /\ holdsDuring(ImmediateFutureFn(vTIME),
                                   a_n_o_t(subProposition(vCHANGE, vAGR)))))
. instance(agreementEffectiveDuring, BinaryPredicate)
. instance(agreementEffectiveDuring, AsymmetricRelation)
. domain(agreementEffectiveDuring, a_1, Proposition)
. domainSubclass(agreementEffectiveDuring, a_2, TimePosition)
%{agreementEffectiveDuring
"(&%agreementEffectiveDuring ?AGR 
?DATE) means that the agreement ?AGR is effective during the time 
indicated by ?DATE.  The agreement may be effective for longer than ?DATE, 
but it is in effect at least throughout the time indicated by ?DATE."}%
. agreementEffectiveDuring(vAGR, vDATE)
  /\ instance(vTIME, vDATE)
  /\ instance(vFORMULA, Formula)
  /\ containsInformation(vFORMULA, vAGR) =>
      holdsDuring(vTIME, vFORMULA)
. instance(vCONST, ConstitutionFn(vCOUNTRY))
  /\ instance(vCOUNTRY, Nation)
  /\ vGOV = GovernmentFn(vCOUNTRY)
  /\ agreementEffectiveDuring(vAGR, WhenFn(vGOV))
  /\ subProposition(vPART, vAGR)
  /\ containsInformation(vFORMULA, vPART) =>
      holdsObligation(vFORMULA, vGOV)
. instance(legalSystemType, BinaryPredicate)
. domain(legalSystemType, a_1, GeopoliticalArea)
. domain(legalSystemType, a_2, LegalSystemAttribute)
%{legalSystemType
"(&%legalSystemType ?AREA ?TYPE) means 
that the &%GeopoliticalArea ?AREA has a legal system characterized by 
the &%LegalSystemAttribute ?TYPE.  For example, (&%legalSystemType 
&%UnitedStates &%EnglishCommonLaw).  A legal system may have multiple 
characteristics."}%
. legalSystemType(vAREA, vTYPE) =>
      attribute(JudiciaryFn(vAREA), vTYPE)
. subclass(LegalSystemAttribute, RelationalAttribute)
%{LegalSystemAttribute
"&%LegalSystemAttribute is the class 
of &%Attributes that are used to characterize legal systems, as, e.g., 
according to their sources, areas of concern, or principles of 
organization."}%
. instance(CivilLaw, LegalSystemAttribute)
%{CivilLaw
"&%CivilLaw is the attribute of legal systems 
based ultimately on the code of civil law developed in Ancient Rome.  
Civil law systems are characterized by their expression of laws in written 
code and statute and by their effort to use general principles to define 
and rationalize the laws."}%
. subAttribute(NapoleonicCode, CivilLaw)
. instance(NapoleonicCode, LegalSystemAttribute)
%{NapoleonicCode
"&%NapoleonicCode is the specialization of 
&%CivilLaw developed in France under Napoleon Bonaparte.  It is still the 
basis of French law as well as of legal systems developed under French 
influence."}%
. instance(EnglishCommonLaw, LegalSystemAttribute)
%{EnglishCommonLaw
"&%EnglishCommonLaw is the attribute of 
legal systems based on the common law developed in England and influential  
in its English-speaking colonies.  Common law is characterized by laws and 
rulings based on precedent and custom, rather than on written statute."}%
. instance(RomanCanonLaw, LegalSystemAttribute)
%{RomanCanonLaw
"&%RomanCanonLaw is the attribute of legal 
systems based on the Ecclesiastical law developed by the Roman Catholic 
Church."}%
. instance(IslamicLaw, LegalSystemAttribute)
%{IslamicLaw
"&%IslamicLaw is the &%Attribute of 
legal systems that are based on religious principles of Islam."}%
. instance(AcceptsICJJurisdiction, LegalSystemAttribute)
%{AcceptsICJJurisdiction
"&%AcceptsICJJurisdiction is the 
&%Attribute of a legal system that accepts rulings of the 
&%InternationalCourtOfJustice."}%
. instance(JudicialReviewOfLegislativeActs, LegalSystemAttribute)
%{JudicialReviewOfLegislativeActs
"&%JudicialReviewOfLegislativeActs is an attribute of legal systems 
in which the judiciary has authority to review acts of the legislature."}%
. instance(JudicialReviewOfExecutiveActs, LegalSystemAttribute)
%{JudicialReviewOfExecutiveActs
"&%JudicialReviewOfExecutiveActs is an attribute of legal systems 
in which the judiciary has authority to review acts of the executive 
branch."}%
. subclass(RegionalLaw, Proposition)
%{RegionalLaw
"&%RegionalLaw is the class of regional 
laws, considered as a body, established by particular &%Governments 
to regulate activities under their jurisdictions.  For example, 
(&%RegionalLawFn &%UnitedStates) represents the content of the laws, 
statutes, and rulings of the United States."}%
. instance(vCORPUS, RegionalLaw) => attribute(vCORPUS, Law)
. instance(vCORPUS, RegionalLaw)
  /\ subProposition(vPART, vCORPUS) =>
      attribute(vCORPUS, Law)
. instance(RegionalLawFn, UnaryFunction)
. domain(RegionalLawFn, a_1, GeopoliticalArea)
. range(RegionalLawFn, RegionalLaw)
%{RegionalLawFn
"(&%RegionalLawFn ?AREA) denotes the laws 
pertaining in the &%GeopoliticalArea ?AREA that are established and 
enforced by the &%Government of ?AREA.  For example, (&%RegionalLawFn 
&%UnitedStates) denotes the laws of the government of the &%UnitedStates 
and its constituent units."}%
. legalSystemType(vAREA, vTYPE) =>
      attribute(RegionalLawFn(vAREA), vTYPE)
. subclass(SuffrageLaw, Proposition)
%{SuffrageLaw
"&%SuffrageLaw is a class that includes the 
various types of suffrage rules of different &%Nations.  Instances of 
&%SuffrageLaw represent the propositional content of various suffrage 
laws."}%
. instance(vCOUNTRY, Nation)
  /\ governmentType(vCOUNTRY, Democracy) =>
      exists vSUFFRAGE: U
          . instance(vSUFFRAGE, SuffrageLaw)
            /\ subProposition(vSUFFRAGE, RegionalLawFn(vCOUNTRY))
. instance(VoterCitizenshipRequirement, SuffrageLaw)
. instance(vCOUNTRY, GeopoliticalArea)
  /\ governmentType(vCOUNTRY, Democracy) =>
      subProposition(VoterCitizenshipRequirement,
                     RegionalLawFn(vCOUNTRY))
. containsInformation(True
                          when forall vCOUNTRY: U; vELECTION: U; vVOTING: U;
                                      vVOTER: U
                                   . instance(vCOUNTRY, Nation)
                                     /\ instance(vELECTION,
                                                 ElectionFn(vCOUNTRY))
                                     /\ instance(vVOTING, VotingFn(vELECTION))
                                     /\ agent(vVOTING, vVOTER) =>
                                         citizen(vVOTER, vCOUNTRY)
                          else False,
                      VoterCitizenshipRequirement)
. subclass(VoterAgeRequirement, SuffrageLaw)
. instance(vCOUNTRY, Nation) =>
      exists vAGERULE: U
          . instance(vAGERULE, VoterAgeRequirement)
            /\ subProposition(vAGERULE, RegionalLawFn(vCOUNTRY))
. instance(suffrageAgeMinimum, BinaryPredicate)
%{suffrageAgeMinimum
"(&%suffrageAgeMinimum ?POLITY ?AGE) 
means that in the &%Organization or &%GeopoliticalArea ?POLITY, a person 
must be ?AGE or older in order to vote in the elections of ?POLITY."}%
. domain(suffrageAgeMinimum, a_1, Agent)
. domain(suffrageAgeMinimum, a_2, TimeDuration)
. suffrageAgeMinimum(vAGENT, vAGE) =>
      instance(vAGENT, Organization)
      \/ instance(vAGENT, GeopoliticalArea)
. instance(vAREA, GeopoliticalArea)
  /\ suffrageAgeMinimum(vAREA, vAGE) =>
      exists vAGERULE: U
          . instance(vAGERULE, VoterAgeRequirement)
            /\ subProposition(vAGERULE, RegionalLawFn(vAREA))
            /\ containsInformation(suffrageAgeMinimum(vAREA, vAGE), vAGERULE)
. suffrageAgeMinimum(vPOLITY, vVOTINGAGE)
  /\ instance(vELECTION, ElectionFn(vPOLITY))
  /\ capability(VotingFn(vELECTION), agent, vAGENT) =>
      exists vAGE: U
          . age(vAGENT, vAGE) /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
. suffrageAgeMinimum(vPOLITY, vVOTINGAGE)
  /\ instance(vELECTION, ElectionFn(vPOLITY))
  /\ capability(VotingFn(vELECTION), agent, vAGENT)
  /\ age(vAGENT, vAGE) =>
      greaterThanOrEqualTo(vAGE, vVOTINGAGE)
. instance(vELECTION, ElectionFn(vPOLITY))
  /\ instance(vACT, VotingFn(vELECTION))
  /\ agent(vACT, vAGENT)
  /\ suffrageAgeMinimum(vPOLITY, vVOTINGAGE) =>
      exists vAGE: U
          . age(vAGENT, vAGE) /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
. instance(vELECTION, ElectionFn(vPOLITY))
  /\ instance(vACT, VotingFn(vELECTION))
  /\ agent(vACT, vAGENT)
  /\ suffrageAgeMinimum(vPOLITY, vVOTINGAGE)
  /\ age(vAGENT, vAGE) =>
      greaterThanOrEqualTo(vAGE, vVOTINGAGE)
. instance(suffrageAgeMaximum, BinaryPredicate)
%{suffrageAgeMaximum
"(&%suffrageAgeMaximum ?POLITY ?AGE) 
means that in the &%Organization or &%GeopoliticalArea ?POLITY, a person 
must be ?AGE or younger in order to vote in the elections of ?POLITY."}%
. domain(suffrageAgeMaximum, a_1, Agent)
. domain(suffrageAgeMaximum, a_2, TimeDuration)
. suffrageAgeMaximum(vAGENT, vAGE) =>
      instance(vAGENT, Organization)
      \/ instance(vAGENT, GeopoliticalArea)
. instance(vAREA, GeopoliticalArea)
  /\ suffrageAgeMaximum(vAREA, vAGE) =>
      exists vAGERULE: U
          . instance(vAGERULE, VoterAgeRequirement)
            /\ subProposition(vAGERULE, RegionalLawFn(vAREA))
            /\ containsInformation(suffrageAgeMaximum(vAREA, vAGE), vAGERULE)
. suffrageAgeMaximum(vPOLITY, vVOTINGAGE)
  /\ instance(vELECTION, ElectionFn(vPOLITY))
  /\ capability(VotingFn(vELECTION), agent, vAGENT) =>
      exists vAGE: U
          . age(vAGENT, vAGE) /\ lessThanOrEqualTo(vAGE, vVOTINGAGE)
. suffrageAgeMaximum(vPOLITY, vVOTINGAGE)
  /\ instance(vELECTION, ElectionFn(vPOLITY))
  /\ capability(VotingFn(vELECTION), agent, vAGENT)
  /\ age(vAGENT, vAGE) =>
      lessThanOrEqualTo(vAGE, vVOTINGAGE)
. instance(vELECTION, ElectionFn(vPOLITY))
  /\ instance(vACT, VotingFn(vELECTION))
  /\ agent(vACT, vAGENT)
  /\ suffrageAgeMaximum(vPOLITY, vVOTINGAGE) =>
      exists vAGE: U
          . age(vAGENT, vAGE) /\ lessThanOrEqualTo(vAGE, vVOTINGAGE)
. instance(vELECTION, ElectionFn(vPOLITY))
  /\ instance(vACT, VotingFn(vELECTION))
  /\ agent(vACT, vAGENT)
  /\ suffrageAgeMaximum(vPOLITY, vVOTINGAGE)
  /\ age(vAGENT, vAGE) =>
      lessThanOrEqualTo(vAGE, vVOTINGAGE)
. instance(UniversalSuffrageLaw, SuffrageLaw)
%{UniversalSuffrageLaw
"&%UniversalSuffrageLaw is a law that 
enfranchises all &%citizens of a country who have achieved the applicable 
age of maturity (&%suffrageAgeMinumum)."}%
. containsInformation(True
                          when forall vPOLITY: U; vAGENT: U; vELECTION: U;
                                      vVOTINGAGE: U; vAGE: U
                                   . citizen(vAGENT, vPOLITY)
                                     /\ suffrageAgeMinimum(vPOLITY, vVOTINGAGE)
                                     /\ age(vAGENT, vAGE)
                                     /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
                                     /\ instance(vELECTION,
                                                 ElectionFn(vPOLITY)) =>
                                         capability(VotingFn(vELECTION), agent,
                                                    vAGENT)
                          else False,
                      UniversalSuffrageLaw)
. subProposition(UniversalSuffrageLaw, RegionalLawFn(vPOLITY)) =>
      forall vAGENT: U; vELECTION: U; vVOTINGAGE: U; vAGE: U
          . citizen(vAGENT, vPOLITY)
            /\ suffrageAgeMinimum(vPOLITY, vVOTINGAGE)
            /\ age(vAGENT, vAGE)
            /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
            /\ instance(vELECTION, ElectionFn(vPOLITY)) =>
                capability(VotingFn(vELECTION), agent, vAGENT)
. subProposition(UniversalSuffrageLaw, RegionalLawFn(vPOLITY))
  /\ citizen(vAGENT, vPOLITY)
  /\ suffrageAgeMinimum(vPOLITY, vVOTINGAGE)
  /\ age(vAGENT, vAGE)
  /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
  /\ instance(vELECTION, ElectionFn(vPOLITY)) =>
      capability(VotingFn(vELECTION), agent, vAGENT)
. citizen(vAGENT, vPOLITY)
  /\ subProposition(UniversalSuffrageLaw, RegionalLawFn(vPOLITY)) =>
      confersRight(True
                       when forall vVOTINGAGE: U; vAGE: U; vELECTION: U
                                . citizen(vAGENT, vPOLITY)
                                  /\ suffrageAgeMinimum(vPOLITY, vVOTINGAGE)
                                  /\ age(vAGENT, vAGE)
                                  /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
                                  /\ instance(vELECTION, ElectionFn(vPOLITY)) =>
                                      exists vVOTING: U
                                          . instance(vACT, VotingFn(vELECTION))
                                            /\ agent(vACT, vAGENT)
                       else False,
                   RegionalLawFn(vPOLITY), vAGENT)
. instance(CompulsorySuffrageLaw, SuffrageLaw)
%{CompulsorySuffrageLaw
"&%CompulsorySuffrageLaw is a law that 
requires all eligible voters in a country to vote, under threat of some 
penalty."}%
. containsInformation(True
                          when forall vPOLITY: U; vVOTER: U; vELECTION: U;
                                      vVOTINGAGE: U; vAGE: U
                                   . citizen(vVOTER, vPOLITY)
                                     /\ suffrageAgeMinimum(vPOLITY, vVOTINGAGE)
                                     /\ age(vVOTER, vAGE)
                                     /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
                                     /\ instance(vELECTION,
                                                 ElectionFn(vPOLITY)) =>
                                         exists vVOTING: U
                                             . instance(vVOTING,
                                                        VotingFn(vELECTION))
                                               /\ agent(vVOTING, vVOTER)
                          else False,
                      CompulsorySuffrageLaw)
. subProposition(CompulsorySuffrageLaw, RegionalLawFn(vPOLITY))
  /\ citizen(vAGENT, vPOLITY)
  /\ suffrageAgeMinimum(vPOLITY, vVOTINGAGE)
  /\ age(vAGENT, vAGE)
  /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
  /\ instance(vELECTION, ElectionFn(vPOLITY)) =>
      exists vVOTING: U
          . instance(vVOTING, VotingFn(vELECTION)) /\ agent(vVOTING, vAGENT)
. subProposition(CompulsorySuffrageLaw, RegionalLawFn(vPOLITY)) =>
      confersObligation(True
                            when forall vAGENT: U; vVOTINGAGE: U; vAGE: U;
                                        vELECTION: U
                                     . citizen(vAGENT, vPOLITY)
                                       /\ suffrageAgeMinimum(vPOLITY,
                                                             vVOTINGAGE)
                                       /\ age(vAGENT, vAGE)
                                       /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
                                       /\ instance(vELECTION,
                                                   ElectionFn(vPOLITY)) =>
                                           exists vVOTING: U
                                               . instance(vVOTING,
                                                          VotingFn(vELECTION))
                                                 /\ agent(vVOTING, vAGENT)
                            else False,
                        RegionalLawFn(vPOLITY), vPOLITY)
. subProposition(CompulsorySuffrageLaw, RegionalLawFn(vPOLITY))
  /\ citizen(vAGENT, vPOLITY) =>
      confersObligation(True
                            when forall vAGENT: U; vVOTINGAGE: U; vAGE: U;
                                        vELECTION: U
                                     . citizen(vAGENT, vPOLITY)
                                       /\ suffrageAgeMinimum(vPOLITY,
                                                             vVOTINGAGE)
                                       /\ age(vAGENT, vAGE)
                                       /\ greaterThanOrEqualTo(vAGE, vVOTINGAGE)
                                       /\ instance(vELECTION,
                                                   ElectionFn(vPOLITY)) =>
                                           exists vVOTING: U
                                               . instance(vVOTING,
                                                          VotingFn(vELECTION))
                                                 /\ agent(vVOTING, vAGENT)
                            else False,
                        RegionalLawFn(vPOLITY), vAGENT)
. subclass(RestrictedSuffrage, SuffrageLaw)
%{RestrictedSuffrage
"&%RestrictedSuffrage is a subclass of 
&%SuffrageLaw covering laws that restrict suffrage by further 
conditions beyond the basics of citizenship and age."}%
. instance(ExclusiveMaleSuffrage, RestrictedSuffrage)
. containsInformation(True
                          when forall vAGENT: U; vVOTER: U; vELECTION: U;
                                      vVOTING: U
                                   . instance(vELECTION, ElectionFn(vAGENT))
                                     /\ instance(vVOTING, VotingFn(vELECTION))
                                     /\ agent(vVOTING, vVOTER) =>
                                         attribute(vVOTER, Male)
                          else False,
                      ExclusiveMaleSuffrage)
. subProposition(ExclusiveMaleSuffrage, RegionalLawFn(vPOLITY))
  /\ citizen(vAGENT, vPOLITY)
  /\ instance(vELECTION, ElectionFn(vPOLITY))
  /\ capability(VotingFn(vELECTION), agent, vAGENT) =>
      attribute(vAGENT, Male)
. subProposition(ExclusiveMaleSuffrage, RegionalLawFn(vPOLITY))
  /\ citizen(vAGENT, vPOLITY)
  /\ instance(vELECTION, ElectionFn(vPOLITY))
  /\ instance(vACT, VotingFn(vELECTION))
  /\ agent(vACT, vAGENT) =>
      attribute(vAGENT, Male)
. subProposition(ExclusiveMaleSuffrage, RegionalLawFn(vPOLITY))
  /\ attribute(vAGENT, Female)
  /\ instance(vELECTION, Election) =>
      not capability(VotingFn(vELECTION), agent, vAGENT)
. instance(executiveBranch, BinaryPredicate)
. instance(executiveBranch, AsymmetricRelation)
. domain(executiveBranch, a_1, Organization)
. domain(executiveBranch, a_2, Agent)
%{executiveBranch
"(&%executiveBranch ?BRANCH ?ORG) means 
that the &%Organization ?BRANCH is the executive branch of the 
&%GeopoliticalArea or &%Organization ?ORG, that is, its executive offices  
and bodies, considered as a whole."}%
. executiveBranch(vBRANCH, vAGENT) =>
      instance(vBRANCH, GeopoliticalArea)
      \/ instance(vBRANCH, Organization)
. executiveBranch(vBRANCH, vAREA)
  /\ instance(vAREA, GeopoliticalArea) =>
      instance(vBRANCH, GovernmentOrganization)
. executiveBranch(vBRANCH, vORG) /\ instance(vORG, Organization) =>
      subOrganization(vBRANCH, vORG)
. executiveBranch(vBRANCH, vAREA)
  /\ instance(vAREA, GeopoliticalArea) =>
      subOrganization(vBRANCH, GovernmentFn(vAREA))
. executiveBranch(vBRANCH, vAREA)
  /\ instance(vAREA, GeopoliticalArea)
  /\ subOrganization(vORG, vBRANCH) =>
      subOrganization(vORG, GovernmentFn(vAREA))
. instance(ExecutiveBranchFn, UnaryFunction)
. domain(ExecutiveBranchFn, a_1, Agent)
. range(ExecutiveBranchFn, Organization)
%{ExecutiveBranchFn
"(&%ExecutiveBranchFn ?ORG) denotes the 
executive branch of ?ORG, with all its officials and agencies, considered 
as a whole."}%
. executiveBranch(vBRANCH, vAGENT) =>
      vBRANCH = ExecutiveBranchFn(vAGENT)
. instance(ExecutiveBranchFn(vAGENT), Organization) =>
      executiveBranch(ExecutiveBranchFn(vAGENT), vAGENT)
. instance(ExecutiveBranchFn(vAREA), Organization)
  /\ instance(vAREA, GeopoliticalArea) =>
      executiveBranch(ExecutiveBranchFn(vAREA), GovernmentFn(vAREA))
. occupiesPosition(vPERSON, Leader, vORGANIZATION) =>
      leader(vORGANIZATION, vPERSON)
. instance(vAREA, GeopoliticalArea)
  /\ occupiesPosition(vPERSON, Leader, vAREA) =>
      leader(GovernmentFn(vAREA), vPERSON)
. instance(President, Position)
. instance(PrimeMinister, Position)
. instance(VicePresident, Position)
. instance(GovernmentDeputy, Position)
. instance(Chairman, Position)
. instance(ViceChairman, Position)
. instance(MilitaryCommander, Position)
. instance(Monarch, Position)
. subAttribute(Queen, Monarch)
. subAttribute(King, Monarch)
. instance(leaderPosition, BinaryPredicate)
. instance(leaderPosition, AsymmetricRelation)
. domain(leaderPosition, a_1, Agent)
. domain(leaderPosition, a_2, Position)
%{leaderPosition
"(&%leaderPosition ?ORG ?ROLE)
means that in the organization ?ORG, the leader is the person 
who holds the &%Position ?ROLE in the organization."}%
. leaderPosition(UnitedKingdom, PrimeMinister)
. leaderPosition(Canada, PrimeMinister)
. leaderPosition(Iran, President)
. instance(vORG, Agent)
  /\ leader(vORG, vPERSON)
  /\ instance(vROLE, Position)
  /\ occupiesPosition(vPERSON, vROLE, vORG) =>
      leaderPosition(vORG, vROLE)
. instance(vCOUNTRY, Nation)
  /\ leader(vCOUNTRY, vPERSON)
  /\ instance(vROLE, Position)
  /\ occupiesPosition(vPERSON, vROLE, GovernmentFn(vCOUNTRY)) =>
      leaderPosition(vCOUNTRY, vROLE)
. instance(vCOUNTRY, Nation)
  /\ leaderPosition(GovernmentFn(vCOUNTRY), vROLE) =>
      leaderPosition(vCOUNTRY, vROLE)
. instance(vCOUNTRY, Nation) /\ leaderPosition(vCOUNTRY, vROLE) =>
      leaderPosition(GovernmentFn(vCOUNTRY), vROLE)
. instance(vPERSON, Human)
  /\ instance(vROLE, Position)
  /\ instance(vORG, Agent)
  /\ leaderPosition(vORG, vROLE)
  /\ occupiesPosition(vPERSON, vROLE, vORG) =>
      leader(vORG, vPERSON)
. instance(vPERSON, Human)
  /\ instance(vROLE, Position)
  /\ instance(vAREA, GeopoliticalArea)
  /\ leaderPosition(vAREA, vROLE)
  /\ occupiesPosition(vPERSON, vROLE, GovernmentFn(vAREA)) =>
      leader(vAREA, vPERSON)
. subclass(GovernmentCabinet, GovernmentOrganization)
%{GovernmentCabinet
"&%GovernmentCabinet is the class of 
&%GovernmentOrganizations whose purpose is to advise a &%President, 
&%Governor, or other political leader(s) on policy matters."}%
. instance(vCAB, GovernmentCabinet)
  /\ subOrganization(vCAB, GovernmentFn(vAREA))
  /\ instance(vAREA, GeopoliticalArea) =>
      hasPurpose(vCAB,
                 True
                     when exists vADVICE: U; vLEADER: U; vROLE1: U; vROLE2: U;
                                 vLEADER: U
                              . instance(vADVICE, Stating)
                                /\ agent(vADVICE, vCAB)
                                /\ patient(vADVICE, vLEADER)
                                /\ leader(vLEADER, GovernmentFn(vAREA))
                     else False)
. instance(CabinetFn, UnaryFunction)
. domain(CabinetFn, a_1, GeopoliticalArea)
. range(CabinetFn, GovernmentOrganization)
%{CabinetFn
"(&%CabinetFn ?AREA) denotes the 
&%GovernmentCabinet associated with the government of the 
&%GeopoliticalArea ?AREA."}%
. instance(vAREA, GeopoliticalArea) =>
      subOrganization(CabinetFn(vAREA), ExecutiveBranchFn(vAREA))
. instance(chiefOfState, TernaryPredicate)
. domain(chiefOfState, a_1, GeopoliticalArea)
. domain(chiefOfState, a_2, Position)
. domain(chiefOfState, a_3, Human)
%{chiefOfState
"(&%chiefOfState ?POLITY ?ROLE ?PERSON) means 
that ?PERSON is the titular leader of the government of the 
&%GeopoliticalArea ?POLITY and represents it at official functions.  The 
office held by this chief of state is ?ROLE (e.g., President, Queen, 
Chairman).  Note: this term is defined as in the CIA World Fact Book."}%
. chiefOfState(vAREA, vPOSITION, vPERSON) =>
      occupiesPosition(vPERSON, vPOSITION, GovernmentFn(vAREA))
. chiefOfState(vAREA, vPOSITION, vPERSON) =>
      occupiesPosition(vPERSON, Leader, GovernmentFn(vAREA))
. chiefOfState(vAREA, vPOSITION, vPERSON)
  /\ instance(vAREA, Nation) =>
      citizen(vPERSON, vAREA)
. instance(chiefOfStateType, BinaryPredicate)
. domain(chiefOfStateType, a_1, GeopoliticalArea)
. domain(chiefOfStateType, a_2, Position)
%{chiefOfStateType
"(&%chiefOfStateType ?NATION ?ROLE) means 
that the &%chiefOfState of the &%GeopoliticalArea ?NATION holds the 
&%Position ?ROLE in its government."}%
. chiefOfState(vAREA, vPOSITION, vPERSON) =>
      chiefOfStateType(vAREA, vPOSITION)
. chiefOfStateType(vAREA, vPOSITION)
  /\ agent(vELECTION, vAREA)
  /\ instance(vELECTION, Election)
  /\ electionForPosition(vELECTION, vPOSITION)
  /\ instance(vELECTION, PopularElection) =>
      governmentType(vAREA, Democracy)
. instance(headOfGovernment, TernaryPredicate)
. domain(headOfGovernment, a_1, GeopoliticalArea)
. domain(headOfGovernment, a_2, Position)
. domain(headOfGovernment, a_3, Human)
%{headOfGovernment
"(&%headOfGovernment ?POLITY ?ROLE 
?PERSON) means that ?PERSON is the top administrative leader of the 
&%Government of the &%GeopoliticalArea ?POLITY, with authority for 
managing its day-to-day functions.  The office held by this person 
is the &%Position ?ROLE (e.g., President, Prime Minister, Governor). 
Note: this term is defined as in the CIA World Fact Book."}%
. headOfGovernment(vAREA, vPOSITION, vPERSON)
  /\ instance(vAREA, Nation) =>
      citizen(vPERSON, vAREA)
. headOfGovernment(vAREA, vPOSITION, vPERSON) =>
      occupiesPosition(vPERSON, vPOSITION, GovernmentFn(vAREA))
. instance(roleAppointsRole, TernaryPredicate)
. domain(roleAppointsRole, a_1, Agent)
. domain(roleAppointsRole, a_2, SocialRole)
. domain(roleAppointsRole, a_3, SocialRole)
%{roleAppointsRole
"(&%roleAppointsRole ?ORG ?APPOINTER 
?APPOINTED) means that in the &%Organization or &%GeopoliticalArea ?ORG, 
the agent holding the &%SocialRole ?APPOINTER has the authority to 
appoint a person to fill the role ?APPOINTED."}%
. instance(roleApprovesRole, TernaryPredicate)
. domain(roleApprovesRole, a_1, Agent)
. domain(roleApprovesRole, a_2, SocialRole)
. domain(roleApprovesRole, a_3, SocialRole)
%{roleApprovesRole
"(&%roleApprovesRole ?ORG ?APPROVER 
?APPOINTED) means that in the &%Organization or &%GeopoliticalArea ?ORG, 
the agent holding the &%SocialRole ?APPROVER has the authority to 
approve (or disapprove) of an appointee for the role ?APPOINTED."}%
. instance(roleNominatesRole, TernaryPredicate)
. domain(roleNominatesRole, a_1, Agent)
. domain(roleNominatesRole, a_2, SocialRole)
. domain(roleNominatesRole, a_3, SocialRole)
%{roleNominatesRole
"(&%roleNominatesRole ?ORG ?NOMINATOR 
?NOMINATED) means that in the &%Organization or &%GeopoliticalArea ?ORG, 
the agent holding the &%SocialRole ?NOMINATOR has the authority to 
nominate one or more persons to fill the role ?NOMINATED."}%
. instance(termLength, TernaryPredicate)
. domain(termLength, a_1, Agent)
. domain(termLength, a_2, SocialRole)
. domain(termLength, a_3, TimeDuration)
%{termLength
"(&%termLength ?ORG ?ROLE ?LENGTH) means 
that in the &%Organization or &%GeopoliticalArea ?ORG, the term of office 
for the position ?ROLE is the &%TimeDuration ?LENGTH."}%
. instance(ElectionFn, UnaryFunction)
. domain(ElectionFn, a_1, Agent)
. rangeSubclass(ElectionFn, Election)
%{ElectionFn
"(&%ElectionFn ?ORG) denotes the class of 
&%Elections conducted by the &%GeopoliticalArea or &%Organization ?ORG, 
in which offices or issues pertaining to ?ORG are voted upon."}%
. instance(vAGENT, Agent)
  /\ subclass(ElectionFn(vAGENT), Election) =>
      instance(vAGENT, Organization)
      \/ instance(vAGENT, GeopoliticalArea)
. instance(vAGENT, Agent)
  /\ instance(vELECTION, ElectionFn(vAGENT)) =>
      agent(vELECTION, vAGENT)
. subclass(GeneralElection, Election)
%{GeneralElection
"&%GeneralElection is the subclass of 
&%Elections that are held at regular intervals and in which all or most 
constituencies of a &%GeopoliticalArea participate."}%
. subclass(PopularElection, Election)
%{PopularElection
"&%PopularElection is the class of 
&%Elections in which office-holders and issues are determined directly by 
the outcome of the votes cast by the enfranchised.  For example, U.S.  
Senators and Representatives are elected by &%PopularElection.  By 
contrast, U.S. Presidents are elected by indirect elections, in which the 
Electoral College determines the actual outcome.  See &%electionWinner."}%
. subclass(ElectoralCollegeElection, Election)
%{ElectoralCollegeElection
"&%ElectoralCollegeElection is 
the class of &%Elections in which the outcome is decided by the votes of 
electors who have been chosen by popular vote, rather than directly by 
results of the popular vote.  &%ElectoralCollegeElection is an indirect 
method of election, in contrast to &%PopularElection."}%
. instance(VotingFn, UnaryFunction)
. domain(VotingFn, a_1, Election)
. rangeSubclass(VotingFn, Voting)
%{VotingFn
"(&%VotingFn ?ELECTION) denotes the class of 
voting events that occur as part of the &%Election ?ELECTION."}%
. instance(electionDatePlannedForPosition, TernaryPredicate)
. domain(electionDatePlannedForPosition, a_1, Agent)
. domainSubclass(electionDatePlannedForPosition, a_2, TimePosition)
. domain(electionDatePlannedForPosition, a_3, SocialRole)
%{electionDatePlannedForPosition
"(&%electionDatePlannedForPosition ?AGENT ?TIME ?POSITION) means that the 
&%Agent ?AGENT (a &%Nation, &%Government, or &%Organization) plans to hold 
an &%Election on the date indicated by ?TIME for position(s) ?POSITION."}%
. instance(electionForPosition, BinaryPredicate)
. domain(electionForPosition, a_1, Election)
. domain(electionForPosition, a_2, SocialRole)
%{electionForPosition
"(&%electionForPosition ?ELECTION 
?POSITION) means that in the &%Election ?ELECTION, candidates run for 
election to the role(s) ?POSITION."}%
. electionForPosition(vELECTION, vROLE) =>
      exists vCANDIDATE: U
          . instance(vCANDIDATE, Human)
            /\ candidateForPosition(vELECTION, vROLE, vCANDIDATE)
. instance(MemberFn, UnaryFunction)
. domain(MemberFn, a_1, Organization)
. range(MemberFn, Position)
%{MemberFn
"(&%MemberFn ?ORG) denotes the &%Position of 
a &%member in the &%Organization ?ORG."}%
. instance(vAGENT, Agent)
  /\ instance(vORG, Organization)
  /\ member(vAGENT, vORG) =>
      attribute(vAGENT, MemberFn(vORG))
. attribute(vAGENT, MemberFn(vORG))
  /\ instance(vAGENT, Agent)
  /\ instance(vORG, Organization) =>
      member(vAGENT, vORG)
. instance(MemberRoleFn, BinaryFunction)
. domain(MemberRoleFn, a_1, Organization)
. domain(MemberRoleFn, a_2, Position)
. range(MemberRoleFn, Position)
%{MemberRoleFn
"(&%MemberRoleFn ?ORG ?POSITION) denotes the 
role of having the &%Position ?POSITION the &%Organization ?ORG."}%
. instance(vAGENT, Human)
  /\ instance(vORG, Organization)
  /\ instance(vPOSITION, Position)
  /\ attribute(vAGENT, MemberRoleFn(vORG, vPOSITION)) =>
      attribute(vAGENT, MemberFn(vORG))
. instance(vAGENT, Human)
  /\ instance(vORG, Organization)
  /\ instance(vPOSITION, Position)
  /\ attribute(vAGENT, MemberRoleFn(vORG, vPOSITION)) =>
      member(vAGENT, vORG)
. instance(vPERSON, Human)
  /\ instance(vORG, Organization)
  /\ instance(vPOSITION, Position)
  /\ attribute(vPERSON, MemberRoleFn(vORG, vPOSITION)) =>
      occupiesPosition(vPERSON, vPOSITION, vORG)
. occupiesPosition(vPERSON, vPOSITION, vORG) =>
      attribute(vPERSON, MemberRoleFn(vORG, vPOSITION))
. instance(electionForOrganization, BinaryPredicate)
. domain(electionForOrganization, a_1, Election)
. domain(electionForOrganization, a_2, Organization)
%{electionForOrganization
"(&%electionForOrganization ?ELECTION ?GROUP) means that in the 
&%Election ?ELECTION, candidates run for election to the organization 
?GROUP."}%
. electionForOrganization(vELECTION, vGROUP) =>
      electionForPosition(vELECTION, MemberFn(vGROUP))
. instance(vGROUP, Organization)
  /\ electionForPosition(vELECTION, MemberFn(vGROUP)) =>
      electionForOrganization(vELECTION, vGROUP)
. instance(candidateForPosition, TernaryPredicate)
. domain(candidateForPosition, a_1, Election)
. domain(candidateForPosition, a_2, SocialRole)
. domain(candidateForPosition, a_3, Agent)
%{candidateForPosition
"(&%candidateForPosition ?ELECTION 
?POSITION ?CONTENDER) means that in the &%Election ?ELECTION for 
?POSITION, the &%Agent ?CONTENDER was one of the candidates."}%
. candidateForPosition(vELECTION, vPOSITION, vCONTENDER) =>
      electionForPosition(vELECTION, vPOSITION)
. candidateForPosition(vELECTION, vPOSITION, vCONTENDER)
  /\ agent(vELECTION, vAGENT) =>
      desires(vCONTENDER,
              occupiesPosition(vCONTENDER, vPOSITION, vAGENT))
. instance(voteFractionReceived, QuaternaryPredicate)
. domain(voteFractionReceived, a_1, Election)
. domain(voteFractionReceived, a_2, SocialRole)
. domain(voteFractionReceived, a_3, Agent)
. domain(voteFractionReceived, a_4, RealNumber)
%{voteFractionReceived
"(&%voteFractionReceived ?ELECTION 
?POSITION ?CONTENDER ?FRACTION) means that in the &%Election ?ELECTION for 
?POSITION, the &%Agent ?CONTENDER received ?FRACTION of the votes cast.  
Contenders may be either persons or political parties."}%
. voteFractionReceived(vELECTION, vPOSITION, vCONTENDER,
                       vFRACTION) =>
      candidateForPosition(vELECTION, vPOSITION, vCONTENDER)
. instance(electionWinner, TernaryPredicate)
. domain(electionWinner, a_1, Election)
. domain(electionWinner, a_2, SocialRole)
. domain(electionWinner, a_3, Agent)
. subrelation(electionWinner, candidateForPosition)
%{electionWinner
"(&%electionWinner ?ELECTION ?POSITION 
?CONTENDER) means that in the &%Election ?ELECTION, ?POSITION was won by 
the &%Agent ?CONTENDER.  Contenders may be either persons or political 
parties."}%
. instance(vELECTION, PopularElection)
  /\ electionWinner(vELECTION, vPOSITION, vPERSON1)
  /\ voteFractionReceived(vELECTION, vPOSITION, vPERSON1,
                          vNUMBER1) =>
      not (exists vPERSON2: U; vNUMBER2: U
               . voteFractionReceived(vELECTION, vPOSITION, vPERSON2, vNUMBER2)
                 /\ not vPERSON1 = vPERSON2
                 /\ greaterThanOrEqualTo(vNUMBER2, vNUMBER1))
. instance(vELECTION, PopularElection)
  /\ electionWinner(vELECTION, vPOSITION, vPERSON1)
  /\ voteFractionReceived(vELECTION, vPOSITION, vPERSON1, vNUMBER1)
  /\ voteFractionReceived(vELECTION, vPOSITION, vPERSON2, vNUMBER2)
  /\ not vPERSON1 = vPERSON2 =>
      greaterThan(vNUMBER1, vNUMBER2)
. instance(seatsWonInElection, TernaryPredicate)
. domain(seatsWonInElection, a_1, Election)
. domain(seatsWonInElection, a_2, Agent)
. domain(seatsWonInElection, a_3, Integer)
%{seatsWonInElection
"(&%seatsWonInElection ?ELECTION ?AGENT 
?NUMBER) means that in the &%Election ?ELECTION, the &%PoliticalParty 
?AGENT won this ?NUMBER of seats."}%
. instance(seatsHeldInOrganization, TernaryPredicate)
. domain(seatsHeldInOrganization, a_1, Organization)
. domain(seatsHeldInOrganization, a_2, Agent)
. domain(seatsHeldInOrganization, a_3, NonnegativeInteger)
%{seatsHeldInOrganization
"(&%seatsHeldInOrganization ?GROUP ?PARTY  
?NUMBER) means that in the &%Organization ?GROUP, the &%PoliticalParty or other
&%Agent ?AGENT, holds or controls this ?NUMBER of seats."}%
. subclass(LegislativeOrganization, Organization)
%{LegislativeOrganization
"&%LegislativeOrganization is the 
class of &%Organizations that have as their main purpose the passing of 
laws or regulations."}%
. instance(vORG, LegislativeOrganization)
  /\ subOrganization(vORG, vGOV)
  /\ instance(vGOV, GovernmentOrganization) =>
      instance(vORG, GovernmentOrganization)
. subclass(Parliament, LegislativeOrganization)
%{Parliament
"&%Parliament is the subclass of 
&%LegislativeOrganizations similar to that of the United Kingdom."}%
. instance(BicameralLegislature, FormOfGovernment)
%{BicameralLegislature
"&%BicameralLegislature is the 
&%Attribute of governments whose legislative branches have two
legislative chambers.  For example, in the &%UnitedStates the legislative  
branch comprises the Senate and the House of Representatives."}%
. instance(vLEGE, BicameralLegislature) =>
      exists vCHAMBER1: U; vCHAMBER2: U
          . instance(vCHAMBER1, LegislativeChamber)
            /\ subOrganization(vCHAMBER1, vLEGE)
            /\ instance(vCHAMBER2, LegislativeChamber)
            /\ subOrganization(vCHAMBER2, vLEGE)
            /\ not vCHAMBER1 = vCHAMBER2
. instance(UnicameralLegislature, FormOfGovernment)
%{UnicameralLegislature
"&%UnicameralLegislature is the &%Attribute of 
legislatures or governments whose legislative branches have only one 
legislative chamber.  For example, &%Albania has only the 
&%PeoplesAssembly constituting its legislative branch."}%
. attribute(vORG, UnicameralLegislature)
  /\ legislativeBranch(vORG, vAREA)
  /\ instance(vCHAMBER1, LegislativeChamber)
  /\ subOrganization(vCHAMBER1, GovernmentFn(vAREA))
  /\ instance(vCHAMBER2, LegislativeChamber)
  /\ subOrganization(vCHAMBER2, GovernmentFn(vAREA)) =>
      vCHAMBER1 = vCHAMBER2
. subclass(LegislativeChamber, LegislativeOrganization)
%{LegislativeChamber
"&%LegislativeChamber is the class of 
&%LegislativeOrganizations which are a coherent body that considers and 
votes upon legislation in common session.  For example, the United States 
Senate."}%
. attribute(vORG, BicameralLegislature) =>
      not instance(vORG, LegislativeChamber)
. instance(legislativeBranch, BinaryPredicate)
. instance(legislativeBranch, AsymmetricRelation)
. domain(legislativeBranch, a_1, Organization)
. domain(legislativeBranch, a_2, Agent)
%{legislativeBranch
"(&%legislativeBranch ?BRANCH ?ORG) means 
that the &%Organization ?BRANCH is the legislative branch of the 
&%GeopoliticalArea or &%Organization ?ORG."}%
. legislativeBranch(vORG, vAGENT) =>
      instance(vAGENT, Organization)
      \/ instance(vAGENT, GeopoliticalArea)
. legislativeBranch(vORG, vAGENT) =>
      instance(vORG, LegislativeOrganization)
. legislativeBranch(vORG, vAREA)
  /\ instance(vAREA, GeopoliticalArea) =>
      instance(vORG, GovernmentOrganization)
. legislativeBranch(vORG, vAGENT)
  /\ instance(vAGENT, Organization) =>
      subOrganization(vORG, vAGENT)
. legislativeBranch(vORG, vAREA)
  /\ instance(vAREA, GeopoliticalArea) =>
      subOrganization(vORG, GovernmentFn(vAREA))
. instance(LegislatureFn, UnaryFunction)
. domain(LegislatureFn, a_1, GeopoliticalArea)
. range(LegislatureFn, LegislativeOrganization)
%{LegislatureFn
"(&%LegislatureFn ?AREA) denotes the 
legislative branch of the &%GeopoliticalArea ?AREA."}%
. legislativeBranch(vBRANCH, vAGENT) =>
      vBRANCH = LegislatureFn(vAGENT)
. instance(LegislatureFn(vAGENT), Organization) =>
      legislativeBranch(LegislatureFn(vAGENT), vAGENT)
. instance(LegislatureFn(vAREA), Organization)
  /\ instance(vAREA, GeopoliticalArea) =>
      legislativeBranch(LegislatureFn(vAREA), GovernmentFn(vAREA))
. instance(chamberOfLegislature, BinaryPredicate)
. instance(chamberOfLegislature, AsymmetricRelation)
. domain(chamberOfLegislature, a_1, Organization)
. domain(chamberOfLegislature, a_2, Organization)
. subrelation(chamberOfLegislature, subOrganization)
%{chamberOfLegislature
"(&%chamberOfLegislature ?CHAMBER 
?LEGISLATURE) means that ?CHAMBER is a legislative body within the 
?LEGISLATURE."}%
. instance(seatsInOrganizationCount, BinaryPredicate)
. domain(seatsInOrganizationCount, a_1, Organization)
. domain(seatsInOrganizationCount, a_2, Integer)
%{seatsInOrganizationCount
"(&%seatsInOrganizationCount ?ORG 
?NUMBER) means that there is a total ?NUMBER of seats in the 
&%Organization ?ORG."}%
. instance(memberCount, BinaryPredicate)
. domain(memberCount, a_1, Collection)
. domain(memberCount, a_2, Integer)
%{memberCount
"(&%memberCount ?ORG ?NUMBER) means that there 
is a total ?NUMBER of &%members in the &%Collection ?ORG."}%
. seatsInOrganizationCount(vORG, vSEATS)
  /\ memberCount(vORG, vMEMBERS) =>
      greaterThanOrEqualTo(vSEATS, vMEMBERS)
. instance(vORG, JudicialOrganization)
  /\ subOrganization(vORG, vGOV)
  /\ instance(vGOV, GovernmentOrganization) =>
      instance(vORG, GovernmentOrganization)
. instance(judicialBranch, BinaryPredicate)
. instance(judicialBranch, AsymmetricRelation)
. domain(judicialBranch, a_1, Organization)
. domain(judicialBranch, a_2, Agent)
%{judicialBranch
"(&%judicialBranch ?BRANCH ?ORG) means that 
the &%Organization ?BRANCH is the judicial branch of the 
&%GeopoliticalArea or &%Organization ?ORG, that is, all of its courts and 
judicial offices, considered as a whole."}%
. judicialBranch(vBRANCH, vAGENT) =>
      instance(vBRANCH, GeopoliticalArea)
      \/ instance(vBRANCH, Organization)
. judicialBranch(vORG, vAGENT) =>
      instance(vORG, JudicialOrganization)
. judicialBranch(vORG, vAREA)
  /\ instance(vAREA, GeopoliticalArea) =>
      instance(vORG, GovernmentOrganization)
. judicialBranch(vBRANCH, vORG) /\ instance(vORG, Organization) =>
      subOrganization(vBRANCH, vORG)
. judicialBranch(vBRANCH, vAREA)
  /\ instance(vAREA, GeopoliticalArea) =>
      subOrganization(vBRANCH, GovernmentFn(vAREA))
. judicialBranch(vBRANCH, vAREA)
  /\ instance(vAREA, GeopoliticalArea)
  /\ subOrganization(vORG, vBRANCH) =>
      subOrganization(vORG, GovernmentFn(vAREA))
. instance(JudiciaryFn, UnaryFunction)
. domain(JudiciaryFn, a_1, GeopoliticalArea)
. range(JudiciaryFn, GovernmentOrganization)
. range(JudiciaryFn, JudicialOrganization)
%{JudiciaryFn
"(&%JudiciaryFn ?AREA) denotes the judicial 
branch of the &%GeopoliticalArea ?AREA, that is, the 
&%JudicialOrganization(s) associated with the government of ?AREA, 
considered as a whole."}%
. judicialBranch(vBRANCH, vAGENT) => vBRANCH = JudiciaryFn(vAGENT)
. instance(JudiciaryFn(vAGENT), Organization) =>
      judicialBranch(JudiciaryFn(vAGENT), vAGENT)
. instance(JudiciaryFn(vAREA), Organization)
  /\ instance(vAREA, GeopoliticalArea) =>
      judicialBranch(JudiciaryFn(vAREA), GovernmentFn(vAREA))
. subclass(IslamicLawCourt, JudicialOrganization)
%{IslamicLawCourt
"&%IslamicLawCourt is the subclass of 
&%JudicialOrganizations that are conducted according to principles of 
Islamic Law."}%
. instance(vCOURT, IslamicLawCourt) =>
      attribute(vCOURT, IslamicLaw)
. subclass(SupremeCourt, JudicialOrganization)
%{SupremeCourt
"&%SupremeCourt is the subclass of 
&%JudicialOrganizations that are the ultimate judicial authority for the 
matters on which they rule.  For example, the &%UnitedStatesSupremeCourt, 
or the &%InternationalCourtOfJustice (World Court)."}%
. instance(SupremeCourtFn, UnaryFunction)
. domain(SupremeCourtFn, a_1, GeopoliticalArea)
. rangeSubclass(SupremeCourtFn, SupremeCourt)
%{SupremeCourtFn
"(&%SupremeCourtFn ?AREA) denotes the class 
of the highest court(s) in the judicial system of &%GeopoliticalArea 
?AREA.  For example, the &%UnitedStatesSupremeCourt belongs to the class
(&%SupremeCourtFn &%UnitedStates)."}%
. instance(vCOURT, SupremeCourtFn(vCOUNTRY)) =>
      subOrganization(vCOURT, JudiciaryFn(vCOUNTRY))
. instance(vCOURT, SupremeCourt)
  /\ subOrganization(vCOURT, GovernmentFn(vCOUNTRY))
  /\ instance(vCOUNTRY, Nation) =>
      instance(vCOURT, SupremeCourtFn(vCOUNTRY))
. subclass(AppealsCourt, JudicialOrganization)
%{AppealsCourt
"&%AppealsCourt is the class of 
&%JudicialOrganizations that review cases from lower courts on appeal."}%
. subclass(ConstitutionalCourt, JudicialOrganization)
%{ConstitutionalCourt
"&%ConstitutionalCourt is the class of 
&%JudicialOrganizations that rule on constitutional matters, in countries 
that have a &%Constitution."}%
. instance(JudgeAtLaw, Position)
%{JudgeAtLaw
"&%JudgeAtLaw is the &%Position of a person who 
is a public official with the authority to decide legal matters in a 
governmental &%JudicialOrganization."}%
. attribute(vPERSON, JudgeAtLaw) =>
      exists vORG: U
          . instance(vORG, JudicialOrganization)
            /\ instance(vORG, GovernmentOrganization)
            /\ employs(vORG, vPERSON)
. instance(SupremeCourtJudge, Position)
. subAttribute(SupremeCourtJudge, JudgeAtLaw)
%{SupremeCourtJudge
"&%SupremeCourtJudge is the &%Position 
of a person who is a &%JudgeAtLaw on some &%SupremeCourt."}%
. attribute(vPERSON, SupremeCourtJudge)
  /\ employs(vORG, vPERSON) =>
      instance(vORG, SupremeCourt)
. instance(politicalPartyOfCountry, BinaryPredicate)
. domain(politicalPartyOfCountry, a_1, PoliticalParty)
. domain(politicalPartyOfCountry, a_2, GeopoliticalArea)
. subrelation(politicalPartyOfCountry, agentOperatesInArea)
%{politicalPartyOfCountry
"(&%politicalPartyOfCountry ?PARTY 
?AREA) means that the &%PoliticalParty ?PARTY participates in politics in 
the &%GeopoliticalArea ?AREA."}%
. instance(agentOperatesInArea, BinaryPredicate)
. domain(agentOperatesInArea, a_1, Agent)
. domain(agentOperatesInArea, a_2, GeographicArea)
. subrelation(agentOperatesInArea, partlyLocated)
%{agentOperatesInArea
"(&%agentOperatesInArea ?AGENT ?AREA) 
means that the individual or &%Organization ?AGENT operates in the 
&%GeographicArea ?AREA."}%
. subclass(PoliticalCoalition, PoliticalOrganization)
. subclass(PoliticalCoalition, PoliticalParty)
%{PoliticalCoalition
"&%PoliticalCoalition is the class of 
political organizations that are constituted by political parties joined 
together for some common interest(s)."}%
. subclass(PoliticalParty, PoliticalOrganization)
%{PoliticalParty
"&%PoliticalParty is the class of 
&%PoliticalOrganizations that may sponsor candidates for &%Elections."}%
. instance(Spokesperson, Position)
. instance(Leader, Position)
. instance(PermanentRepresentative, Position)
. instance(NationalCommitteeChairman, Position)
. instance(MilitaryGeneral, Position)
. subclass(MilitaryGeneral, MilitaryOfficer)
%{MilitaryGeneral
"&%MilitaryGeneral is a generic &%Position 
that indicates holding (or having held) the rank of General in some 
military force.  An indicator that someone uses the title, without 
committing to his or her exact rank or military affiliation."}%
. occupiesPosition(vPERSON, vPOSITION, vORGANIZATION)
  /\ instance(vORGANIZATION, PoliticalParty) =>
      member(vPERSON, vORGANIZATION)
. occupiesPosition(vPERSON, Leader, vORG) =>
      exists vLEADING: U
          . instance(vLEADING, Guiding)
            /\ patient(vLEADING, vORG)
            /\ agent(vLEADING, vPERSON)
. instance(vAREA, GeopoliticalArea)
  /\ occupiesPosition(vPERSON, Leader, GovernmentFn(vAREA)) =>
      exists vLEADING: U
          . instance(vLEADING, Guiding)
            /\ patient(vLEADING, vAREA)
            /\ agent(vLEADING, vPERSON)
. subclass(PoliticalPressureGroup, PoliticalOrganization)
%{PoliticalPressureGroup
"&%PoliticalPressureGroup is the 
class of &%Organizations that exert political pressure and have leaders 
who are involved in politics but not standing for election.  For example, 
corporate lobbying groups, Mothers Against Drunk Driving (MADD), or the 
American Civil Liberties Union (ACLU)."}%
. instance(vGROUP, PoliticalPressureGroup) =>
      exists vREQ: U; vORG: U
          . instance(vREQ, Requesting)
            /\ agent(vREQ, vGROUP)
            /\ instance(vORG, GovernmentOrganization)
            /\ patient(vREQ, vORG)
. instance(vGROUP, PoliticalPressureGroup)
  /\ hasPurpose(vGROUP, vFORMULA)
  /\ agentOperatesInArea(vGROUP, vAREA)
  /\ instance(vAREA, Nation) =>
      desires(vGROUP, believes(GovernmentFn(vAREA), vFORMULA))
. instance(vGROUP, PoliticalPressureGroup)
  /\ organizationalObjective(vGROUP, vAIM)
  /\ instance(vORG, GovernmentOrganization)
  /\ organizationalObjective(vORG, vAIM) =>
      inScopeOfInterest(vGROUP, vORG)
. subclass(ForeignTerroristOrganization, TerroristOrganization)
%{ForeignTerroristOrganization
"A Foreign Terrorist Organization
  is an &%Organization designated by the &%USStateDeparment as one which
  conducts acts of terrorism.  This designation makes it subject to the
  &%AntiterrorismAndEffectiveDeathPenaltyAct."}%
. instance(USStateDepartment, Government)
%{USStateDepartment
"The branch of the US &%Government that
  handles relations with foreign governments and entities.  It is the chief
  diplomatic instrument of US foreign policy.  It controls US embassies and 
  consuls."}%
. subOrganizations(USStateDepartment, GovernmentFn(UnitedStates))
. instance(vX, ForeignTerroristOrganization) =>
      exists vEV: U
          . instance(vEV, Declaring)
            /\ agent(vEV, USStateDepartment)
            /\ patient(vEV, vX)
. instance(a_I_m_m_i_g_r_a_t_i_o_n_A_n_d_N_a_t_i_o_n_a_l_i_t_y_A_c_t_Minus_U_S,
           Proposition)
. modalAttribute(a_I_m_m_i_g_r_a_t_i_o_n_A_n_d_N_a_t_i_o_n_a_l_i_t_y_A_c_t_Minus_U_S,
                 Law)
. subsumesContentInstance(a_I_m_m_i_g_r_a_t_i_o_n_A_n_d_N_a_t_i_o_n_a_l_i_t_y_A_c_t_Minus_U_S,
                          a_I_m_m_i_g_r_a_t_i_o_n_A_n_d_N_a_t_i_o_n_a_l_i_t_y_A_c_t_Minus_S_e_c_t_i_o_n_2_1_9_Minus_U_S)
. instance(a_I_m_m_i_g_r_a_t_i_o_n_A_n_d_N_a_t_i_o_n_a_l_i_t_y_A_c_t_Minus_S_e_c_t_i_o_n_2_1_9,
           Proposition)
. modalAttribute(a_I_m_m_i_g_r_a_t_i_o_n_A_n_d_N_a_t_i_o_n_a_l_i_t_y_A_c_t_Minus_S_e_c_t_i_o_n_2_1_9,
                 Law)
. instance(AntiterrorismAndEffectiveDeathPenaltyAct, Proposition)
. modalAttribute(AntiterrorismAndEffectiveDeathPenaltyAct, Law)
%{AntiterrorismAndEffectiveDeathPenaltyAct
"Antiterrorism and Effective 
        Death Penalty Act modifies the Immigration and Nationality Act
        was enacted in 1996 and specifies that: 
        (1) It is unlawful to provide funds or other material support to a 
        designated FTO.  
        (2) Representatives and certain members of a designated FTO can be denied 
        visas or excluded from the United States.  
        (3) US financial institutions must block funds of designated FTOs and their 
        agents and must report the blockage to the US Department of the Treasury."}%
. instance(associateInOrganization, BinaryPredicate)
. domain(associateInOrganization, a_1, Agent)
. domain(associateInOrganization, a_2, Group)
. subrelation(member, associateInOrganization)
%{associateInOrganization
"(&%associateInOrganization 
?AGENT ?GROUP) means that ?AGENT is associated in some way with the 
&%Group ?GROUP.  This includes participation as a guest or observer,
as well as being a full &%member.  See &%member for a more specific 
relation."}%
. instance(associateWithStatus, TernaryPredicate)
. domain(associateWithStatus, a_1, Agent)
. domain(associateWithStatus, a_2, RelationalAttribute)
. domain(associateWithStatus, a_3, Group)
. subrelation(occupiesPosition, associateWithStatus)
%{associateWithStatus
"(&%associateWithStatus ?AGT ?STATUS ?GROUP) means that the &%Agent 
?AGT has the &%RelationalAttribute ?STATUS in the &%Group ?GROUP.   
For example, (&%associateWithStatus &%UnitedStates &%PermanentMember 
&%UnitedNationsSecurityCouncil) means that the &UnitedStates has the status 
of a permanent member in the U.N. Security Council."}%
. associateWithStatus(vAGENT, vSTATUS, vGROUP) =>
      associateInOrganization(vAGENT, vGROUP)
. associateWithStatus(vAGENT, FullMember, vGROUP) =>
      member(vAGENT, vGROUP)
. associateWithStatus(vAGENT, SuspendedMember, vGROUP) =>
      not member(vAGENT, vGROUP)
. subclass(MemberStatus, RelationalAttribute)
%{MemberStatus
"&%MemberStatus is the class of 
&%RelationalAttributes that represent the different kinds of status  
that may be held in various organizations.  Included in this class are  
membership types for &%InternationalOrganizations covered by the CIA World 
Fact Book."}%
. instance(FullMember, MemberStatus)
. instance(ObserverStatus, MemberStatus)
. instance(NonregionalMember, MemberStatus)
. instance(RegionalMember, MemberStatus)
. instance(AssociateMember, MemberStatus)
. instance(DialoguePartner, MemberStatus)
. instance(GuestStatus, MemberStatus)
. instance(CooperatingState, MemberStatus)
. instance(PartnersForCooperation, MemberStatus)
. instance(MembershipApplicant, MemberStatus)
. instance(MembershipPending, MemberStatus)
. instance(NonstateParticipant, MemberStatus)
. instance(SubbureauMember, MemberStatus)
. instance(PartIMember, MemberStatus)
. instance(PartIIMember, MemberStatus)
. instance(CategoryIMember, MemberStatus)
. instance(CategoryIIMember, MemberStatus)
. instance(CategoryIIIMember, MemberStatus)
. instance(CorrespondentMember, MemberStatus)
. instance(SubscriberMember, MemberStatus)
. instance(ExecutiveBoardMember, MemberStatus)
. instance(ExecutiveCommitteeMember, MemberStatus)
. instance(BoardOfTrusteesMember, MemberStatus)
. instance(Commissioner, MemberStatus)
. instance(AdvisoryCommittee, MemberStatus)
. instance(PermanentStatus, MemberStatus)
. instance(NonpermanentStatus, MemberStatus)
. instance(InternationalOrNonregionalMember, MemberStatus)
. instance(AssociatePartner, MemberStatus)
. instance(SuspendedMember, MemberStatus)
. instance(SignatoryMember, MemberStatus)
. instance(vJOIN, JoiningAnOrganization)
  /\ instance(vAGENT, Agent)
  /\ agent(vJOIN, vagent)
  /\ patient(vJOIN, vorg)
  /\ instance(vJOIN, Organization) =>
      member(vAGENT, vORG)
. subclass(InternationalOrganization, Organization)
%{InternationalOrganization
"&%InternationalOrganization is 
the class of &%Organizations whose activities have international scope and 
which typically have members who are, or are from, different &%Nations."}%
. instance(vORG, InternationalOrganization) =>
      exists vCOUNTRY1: U; vCOUNTRY2: U
          . instance(vCOUNTRY1, Nation)
            /\ instance(vCOUNTRY2, Nation)
            /\ agentOperatesInArea(vORG, vCOUNTRY1)
            /\ agentOperatesInArea(vORG, vCOUNTRY2)
            /\ not vCOUNTRY1 = vCOUNTRY2
. subclass(OrganizationOfNations, InternationalOrganization)
%{OrganizationOfNations
"&%InternationalOrganization is the 
class of &%Organizations whose members are &%Nations."}%
. instance(vORG, OrganizationOfNations) /\ member(vMEM, vORG) =>
      instance(vMEM, Nation)
. instance(dateEstablished, BinaryPredicate)
. domain(dateEstablished, a_1, Physical)
. domainSubclass(dateEstablished, a_2, TimePosition)
. dateEstablished(vTHING, vDATE) =>
      exists vDAY: U
          . instance(vDAY, vDATE)
            /\ overlapsTemporally(vDAY, BeginFn(WhenFn(vTHING)))
%{dateEstablished
"(&%dateEstablished ?THING ?TIME) means 
that the &%Physical ?THING was founded on the date indicated by ?TIME.  
For example, (&%dateEstablished &%UnitedNations 
(&%DayFn 26 (&%MonthFn &%June (&%YearFn 1945))))."}%
. instance(dateDissolved, BinaryPredicate)
. domain(dateDissolved, a_1, Physical)
. domainSubclass(dateDissolved, a_2, TimePosition)
. dateDissolved(vTHING, vDATE) =>
      exists vDAY: U
          . instance(vDAY, vDATE)
            /\ overlapsTemporally(vDAY, EndFn(WhenFn(vTHING)))
%{dateDissolved
"(&%dateDissolved ?THING ?TIME) means that 
the &%Physical ?THING was dissolved, disbanded, or superseded on the date 
indicated by ?TIME.  For example, (&%dateDissolved 
&%UnitedNationsPreventiveDeploymentForce (&%DayFn 25 (&%MonthFn &%March 
(&%YearFn 1999))))."}%
. instance(successorOrganization, BinaryPredicate)
. instance(successorOrganization, AsymmetricRelation)
%{successorOrganization
"(&%successorOrganization ?OLD ?NEW) 
means that the &%Organization ?OLD was transformed or merged into, or 
otherwise succeeded by, the &%Organization ?NEW."}%
. domain(successorOrganization, a_1, Organization)
. domain(successorOrganization, a_2, Organization)
. successorOrganization(vORG1, vORG2) =>
      earlier(WhenFn(vORG1), WhenFn(vORG2))
. instance(aimOfOrganization, BinaryPredicate)
. domain(aimOfOrganization, a_1, Organization)
. domain(aimOfOrganization, a_2, SymbolicString)
%{aimOfOrganization
"(&%aimOfOrganization ?GROUP ?DESCRIPTION) means that the &%Organization 
?GROUP has the purpose ?DESCRIPTION, formulated as a quoted text."}%
. instance(organizationalObjective, BinaryPredicate)
. domain(organizationalObjective, a_1, Agent)
. domain(organizationalObjective, a_2, AreaOfConcern)
. subrelation(organizationalObjective, attribute)
%{organizationalObjective
"(&%organizationalObjective ?AGENT 
?FOCUS) means that the &%Agent ?AGENT has significant aims and 
concerns characterized by the &%AreaOfConcern ?FOCUS."}%
. organizationalObjective(vORG, vAIM)
  /\ subAttribute(vAIM, vOVERAIM) =>
      organizationalObjective(vORG, vOVERAIM)
. subclass(AreaOfConcern, Attribute)
%{AreaOfConcern
"&%AreaOfConcern is a subclass of 
&%Attributes that represent and classify the kinds of interests that 
agents have."}%
. subclass(TransnationalIssue, AreaOfConcern)
%{TransnationalIssue
"&%TransnationalIssue is a class of 
&%Attributes that characterize the concerns of &%Nations, international  
Non-Governmental Institutions (NGOs), and other transnational agents."}%
. instance(vAGENT, InternationalOrganization)
  /\ organizationalObjective(vAGENT, vTOPIC) =>
      instance(vTOPIC, TransnationalIssue)
. instance(InternationalPeaceAndSecurity, TransnationalIssue)
. instance(BoundaryDetermination, TransnationalIssue)
. instance(PromoteRegionalStability, TransnationalIssue)
. instance(AdministrationAndManagement, AreaOfConcern)
. subAttribute(TransitionalAdministration,
               AdministrationAndManagement)
. subAttribute(TransitionalAdministration,
               PromoteRegionalStability)
. subAttribute(PeacekeepingOperation, PromoteRegionalStability)
. subAttribute(EmigrationAndImmigrationIssues,
               PromoteRegionalStability)
. relatedInternalConcept(ObservationAndMonitoring,
                         PromoteRegionalStability)
. instance(ObservationAndMonitoring, AreaOfConcern)
. subAttribute(WeaponsInspection, ObservationAndMonitoring)
. subAttribute(WeaponsInspection, ArmsControl)
. instance(ArmsControl, TransnationalIssue)
. subAttribute(ArmsControl, InternationalPeaceAndSecurity)
. subAttribute(ConventionalArmsControl, ArmsControl)
. subAttribute(ControlWeaponsOfMassDestruction, ArmsControl)
. subAttribute(ControlNuclearWeapons,
               ControlWeaponsOfMassDestruction)
. subAttribute(NuclearNonproliferation,
               ControlWeaponsOfMassDestruction)
. subAttribute(NuclearExportControls, NuclearNonproliferation)
. subAttribute(NuclearDisarmament, NuclearNonproliferation)
. subAttribute(ControlBiologicalAndChemicalWeapons,
               ControlWeaponsOfMassDestruction)
. subAttribute(CBWExportControls,
               ControlBiologicalAndChemicalWeapons)
. subAttribute(EliminateChemicalWeapons,
               ControlBiologicalAndChemicalWeapons)
. instance(ReducingCrime, AreaOfConcern)
. subAttribute(ReducingCrime, SocialDevelopment)
. subAttribute(CrimePrevention, ReducingCrime)
. subAttribute(SupportLawEnforcement, ReducingCrime)
. subAttribute(CivilPoliceTraining, SupportLawEnforcement)
. subAttribute(PeacekeepingOperation, ReducingCrime)
. instance(EconomicCooperation, TransnationalIssue)
. subAttribute(EconomicIntegration, EconomicCooperation)
. subAttribute(EconomicPolicyCoordination, EconomicCooperation)
. subAttribute(CoordinateCreditPolicy, EconomicPolicyCoordination)
. subAttribute(FinancialCooperation, EconomicCooperation)
. subAttribute(MonetaryUnion, FinancialCooperation)
. subAttribute(EnergyCooperation, EconomicCooperation)
. instance(EnergyAndTheEnvironment, TransnationalIssue)
. subAttribute(EnvironmentalCooperation, EnergyAndTheEnvironment)
. subAttribute(EnergyCooperation, EnergyAndTheEnvironment)
. subAttribute(PeacefulUseOfAtomicPower, EnergyAndTheEnvironment)
. instance(InfrastructureCooperation, AreaOfConcern)
. subAttribute(TransportationCoordination,
               InfrastructureCooperation)
. subAttribute(CooperationInCivilAviation,
               TransportationCoordination)
. subAttribute(EnergyCooperation, InfrastructureCooperation)
. subAttribute(InformationStandards, InfrastructureCooperation)
. subAttribute(IndustryStandards, InfrastructureCooperation)
. subAttribute(CommunicationsCoordination,
               InfrastructureCooperation)
. subAttribute(IntellectualPropertyProtection,
               InfrastructureCooperation)
. subAttribute(InternationalMaritimeAffairs,
               InfrastructureCooperation)
. instance(EconomicDevelopment, AreaOfConcern)
. subAttribute(AgriculturalDevelopment, EconomicDevelopment)
. subAttribute(PromotionOfPrivateEnterprise, EconomicDevelopment)
. subAttribute(PromotionOfTourism, EconomicDevelopment)
. subAttribute(InternationalTradeSupport, TransnationalIssue)
. subAttribute(PromotionOfTradeAndInvestment,
               InternationalTradeSupport)
. subAttribute(PromotionOfFreeTrade, InternationalTradeSupport)
. subAttribute(EfficientCustomsAdministration,
               InternationalTradeSupport)
. subAttribute(EfficientCustomsAdministration,
               InfrastructureCooperation)
. subAttribute(MonetaryStability, EconomicDevelopment)
. subAttribute(ReducePoverty, EconomicDevelopment)
. subAttribute(PromoteSustainableDevelopment, EconomicDevelopment)
. subAttribute(LaborIssues, EconomicDevelopment)
. instance(LaborIssues, AreaOfConcern)
. subAttribute(PromoteTradeUnionism, LaborIssues)
. subAttribute(WorldLaborIssues, LaborIssues)
. subAttribute(WorldLaborIssues, TransnationalIssue)
. instance(MilitaryCooperation, TransnationalIssue)
. subAttribute(MutualDefensePact, MilitaryCooperation)
. instance(PoliticalCooperation, AreaOfConcern)
. subAttribute(PoliticalIntegration, PoliticalCooperation)
. subAttribute(PoliticalDevelopment, PoliticalCooperation)
. instance(JusticeIssues, AreaOfConcern)
. instance(InternationalJustice, JusticeIssues)
. instance(InternationalJustice, TransnationalIssue)
. subAttribute(WarCrimesProsecution, InternationalJustice)
. subAttribute(CompensationAndReparation, JusticeIssues)
. instance(SocialDevelopment, AreaOfConcern)
. subAttribute(GenderEquality, SocialDevelopment)
. subAttribute(ReducePoverty, SocialDevelopment)
. subAttribute(PromoteSustainableDevelopment, SocialDevelopment)
. subAttribute(EmigrationAndImmigrationIssues, SocialDevelopment)
. subAttribute(PublicHealthConcern, SocialDevelopment)
. instance(SocialCooperation, TransnationalIssue)
. subAttribute(CulturalCooperation, SocialCooperation)
. subAttribute(OrganizeOlympicGames, CulturalCooperation)
. subAttribute(EducationalCooperation, SocialCooperation)
. subAttribute(HumanitarianAssistance, SocialCooperation)
. instance(InformationCooperation, AreaOfConcern)
. subAttribute(EducationalCooperation, InformationCooperation)
. instance(TechnologyCooperation, InformationCooperation)
. instance(SocioeconomicResearch, InformationCooperation)
. instance(ScientificCooperation, InformationCooperation)
. instance(SpaceResearchAndTechnology, InformationCooperation)
. instance(HumanitarianAssistance, TransnationalIssue)
. subAttribute(HumanRightsIssues, HumanitarianAssistance)
. subAttribute(HumanitarianAid, HumanitarianAssistance)
. subAttribute(FoodAid, HumanitarianAid)
. subAttribute(RefugeeAssistance, HumanitarianAssistance)
. subAttribute(RefugeeAssistance, EmigrationAndImmigrationIssues)
. instance(PublicHealthConcern, AreaOfConcern)
. subAttribute(ChildHealthServices, PublicHealthConcern)
. subAttribute(ReproductiveHealthAndFamilyPlannning,
               PublicHealthConcern)
. subAttribute(PopulationPolicySupport,
               ReproductiveHealthAndFamilyPlannning)
. subAttribute(ImproveHumanSettlementConditions,
               PublicHealthConcern)
. instance(AfricanCaribbeanAndPacificGroupOfStates,
           OrganizationOfNations)
. conventionalLongName(a_Quot_A_f_r_i_c_a_n_Comma_Space_C_a_r_i_b_b_e_a_n_Comma_Space_a_n_d_Space_P_a_c_i_f_i_c_Space_G_r_o_u_p_Space_o_f_Space_S_t_a_t_e_s_Quot,
                       AfricanCaribbeanAndPacificGroupOfStates)
. abbreviation(a_Quot_A_C_P_Space_G_r_o_u_p_Quot,
               AfricanCaribbeanAndPacificGroupOfStates)
. dateEstablished(AfricanCaribbeanAndPacificGroupOfStates,
                  DayFn(a_6, MonthFn(June, YearFn(a_1_9_7_5))))
. organizationalObjective(AfricanCaribbeanAndPacificGroupOfStates,
                          EconomicCooperation)
. instance(AfricanDevelopmentBank, OrganizationOfNations)
. abbreviation(a_Quot_A_f_D_B_Quot, AfricanDevelopmentBank)
. localLongName(a_Quot_B_a_n_q_u_e_Space_A_f_r_i_c_a_i_n_e_Space_d_e_Space_D_e_v_e_l_o_p_p_e_m_e_n_t_Quot,
                AfricanDevelopmentBank)
. localShortName(a_Quot_B_A_D_Quot, AfricanDevelopmentBank)
. dateEstablished(AfricanDevelopmentBank,
                  DayFn(a_4, MonthFn(August, YearFn(a_1_9_6_3))))
. organizationalObjective(AfricanDevelopmentBank,
                          EconomicDevelopment)
. organizationalObjective(AfricanDevelopmentBank,
                          SocialDevelopment)
. instance(AgencyForTheFrenchSpeakingCommunity,
           OrganizationOfNations)
. conventionalLongName(a_Quot_A_g_e_n_c_y_Space_f_o_r_Space_t_h_e_Space_F_r_e_n_c_h_Minus_S_p_e_a_k_i_n_g_Space_C_o_m_m_u_n_i_t_y_Quot,
                       AgencyForTheFrenchSpeakingCommunity)
. abbreviation(a_Quot_A_C_C_T_Quot,
               AgencyForTheFrenchSpeakingCommunity)
. formerName(a_Quot_A_g_e_n_c_y_Space_f_o_r_Space_C_u_l_t_u_r_a_l_Space_a_n_d_Space_T_e_c_h_n_i_c_a_l_Space_C_o_o_p_e_r_a_t_i_o_n_Quot,
             AgencyForTheFrenchSpeakingCommunity)
. holdsDuring(ImmediateFutureFn(YearFn(a_1_9_9_6)),
              conventionalLongName(a_Quot_A_g_e_n_c_y_Space_f_o_r_Space_t_h_e_Space_F_r_e_n_c_h_Minus_S_p_e_a_k_i_n_g_Space_C_o_m_m_u_n_i_t_y_Quot,
                                   AgencyForTheFrenchSpeakingCommunity))
. dateEstablished(AgencyForTheFrenchSpeakingCommunity,
                  DayFn(a_2_0, MonthFn(March, YearFn(a_1_9_7_0))))
. instance(AgencyForTheProhibitionOfNuclearWeaponsInLatinAmericaAndTheCaribbean,
           OrganizationOfNations)
. conventionalLongName(a_Quot_A_g_e_n_c_y_Space_f_o_r_Space_t_h_e_Space_P_r_o_h_i_b_i_t_i_o_n_Space_o_f_Space_N_u_c_l_e_a_r_Space_W_e_a_p_o_n_s_Space_i_n_Space_L_a_t_i_n_Space_A_m_e_r_i_c_a_Space_a_n_d_Space_t_h_e_Space_C_a_r_i_b_b_e_a_n_Quot,
                       AgencyForTheProhibitionOfNuclearWeaponsInLatinAmericaAndTheCaribbean)
. abbreviation(a_Quot_O_P_A_N_A_L_Quot,
               AgencyForTheProhibitionOfNuclearWeaponsInLatinAmericaAndTheCaribbean)
. localLongName(a_Quot_O_r_g_a_n_i_s_m_o_Space_p_a_r_a_Space_l_a_Space_P_r_o_s_c_r_i_p_c_i_o_n_Space_d_e_Space_l_a_s_Space_A_r_m_a_s_Space_N_u_c_l_e_a_r_e_s_Space_e_n_Space_l_a_Space_A_m_e_r_i_c_a_Space_L_a_t_i_n_a_Space_y_Space_e_l_Space_C_a_r_i_b_e_Quot,
                AgencyForTheProhibitionOfNuclearWeaponsInLatinAmericaAndTheCaribbean)
. localShortName(a_Quot_O_P_A_N_A_L_Quot,
                 AgencyForTheProhibitionOfNuclearWeaponsInLatinAmericaAndTheCaribbean)
. dateEstablished(AgencyForTheProhibitionOfNuclearWeaponsInLatinAmericaAndTheCaribbean,
                  DayFn(a_1_4, MonthFn(February, YearFn(a_1_9_6_7))))
. organizationalObjective(AgencyForTheProhibitionOfNuclearWeaponsInLatinAmericaAndTheCaribbean,
                          NuclearNonproliferation)
. organizationalObjective(AgencyForTheProhibitionOfNuclearWeaponsInLatinAmericaAndTheCaribbean,
                          PeacefulUseOfAtomicPower)
. instance(AndeanCommunityOfNations, OrganizationOfNations)
. conventionalLongName(a_Quot_A_n_d_e_a_n_Space_C_o_m_m_u_n_i_t_y_Space_o_f_Space_N_a_t_i_o_n_s_Quot,
                       AndeanCommunityOfNations)
. abbreviation(a_Quot_C_A_N_Quot, AndeanCommunityOfNations)
. formerName(a_Quot_A_n_d_e_a_n_G_r_o_u_p_Quot,
             AndeanCommunityOfNations)
. formerName(a_Quot_A_G_Quot, AndeanCommunityOfNations)
. formerName(a_Quot_A_n_d_e_a_n_Space_P_a_r_l_i_a_m_e_n_t_Quot,
             AndeanCommunityOfNations)
. formerName(a_Quot_A_n_d_e_a_n_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
             AndeanCommunityOfNations)
. formerName(a_Quot_A_n_c_o_m_Quot, AndeanCommunityOfNations)
. holdsDuring(ImmediateFutureFn(DayFn(a_1,
                                      MonthFn(October, YearFn(a_1_9_9_2)))),
              conventionalLongName(a_Quot_A_n_d_e_a_n_Space_C_o_m_m_u_n_i_t_y_Space_o_f_Space_N_a_t_i_o_n_s_Quot,
                                   AndeanCommunityOfNations))
. dateEstablished(AndeanCommunityOfNations,
                  DayFn(a_2_6, MonthFn(May, YearFn(a_1_9_6_9))))
. organizationalObjective(AndeanCommunityOfNations,
                          EconomicIntegration)
. instance(AntarcticTreatyCouncil, OrganizationOfNations)
. conventionalLongName(a_Quot_A_n_t_a_r_c_t_i_c_Space_T_r_e_a_t_y_Space_C_o_u_n_c_i_l_Quot,
                       AntarcticTreatyCouncil)
. dateEstablished(AntarcticTreatyCouncil,
                  DayFn(a_2_3, MonthFn(June, YearFn(a_1_9_6_1))))
. organizationalObjective(AntarcticTreatyCouncil,
                          AdministrationAndManagement)
. organizationalObjective(AntarcticTreatyCouncil,
                          PromoteRegionalStability)
. instance(ArabBankForEconomicDevelopmentInAfrica,
           OrganizationOfNations)
. conventionalLongName(a_Quot_A_r_a_b_Space_B_a_n_k_Space_f_o_r_Space_E_c_o_n_o_m_i_c_Space_D_e_v_e_l_o_p_m_e_n_t_Space_i_n_Space_A_f_r_i_c_a_Quot,
                       ArabBankForEconomicDevelopmentInAfrica)
. abbreviation(a_Quot_A_B_E_D_A_Quot,
               ArabBankForEconomicDevelopmentInAfrica)
. localLongName(a_Quot_B_a_n_q_u_e_Space_A_r_a_b_e_Space_d_e_Space_D_e_v_e_l_o_p_p_e_m_e_n_t_Space_E_c_o_n_o_m_i_q_u_e_Space_e_n_Space_A_f_r_i_q_u_e_Quot,
                ArabBankForEconomicDevelopmentInAfrica)
. localShortName(a_Quot_B_A_D_E_A_Quot,
                 ArabBankForEconomicDevelopmentInAfrica)
. dateEstablished(ArabBankForEconomicDevelopmentInAfrica,
                  DayFn(a_1_8, MonthFn(February, YearFn(a_1_9_7_4))))
. organizationalObjective(ArabBankForEconomicDevelopmentInAfrica,
                          EconomicDevelopment)
. instance(ArabCooperationCouncil, OrganizationOfNations)
. conventionalLongName(a_Quot_A_r_a_b_Space_C_o_o_p_e_r_a_t_i_o_n_Space_C_o_u_n_c_i_l_Quot,
                       ArabCooperationCouncil)
. abbreviation(a_Quot_A_C_C_Quot, ArabCooperationCouncil)
. dateEstablished(ArabCooperationCouncil,
                  DayFn(a_1_6, MonthFn(February, YearFn(a_1_9_8_9))))
. organizationalObjective(ArabCooperationCouncil,
                          EconomicIntegration)
. instance(ArabFundForEconomicAndSocialDevelopment,
           OrganizationOfNations)
. conventionalLongName(a_Quot_A_r_a_b_Space_F_u_n_d_Space_f_o_r_Space_E_c_o_n_o_m_i_c_Space_a_n_d_Space_S_o_c_i_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
                       ArabFundForEconomicAndSocialDevelopment)
. abbreviation(a_Quot_A_F_E_S_D_Quot,
               ArabFundForEconomicAndSocialDevelopment)
. dateEstablished(ArabFundForEconomicAndSocialDevelopment,
                  DayFn(a_1_6, MonthFn(May, YearFn(a_1_9_6_8))))
. organizationalObjective(ArabFundForEconomicAndSocialDevelopment,
                          EconomicDevelopment)
. organizationalObjective(ArabFundForEconomicAndSocialDevelopment,
                          SocialDevelopment)
. instance(ArabLeague, OrganizationOfNations)
. conventionalLongName(a_Quot_A_r_a_b_Space_L_e_a_g_u_e_Quot,
                       ArabLeague)
. conventionalLongName(a_Quot_L_e_a_g_u_e_Space_o_f_Space_A_r_a_b_Space_S_t_a_t_e_s_Quot,
                       ArabLeague)
. abbreviation(a_Quot_A_L_Quot, ArabLeague)
. abbreviation(a_Quot_L_A_S_Quot, ArabLeague)
. dateEstablished(ArabLeague,
                  DayFn(a_2_2, MonthFn(March, YearFn(a_1_9_4_5))))
. organizationalObjective(ArabLeague, EconomicCooperation)
. organizationalObjective(ArabLeague, SocialCooperation)
. organizationalObjective(ArabLeague, PoliticalCooperation)
. organizationalObjective(ArabLeague, MilitaryCooperation)
. instance(ArabMaghrebUnion, OrganizationOfNations)
. conventionalLongName(a_Quot_A_r_a_b_Space_M_a_g_h_r_e_b_Space_U_n_i_o_n_Quot,
                       ArabMaghrebUnion)
. abbreviation(a_Quot_A_M_U_Quot, ArabMaghrebUnion)
. dateEstablished(ArabMaghrebUnion,
                  DayFn(a_1_7, MonthFn(February, YearFn(a_1_9_8_9))))
. organizationalObjective(ArabMaghrebUnion, EconomicIntegration)
. organizationalObjective(ArabMaghrebUnion, CulturalCooperation)
. organizationalObjective(ArabMaghrebUnion, PoliticalCooperation)
. organizationalObjective(ArabMaghrebUnion, MilitaryCooperation)
. instance(ArabMonetaryFund, OrganizationOfNations)
. conventionalLongName(a_Quot_A_r_a_b_Space_M_o_n_e_t_a_r_y_Space_F_u_n_d_Quot,
                       ArabMonetaryFund)
. abbreviation(a_Quot_A_M_F_Quot, ArabMonetaryFund)
. dateEstablished(ArabMonetaryFund,
                  DayFn(a_2_7, MonthFn(April, YearFn(a_1_9_7_6))))
. organizationalObjective(ArabMonetaryFund, EconomicCooperation)
. instance(AsiaPacificEconomicCooperation, OrganizationOfNations)
. conventionalLongName(a_Quot_A_s_i_a_Minus_P_a_c_i_f_i_c_Space_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Quot,
                       AsiaPacificEconomicCooperation)
. abbreviation(a_Quot_A_P_E_C_Quot, AsiaPacificEconomicCooperation)
. dateEstablished(AsiaPacificEconomicCooperation,
                  DayFn(a_7, MonthFn(November, YearFn(a_1_9_8_9))))
. organizationalObjective(AsiaPacificEconomicCooperation,
                          PromotionOfTradeAndInvestment)
. instance(AsianDevelopmentBank, OrganizationOfNations)
. conventionalLongName(a_Quot_A_s_i_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
                       AsianDevelopmentBank)
. abbreviation(a_Quot_A_s_D_B_Quot, AsianDevelopmentBank)
. dateEstablished(AsianDevelopmentBank,
                  DayFn(a_1_9, MonthFn(December, YearFn(a_1_9_6_6))))
. organizationalObjective(AsianDevelopmentBank,
                          EconomicCooperation)
. instance(AssociationOfSoutheastAsianNations,
           OrganizationOfNations)
. conventionalLongName(a_Quot_A_s_s_o_c_i_a_t_i_o_n_Space_o_f_Space_S_o_u_t_h_e_a_s_t_Space_A_s_i_a_n_Space_N_a_t_i_o_n_s_Quot,
                       AssociationOfSoutheastAsianNations)
. abbreviation(a_Quot_A_S_E_A_N_Quot,
               AssociationOfSoutheastAsianNations)
. dateEstablished(AssociationOfSoutheastAsianNations,
                  DayFn(a_8, MonthFn(August, YearFn(a_1_9_6_7))))
. organizationalObjective(AssociationOfSoutheastAsianNations,
                          EconomicCooperation)
. organizationalObjective(AssociationOfSoutheastAsianNations,
                          SocialCooperation)
. organizationalObjective(AssociationOfSoutheastAsianNations,
                          CulturalCooperation)
. instance(ASEANRegionalForum, OrganizationOfNations)
. conventionalLongName(a_Quot_A_S_E_A_N_Space_R_e_g_i_o_n_a_l_Space_F_o_r_u_m_Quot,
                       ASEANRegionalForum)
. abbreviation(a_Quot_A_R_F_Quot, ASEANRegionalForum)
. dateEstablished(ASEANRegionalForum, YearFn(a_1_9_9_4))
. instance(RegionalSecurity, AreaOfConcern)
. organizationalObjective(ASEANRegionalForum, RegionalSecurity)
. instance(AustraliaGroup, OrganizationOfNations)
. conventionalLongName(a_Quot_A_u_s_t_r_a_l_i_a_Space_G_r_o_u_p_Quot,
                       AustraliaGroup)
. dateEstablished(AustraliaGroup, YearFn(a_1_9_8_4))
. organizationalObjective(AustraliaGroup, CBWExportControls)
. instance(AustraliaNewZealandUnitedStatesSecurityTreaty,
           OrganizationOfNations)
. conventionalLongName(a_Quot_A_u_s_t_r_a_l_i_a_Minus_N_e_w_Space_Z_e_a_l_a_n_d_Minus_U_n_i_t_e_d_Space_S_t_a_t_e_s_Space_S_e_c_u_r_i_t_y_Space_T_r_e_a_t_y_Quot,
                       AustraliaNewZealandUnitedStatesSecurityTreaty)
. abbreviation(a_Quot_A_N_Z_U_S_Quot,
               AustraliaNewZealandUnitedStatesSecurityTreaty)
. dateEstablished(AustraliaNewZealandUnitedStatesSecurityTreaty,
                  DayFn(a_1, MonthFn(September, YearFn(a_1_9_5_1))))
. organizationalObjective(AustraliaNewZealandUnitedStatesSecurityTreaty,
                          MutualDefensePact)
. instance(BankForInternationalSettlements, OrganizationOfNations)
. conventionalLongName(a_Quot_B_a_n_k_Space_f_o_r_Space_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_S_e_t_t_l_e_m_e_n_t_s_Quot,
                       BankForInternationalSettlements)
. abbreviation(a_Quot_B_I_S_Quot, BankForInternationalSettlements)
. dateEstablished(BankForInternationalSettlements,
                  DayFn(a_2_0, MonthFn(January, YearFn(a_1_9_3_0))))
. organizationalObjective(BankForInternationalSettlements,
                          FinancialCooperation)
. instance(BeneluxEconomicUnion, OrganizationOfNations)
. conventionalLongName(a_Quot_B_e_n_e_l_u_x_Space_E_c_o_n_o_m_i_c_Space_U_n_i_o_n_Quot,
                       BeneluxEconomicUnion)
. abbreviation(a_Quot_B_e_n_e_l_u_x_Quot, BeneluxEconomicUnion)
. dateEstablished(BeneluxEconomicUnion,
                  DayFn(a_3, MonthFn(February, YearFn(a_1_9_5_8))))
. organizationalObjective(BeneluxEconomicUnion,
                          EconomicIntegration)
. member(Belgium, BeneluxEconomicUnion)
. member(Netherlands, BeneluxEconomicUnion)
. member(Luxembourg, BeneluxEconomicUnion)
. instance(BigSeven, OrganizationOfNations)
. conventionalLongName(a_Quot_B_i_g_Space_S_e_v_e_n_Quot, BigSeven)
. dateEstablished(BigSeven, YearFn(a_1_9_7_5))
. organizationalObjective(BigSeven, EconomicPolicyCoordination)
. instance(BigSix, OrganizationOfNations)
. conventionalLongName(a_Quot_B_i_g_Space_S_i_x_Quot, BigSix)
. dateEstablished(BigSix, YearFn(a_1_9_6_7))
. not BigSix = GroupOf6
. organizationalObjective(BigSix, EconomicCooperation)
. instance(BlackSeaEconomicCooperationZone, OrganizationOfNations)
. conventionalLongName(a_Quot_B_l_a_c_k_Space_S_e_a_Space_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_Z_o_n_e_Quot,
                       BlackSeaEconomicCooperationZone)
. abbreviation(a_Quot_B_S_E_C_Quot,
               BlackSeaEconomicCooperationZone)
. dateEstablished(BlackSeaEconomicCooperationZone,
                  DayFn(a_2_5, MonthFn(June, YearFn(a_1_9_9_2))))
. organizationalObjective(BlackSeaEconomicCooperationZone,
                          PromoteRegionalStability)
. organizationalObjective(BlackSeaEconomicCooperationZone,
                          EconomicCooperation)
. instance(CaribbeanCommunityAndCommonMarket,
           OrganizationOfNations)
. conventionalLongName(a_Quot_C_a_r_i_b_b_e_a_n_Space_C_o_m_m_u_n_i_t_y_Space_a_n_d_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
                       CaribbeanCommunityAndCommonMarket)
. abbreviation(a_Quot_C_a_r_i_c_o_m_Quot,
               CaribbeanCommunityAndCommonMarket)
. dateEstablished(CaribbeanCommunityAndCommonMarket,
                  DayFn(a_4, MonthFn(July, YearFn(a_1_9_7_3))))
. organizationalObjective(CaribbeanCommunityAndCommonMarket,
                          EconomicIntegration)
. organizationalObjective(CaribbeanCommunityAndCommonMarket,
                          EconomicDevelopment)
. instance(CaribbeanDevelopmentBank, OrganizationOfNations)
. conventionalLongName(a_Quot_C_a_r_i_b_b_e_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
                       CaribbeanDevelopmentBank)
. abbreviation(a_Quot_C_D_B_Quot, CaribbeanDevelopmentBank)
. dateEstablished(CaribbeanDevelopmentBank,
                  DayFn(a_1_8, MonthFn(October, YearFn(a_1_9_6_9))))
. organizationalObjective(CaribbeanDevelopmentBank,
                          EconomicDevelopment)
. organizationalObjective(CaribbeanDevelopmentBank,
                          EconomicCooperation)
. instance(CentralAfricanStatesDevelopmentBank,
           OrganizationOfNations)
. conventionalLongName(a_Quot_C_e_n_t_r_a_l_Space_A_f_r_i_c_a_n_Space_S_t_a_t_e_s_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
                       CentralAfricanStatesDevelopmentBank)
. abbreviation(a_Quot_B_D_E_A_C_Quot,
               CentralAfricanStatesDevelopmentBank)
. localLongName(a_Quot_B_a_n_q_u_e_Space_d_e_Space_D_e_v_e_l_o_p_p_e_m_e_n_t_Space_d_e_s_Space_E_t_a_t_s_Space_d_e_Space_l_'_A_f_r_i_q_u_e_Space_C_e_n_t_r_a_l_e_Quot,
                CentralAfricanStatesDevelopmentBank)
. dateEstablished(CentralAfricanStatesDevelopmentBank,
                  DayFn(a_3, MonthFn(December, YearFn(a_1_9_7_5))))
. organizationalObjective(CentralAfricanStatesDevelopmentBank,
                          EconomicDevelopment)
. instance(CentralAmericanBankForEconomicIntegration,
           OrganizationOfNations)
. conventionalLongName(a_Quot_C_e_n_t_r_a_l_Space_A_m_e_r_i_c_a_n_Space_B_a_n_k_Space_f_o_r_Space_E_c_o_n_o_m_i_c_Space_I_n_t_e_g_r_a_t_i_o_n_Quot,
                       CentralAmericanBankForEconomicIntegration)
. abbreviation(a_Quot_B_C_I_E_Quot,
               CentralAmericanBankForEconomicIntegration)
. localLongName(a_Quot_B_a_n_c_o_Space_C_e_n_t_r_o_a_m_e_r_i_c_a_n_o_Space_d_e_Space_I_n_t_e_g_r_a_c_i_o_n_Space_E_c_o_n_o_m_i_c_o_Quot,
                CentralAmericanBankForEconomicIntegration)
. dateEstablished(CentralAmericanBankForEconomicIntegration,
                  DayFn(a_1_3, MonthFn(December, YearFn(a_1_9_6_0))))
. organizationalObjective(CentralAmericanBankForEconomicIntegration,
                          EconomicIntegration)
. organizationalObjective(CentralAmericanBankForEconomicIntegration,
                          EconomicDevelopment)
. instance(CentralAmericanCommonMarket, OrganizationOfNations)
. conventionalLongName(a_Quot_C_e_n_t_r_a_l_Space_A_m_e_r_i_c_a_n_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
                       CentralAmericanCommonMarket)
. abbreviation(a_Quot_C_A_C_M_Quot, CentralAmericanCommonMarket)
. dateEstablished(CentralAmericanCommonMarket,
                  DayFn(a_1_3, MonthFn(December, YearFn(a_1_9_6_0))))
. organizationalObjective(CentralAmericanCommonMarket,
                          EconomicIntegration)
. instance(CentralEuropeanInitiative, OrganizationOfNations)
. conventionalLongName(a_Quot_C_e_n_t_r_a_l_Space_E_u_r_o_p_e_a_n_Space_I_n_i_t_i_a_t_i_v_e_Quot,
                       CentralEuropeanInitiative)
. abbreviation(a_Quot_C_E_I_Quot, CentralEuropeanInitiative)
. formerName(a_Quot_Q_u_a_d_r_i_l_a_t_e_r_a_l_Space_I_n_i_t_i_a_t_i_v_e_Quot,
             CentralEuropeanInitiative)
. formerName(a_Quot_H_e_x_a_g_o_n_a_l_Space_I_n_i_t_i_a_t_i_v_e_Quot,
             CentralEuropeanInitiative)
. dateEstablished(CentralEuropeanInitiative,
                  DayFn(a_1_1, MonthFn(November, YearFn(a_1_9_8_9))))
. organizationalObjective(CentralEuropeanInitiative,
                          EconomicCooperation)
. organizationalObjective(CentralEuropeanInitiative,
                          PoliticalCooperation)
. instance(ColomboPlan, OrganizationOfNations)
. conventionalLongName(a_Quot_C_o_l_o_m_b_o_Space_P_l_a_n_Quot,
                       ColomboPlan)
. abbreviation(a_Quot_C_P_Quot, ColomboPlan)
. dateEstablished(ColomboPlan, MonthFn(May, YearFn(a_1_9_5_0)))
. organizationalObjective(ColomboPlan, EconomicDevelopment)
. organizationalObjective(ColomboPlan, SocialDevelopment)
. instance(CommonwealthOfNations, OrganizationOfNations)
. conventionalLongName(a_Quot_C_o_m_m_o_n_w_e_a_l_t_h_Space_o_f_Space_N_a_t_i_o_n_s_Quot,
                       CommonwealthOfNations)
. conventionalShortName(a_Quot_C_o_m_m_o_n_w_e_a_l_t_h_Quot,
                        CommonwealthOfNations)
. abbreviation(a_Quot_C_Quot, CommonwealthOfNations)
. dateEstablished(CommonwealthOfNations,
                  DayFn(a_3_1, MonthFn(December, YearFn(a_1_9_3_1))))
. organizationalObjective(CommonwealthOfNations,
                          PoliticalCooperation)
. organizationalObjective(CommonwealthOfNations,
                          EconomicCooperation)
. instance(CommonwealthOfIndependentStates, OrganizationOfNations)
. conventionalLongName(a_Quot_C_o_m_m_o_n_w_e_a_l_t_h_Space_o_f_Space_I_n_d_e_p_e_n_d_e_n_t_Space_S_t_a_t_e_s_Quot,
                       CommonwealthOfIndependentStates)
. abbreviation(a_Quot_C_I_S_Quot, CommonwealthOfIndependentStates)
. dateEstablished(CommonwealthOfIndependentStates,
                  DayFn(a_8, MonthFn(December, YearFn(a_1_9_9_1))))
. organizationalObjective(CommonwealthOfIndependentStates,
                          PoliticalCooperation)
. instance(CoordinatingCommitteeOnExportControls,
           OrganizationOfNations)
. conventionalLongName(a_Quot_C_o_o_r_d_i_n_a_t_i_n_g_Space_C_o_m_m_i_t_t_e_e_Space_o_n_Space_E_x_p_o_r_t_Space_C_o_n_t_r_o_l_s_Quot,
                       CoordinatingCommitteeOnExportControls)
. abbreviation(a_Quot_C_O_C_O_M_Quot,
               CoordinatingCommitteeOnExportControls)
. dateEstablished(CoordinatingCommitteeOnExportControls,
                  YearFn(a_1_9_4_9))
. dateDissolved(CoordinatingCommitteeOnExportControls,
                DayFn(a_3_1, MonthFn(March, YearFn(a_1_9_9_4))))
. successorOrganization(CoordinatingCommitteeOnExportControls,
                        WassenaarArrangement)
%{CoordinatingCommitteeOnExportControls
"The 
&%CoordinatingCommitteeOnExportControls was abolished as of March 31, 
1994, and its members formed the &%WassenaarArrangement on July 12, 1996, 
with expanded membership and a post-Cold War aim of voluntary export 
controls on conventional arms and dual-use goods and technologies."}%
. instance(CouncilForMutualEconomicAssistance,
           OrganizationOfNations)
. conventionalLongName(a_Quot_C_o_u_n_c_i_l_Space_f_o_r_Space_M_u_t_u_a_l_Space_E_c_o_n_o_m_i_c_Space_A_s_s_i_s_t_a_n_c_e_Quot,
                       CouncilForMutualEconomicAssistance)
. abbreviation(a_Quot_C_E_M_A_Quot,
               CouncilForMutualEconomicAssistance)
. abbreviation(a_Quot_C_M_E_A_Quot,
               CouncilForMutualEconomicAssistance)
. abbreviation(a_Quot_C_o_m_e_c_o_n_Quot,
               CouncilForMutualEconomicAssistance)
. dateEstablished(CouncilForMutualEconomicAssistance,
                  DayFn(a_2_5, MonthFn(January, YearFn(a_1_9_4_9))))
. dateDissolved(CouncilForMutualEconomicAssistance,
                DayFn(a_1, MonthFn(January, YearFn(a_1_9_9_1))))
. instance(CouncilOfArabEconomicUnity, OrganizationOfNations)
. conventionalLongName(a_Quot_C_o_u_n_c_i_l_Space_o_f_Space_A_r_a_b_Space_E_c_o_n_o_m_i_c_Space_U_n_i_t_y_Quot,
                       CouncilOfArabEconomicUnity)
. abbreviation(a_Quot_C_A_E_U_Quot, CouncilOfArabEconomicUnity)
. dateEstablished(CouncilOfArabEconomicUnity,
                  DayFn(a_3, MonthFn(June, YearFn(a_1_9_5_7))))
%{CouncilOfArabEconomicUnity
"The 
&%CouncilOfArabEconomicUnity was established in 1957 but did not become 
effective until May 30, 1964."}%
. organizationalObjective(CouncilOfArabEconomicUnity,
                          EconomicIntegration)
. instance(CouncilOfEurope, OrganizationOfNations)
. conventionalLongName(a_Quot_C_o_u_n_c_i_l_Space_o_f_Space_E_u_r_o_p_e_Quot,
                       CouncilOfEurope)
. abbreviation(a_Quot_C_E_Quot, CouncilOfEurope)
. dateEstablished(CouncilOfEurope,
                  DayFn(a_5, MonthFn(May, YearFn(a_1_9_4_9))))
. organizationalObjective(CouncilOfEurope, PoliticalCooperation)
. organizationalObjective(CouncilOfEurope, SocialDevelopment)
. organizationalObjective(CouncilOfEurope, CulturalCooperation)
. organizationalObjective(CouncilOfEurope,
                          PromoteRegionalStability)
. organizationalObjective(CouncilOfEurope, HumanRightsIssues)
. instance(CouncilOfTheBalticSeaStates, OrganizationOfNations)
. conventionalLongName(a_Quot_C_o_u_n_c_i_l_Space_o_f_Space_t_h_e_Space_B_a_l_t_i_c_Space_S_e_a_Space_S_t_a_t_e_s_Quot,
                       CouncilOfTheBalticSeaStates)
. abbreviation(a_Quot_C_B_S_S_Quot, CouncilOfTheBalticSeaStates)
. dateEstablished(CouncilOfTheBalticSeaStates,
                  DayFn(a_6, MonthFn(March, YearFn(a_1_9_9_2))))
. organizationalObjective(CouncilOfTheBalticSeaStates,
                          EconomicDevelopment)
. organizationalObjective(CouncilOfTheBalticSeaStates,
                          HumanitarianAid)
. organizationalObjective(CouncilOfTheBalticSeaStates,
                          EnergyAndTheEnvironment)
. organizationalObjective(CouncilOfTheBalticSeaStates,
                          PoliticalDevelopment)
. organizationalObjective(CouncilOfTheBalticSeaStates,
                          CulturalCooperation)
. instance(CouncilOfTheEntente, OrganizationOfNations)
. conventionalLongName(a_Quot_C_o_u_n_c_i_l_Space_o_f_Space_t_h_e_Space_E_n_t_e_n_t_e_Quot,
                       CouncilOfTheEntente)
. conventionalShortName(a_Quot_E_n_t_e_n_t_e_Quot,
                        CouncilOfTheEntente)
. dateEstablished(CouncilOfTheEntente,
                  DayFn(a_2_9, MonthFn(May, YearFn(a_1_9_5_9))))
. organizationalObjective(CouncilOfTheEntente, EconomicCooperation)
. organizationalObjective(CouncilOfTheEntente,
                          PoliticalCooperation)
. organizationalObjective(CouncilOfTheEntente, SocialCooperation)
. instance(WorldCustomsOrganization, OrganizationOfNations)
. conventionalLongName(a_Quot_C_u_s_t_o_m_s_Space_C_o_o_p_e_r_a_t_i_o_n_Space_C_o_u_n_c_i_l_Quot,
                       WorldCustomsOrganization)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_C_u_s_t_o_m_s_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       WorldCustomsOrganization)
. abbreviation(a_Quot_C_C_C_Quot, WorldCustomsOrganization)
. abbreviation(a_Quot_W_C_O_Quot, WorldCustomsOrganization)
. dateEstablished(WorldCustomsOrganization,
                  DayFn(a_1_5, MonthFn(December, YearFn(a_1_9_5_0))))
. instance(EastAfricanDevelopmentBank, OrganizationOfNations)
. conventionalLongName(a_Quot_E_a_s_t_Space_A_f_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
                       EastAfricanDevelopmentBank)
. abbreviation(a_Quot_E_A_D_B_Quot, EastAfricanDevelopmentBank)
. dateEstablished(EastAfricanDevelopmentBank,
                  DayFn(a_6, MonthFn(June, YearFn(a_1_9_6_7))))
. organizationalObjective(EastAfricanDevelopmentBank,
                          EconomicDevelopment)
. instance(EconomicAndSocialCouncil, OrganizationOfNations)
. conventionalLongName(a_Quot_E_c_o_n_o_m_i_c_Space_a_n_d_Space_S_o_c_i_a_l_Space_C_o_u_n_c_i_l_Quot,
                       EconomicAndSocialCouncil)
. abbreviation(a_Quot_E_C_O_S_O_C_Quot, EconomicAndSocialCouncil)
. dateEstablished(EconomicAndSocialCouncil,
                  DayFn(a_2_6, MonthFn(June, YearFn(a_1_9_4_5))))
%{EconomicAndSocialCouncil
"The &%EconomicAndSocialCouncil is 
the coordinating organization for the social and economic work of the 
&%UnitedNations.  It comprises five regional commissions and nine 
functional commissions."}%
. organizationalObjective(EconomicAndSocialCouncil,
                          EconomicDevelopment)
. organizationalObjective(EconomicAndSocialCouncil,
                          SocialDevelopment)
. subOrganization(EconomicAndSocialCouncil, UnitedNations)
. subOrganization(CommissionForSocialDevelopment,
                  EconomicAndSocialCouncil)
. instance(CommissionForSocialDevelopment,
           InternationalOrganization)
. subOrganization(CommissionOnCrimePreventionAndCriminalJustice,
                  EconomicAndSocialCouncil)
. instance(CommissionOnCrimePreventionAndCriminalJustice,
           InternationalOrganization)
. subOrganization(CommissionOnHumanRights,
                  EconomicAndSocialCouncil)
. instance(CommissionOnHumanRights, InternationalOrganization)
. subOrganization(CommissionOnNarcoticsDrugs,
                  EconomicAndSocialCouncil)
. instance(CommissionOnNarcoticsDrugs, InternationalOrganization)
. subOrganization(CommissionOnPopulationAndDevelopment,
                  EconomicAndSocialCouncil)
. instance(CommissionOnPopulationAndDevelopment,
           InternationalOrganization)
. subOrganization(CommissionOnScienceAndTechnologyForDevelopment,
                  EconomicAndSocialCouncil)
. instance(CommissionOnScienceAndTechnologyForDevelopment,
           InternationalOrganization)
. subOrganization(CommissionOnSustainableDevelopment,
                  EconomicAndSocialCouncil)
. instance(CommissionOnSustainableDevelopment,
           InternationalOrganization)
. subOrganization(CommissionOnTheStatusOfWomen,
                  EconomicAndSocialCouncil)
. instance(CommissionOnTheStatusOfWomen, InternationalOrganization)
. subOrganization(EconomicAndSocialCommissionForAsiaAndThePacific,
                  EconomicAndSocialCouncil)
. instance(EconomicAndSocialCommissionForAsiaAndThePacific,
           InternationalOrganization)
. subOrganization(EconomicAndSocialCommissionForWesternAsia,
                  EconomicAndSocialCouncil)
. instance(EconomicAndSocialCommissionForWesternAsia,
           InternationalOrganization)
. subOrganization(EconomicCommissionForAfrica,
                  EconomicAndSocialCouncil)
. instance(EconomicCommissionForAfrica, InternationalOrganization)
. subOrganization(EconomicCommissionForEurope,
                  EconomicAndSocialCouncil)
. instance(EconomicCommissionForEurope, InternationalOrganization)
. subOrganization(EconomicCommissionForLatinAmericaAndTheCaribbean,
                  EconomicAndSocialCouncil)
. instance(EconomicCommissionForLatinAmericaAndTheCaribbean,
           InternationalOrganization)
. subOrganization(FoodAndAgricultureOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalAtomicEnergyAgency,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalBankForReconstructionAndDevelopment,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalCenterForSecretariatOfInvestmentDisputes,
                  EconomicAndSocialCouncil)
. instance(InternationalCenterForSecretariatOfInvestmentDisputes,
           InternationalOrganization)
. subOrganization(InternationalCivilAviationOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalDevelopmentAssociation,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalFinanceCorporation,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalFundForAgriculturalDevelopment,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalLaborOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalMaritimeOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalMonetaryFund,
                  EconomicAndSocialCouncil)
. subOrganization(InternationalTelecommunicationUnion,
                  EconomicAndSocialCouncil)
. subOrganization(MulitlateralInvestmentGeographicAgency,
                  EconomicAndSocialCouncil)
. instance(MulitlateralInvestmentGeographicAgency,
           InternationalOrganization)
. subOrganization(StatisticalCommission, EconomicAndSocialCouncil)
. instance(StatisticalCommission, InternationalOrganization)
. subOrganization(UnitedNationsEducationalScientificAndCulturalOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(UnitedNationsIndustrialDevelopmentOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(UniversalPostalUnion, EconomicAndSocialCouncil)
. subOrganization(WorldHealthOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(WorldIntellectualPropertyOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(WorldMeteorologicalOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(WorldTourismOrganization,
                  EconomicAndSocialCouncil)
. subOrganization(WorldTradeOrganization, EconomicAndSocialCouncil)
. subOrganization(WorldFoodProgram, EconomicAndSocialCouncil)
. instance(EconomicCommunityOfTheGreatLakesCountries,
           OrganizationOfNations)
. conventionalLongName(a_Quot_E_c_o_n_o_m_i_c_Space_C_o_m_m_u_n_i_t_y_Space_o_f_Space_t_h_e_Space_G_r_e_a_t_Space_L_a_k_e_s_Space_C_o_u_n_t_r_i_e_s_Quot,
                       EconomicCommunityOfTheGreatLakesCountries)
. abbreviation(a_Quot_C_E_P_G_L_Quot,
               EconomicCommunityOfTheGreatLakesCountries)
. localLongName(a_Quot_C_o_m_m_u_n_a_u_t_e_Space_E_c_o_n_o_m_i_q_u_e_Space_d_e_s_Space_P_a_y_s_Space_d_e_s_Space_G_r_a_n_d_s_Space_L_a_c_s_Quot,
                EconomicCommunityOfTheGreatLakesCountries)
. dateEstablished(EconomicCommunityOfTheGreatLakesCountries,
                  DayFn(a_2_0, MonthFn(September, YearFn(a_1_9_7_6))))
. organizationalObjective(EconomicCommunityOfTheGreatLakesCountries,
                          EconomicIntegration)
. instance(EconomicCommunityOfWestAfricanStates,
           OrganizationOfNations)
. conventionalLongName(a_Quot_E_c_o_n_o_m_i_c_Space_C_o_m_m_u_n_i_t_y_Space_o_f_Space_W_e_s_t_Space_A_f_r_i_c_a_n_Space_S_t_a_t_e_s_Quot,
                       EconomicCommunityOfWestAfricanStates)
. abbreviation(a_Quot_E_C_O_W_A_S_Quot,
               EconomicCommunityOfWestAfricanStates)
. dateEstablished(EconomicCommunityOfWestAfricanStates,
                  DayFn(a_2_8, MonthFn(May, YearFn(a_1_9_7_5))))
. organizationalObjective(EconomicCommunityOfWestAfricanStates,
                          EconomicCooperation)
. instance(EconomicCooperationOrganization, OrganizationOfNations)
. conventionalLongName(a_Quot_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       EconomicCooperationOrganization)
. abbreviation(a_Quot_E_C_O_Quot, EconomicCooperationOrganization)
. dateEstablished(EconomicCooperationOrganization,
                  MonthFn(January, YearFn(a_1_9_8_5)))
. organizationalObjective(EconomicCooperationOrganization,
                          EconomicCooperation)
. organizationalObjective(EconomicCooperationOrganization,
                          EconomicDevelopment)
. organizationalObjective(EconomicCooperationOrganization,
                          CulturalCooperation)
. organizationalObjective(EconomicCooperationOrganization,
                          TransportationCoordination)
. organizationalObjective(EconomicCooperationOrganization,
                          CommunicationsCoordination)
. instance(EuroAtlanticPartnershipCouncil, OrganizationOfNations)
. conventionalLongName(a_Quot_E_u_r_o_Minus_A_t_l_a_n_t_i_c_Space_P_a_r_t_n_e_r_s_h_i_p_Space_C_o_u_n_c_i_l_Quot,
                       EuroAtlanticPartnershipCouncil)
. abbreviation(a_Quot_E_A_P_C_Quot, EuroAtlanticPartnershipCouncil)
. formerName(a_Quot_N_o_r_t_h_Space_A_t_l_a_n_t_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_C_o_u_n_c_i_l_Quot,
             EuroAtlanticPartnershipCouncil)
. dateEstablished(EuroAtlanticPartnershipCouncil,
                  DayFn(a_8, MonthFn(November, YearFn(a_1_9_9_1))))
. organizationalObjective(EuroAtlanticPartnershipCouncil,
                          PoliticalCooperation)
. organizationalObjective(EuroAtlanticPartnershipCouncil,
                          MilitaryCooperation)
. organizationalObjective(EuroAtlanticPartnershipCouncil,
                          ConventionalArmsControl)
. instance(EuropeanBankForReconstructionAndDevelopment,
           OrganizationOfNations)
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_B_a_n_k_Space_f_o_r_Space_R_e_c_o_n_s_t_r_u_c_t_i_o_n_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
                       EuropeanBankForReconstructionAndDevelopment)
. abbreviation(a_Quot_E_B_R_D_Quot,
               EuropeanBankForReconstructionAndDevelopment)
. dateEstablished(EuropeanBankForReconstructionAndDevelopment,
                  DayFn(a_1_5, MonthFn(April, YearFn(a_1_9_9_1))))
. organizationalObjective(EuropeanBankForReconstructionAndDevelopment,
                          EconomicDevelopment)
. instance(EuropeanCommunity, OrganizationOfNations)
%{EuropeanCommunity
"The &%EuropeanCommunity was merged into 
the &%EuropeanUnion on February 7, 1992."}%
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_C_o_m_m_u_n_i_t_y_Quot,
                       EuropeanCommunity)
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_C_o_m_m_u_n_i_t_i_e_s_Quot,
                       EuropeanCommunity)
. abbreviation(a_Quot_E_C_Quot, EuropeanCommunity)
. dateEstablished(EuropeanCommunity,
                  DayFn(a_8, MonthFn(April, YearFn(a_1_9_6_5))))
. organizationalObjective(EuropeanCommunity, EconomicIntegration)
. organizationalObjective(EuropeanCommunity, PoliticalCooperation)
. instance(EuropeanFreeTradeAssociation, OrganizationOfNations)
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_F_r_e_e_Space_T_r_a_d_e_Space_A_s_s_o_c_i_a_t_i_o_n_Quot,
                       EuropeanFreeTradeAssociation)
. abbreviation(a_Quot_E_F_T_A_Quot, EuropeanFreeTradeAssociation)
. dateEstablished(EuropeanFreeTradeAssociation,
                  DayFn(a_4, MonthFn(January, YearFn(a_1_9_6_0))))
. organizationalObjective(EuropeanFreeTradeAssociation,
                          PromotionOfFreeTrade)
. instance(EuropeanInvestmentBank, OrganizationOfNations)
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_I_n_v_e_s_t_m_e_n_t_Space_B_a_n_k_Quot,
                       EuropeanInvestmentBank)
. abbreviation(a_Quot_E_I_B_Quot, EuropeanInvestmentBank)
. dateEstablished(EuropeanInvestmentBank,
                  DayFn(a_2_5, MonthFn(March, YearFn(a_1_9_5_7))))
. organizationalObjective(EuropeanInvestmentBank,
                          EconomicDevelopment)
. instance(EuropeanMonetaryUnion, OrganizationOfNations)
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_M_o_n_e_t_a_r_y_Space_U_n_i_o_n_Quot,
                       EuropeanMonetaryUnion)
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_E_c_o_n_o_m_i_c_Space_a_n_d_Space_M_o_n_e_t_a_r_y_Space_U_n_i_o_n_Quot,
                       EuropeanMonetaryUnion)
. abbreviation(a_Quot_E_M_U_Quot, EuropeanMonetaryUnion)
. dateEstablished(EuropeanMonetaryUnion,
                  DayFn(a_7, MonthFn(February, YearFn(a_1_9_9_2))))
. organizationalObjective(EuropeanMonetaryUnion, MonetaryUnion)
. member(Austria, EuropeanMonetaryUnion)
. member(Belgium, EuropeanMonetaryUnion)
. member(Finland, EuropeanMonetaryUnion)
. member(France, EuropeanMonetaryUnion)
. member(Germany, EuropeanMonetaryUnion)
. member(Greece, EuropeanMonetaryUnion)
. member(Ireland, EuropeanMonetaryUnion)
. member(Italy, EuropeanMonetaryUnion)
. member(Luxembourg, EuropeanMonetaryUnion)
. member(Netherlands, EuropeanMonetaryUnion)
. member(Portugal, EuropeanMonetaryUnion)
. member(Spain, EuropeanMonetaryUnion)
. not member(Denmark, EuropeanMonetaryUnion)
. not member(Sweden, EuropeanMonetaryUnion)
. not member(UnitedKingdom, EuropeanMonetaryUnion)
. instance(vAREA, Nation)
  /\ member(vAREA, EuropeanMonetaryUnion) =>
      currencyType(vAREA, EuroDollar)
. instance(vAREA, Nation) /\ currencyType(vAREA, EuroDollar) =>
      member(vAREA, EuropeanMonetaryUnion)
. instance(EuropeanOrganizationForNuclearResearch,
           OrganizationOfNations)
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_N_u_c_l_e_a_r_Space_R_e_s_e_a_r_c_h_Quot,
                       EuropeanOrganizationForNuclearResearch)
. abbreviation(a_Quot_C_E_R_N_Quot,
               EuropeanOrganizationForNuclearResearch)
. formerName(a_Quot_C_o_n_s_e_i_l_Space_E_u_r_o_p_e_e_n_n_e_Space_p_o_u_r_Space_l_a_Space_R_e_c_h_e_r_c_h_e_Space_N_u_c_l_e_a_i_r_e_Quot,
             EuropeanOrganizationForNuclearResearch)
. dateEstablished(EuropeanOrganizationForNuclearResearch,
                  DayFn(a_1, MonthFn(July, YearFn(a_1_9_5_3))))
. organizationalObjective(EuropeanOrganizationForNuclearResearch,
                          PeacefulUseOfAtomicPower)
. organizationalObjective(EuropeanOrganizationForNuclearResearch,
                          TechnologyCooperation)
. organizationalObjective(EuropeanOrganizationForNuclearResearch,
                          ScientificCooperation)
. instance(EuropeanSpaceAgency, OrganizationOfNations)
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_S_p_a_c_e_Space_A_g_e_n_c_y_Quot,
                       EuropeanSpaceAgency)
. abbreviation(a_Quot_E_S_A_Quot, EuropeanSpaceAgency)
. dateEstablished(EuropeanSpaceAgency,
                  DayFn(a_3_1, MonthFn(May, YearFn(a_1_9_7_5))))
. organizationalObjective(EuropeanSpaceAgency,
                          SpaceResearchAndTechnology)
. organizationalObjective(EuropeanSpaceAgency,
                          TechnologyCooperation)
. instance(EuropeanUnion, OrganizationOfNations)
. conventionalLongName(a_Quot_E_u_r_o_p_e_a_n_Space_U_n_i_o_n_Quot,
                       EuropeanUnion)
. abbreviation(a_Quot_E_U_Quot, EuropeanUnion)
. dateEstablished(EuropeanUnion,
                  DayFn(a_7, MonthFn(February, YearFn(a_1_9_9_2))))
. organizationalObjective(EuropeanUnion, EconomicIntegration)
. organizationalObjective(EuropeanUnion, MonetaryUnion)
. organizationalObjective(EuropeanUnion, PoliticalCooperation)
. organizationalObjective(EuropeanUnion, SocialCooperation)
. organizationalObjective(EuropeanUnion, MilitaryCooperation)
. successorOrganization(EuropeanCommunity, EuropeanUnion)
. instance(FoodAndAgricultureOrganization, OrganizationOfNations)
. conventionalLongName(a_Quot_F_o_o_d_Space_a_n_d_Space_A_g_r_i_c_u_l_t_u_r_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       FoodAndAgricultureOrganization)
. abbreviation(a_Quot_F_A_O_Quot, FoodAndAgricultureOrganization)
. dateEstablished(FoodAndAgricultureOrganization,
                  DayFn(a_1_6, MonthFn(October, YearFn(a_1_9_4_5))))
. organizationalObjective(FoodAndAgricultureOrganization,
                          AgriculturalDevelopment)
. instance(FrancZone, OrganizationOfNations)
. conventionalLongName(a_Quot_F_r_a_n_c_Space_Z_o_n_e_Quot,
                       FrancZone)
. localLongName(a_Quot_C_o_n_f_e_r_e_n_c_e_Space_d_e_s_Space_M_i_n_i_s_t_r_e_s_Space_d_e_s_Space_F_i_n_a_n_c_e_s_Space_d_e_s_Space_P_a_y_s_Space_d_e_Space_l_a_Space_Z_o_n_e_Space_F_r_a_n_c_Quot,
                FrancZone)
. abbreviation(a_Quot_F_Z_Quot, FrancZone)
. dateEstablished(FrancZone, YearFn(a_1_9_6_4))
. organizationalObjective(FrancZone, MonetaryUnion)
. instance(GroupOf3, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_3_Quot,
                       GroupOf3)
. abbreviation(a_Quot_G_Minus_3_Quot, GroupOf3)
. dateEstablished(GroupOf3, MonthFn(September, YearFn(a_1_9_9_0)))
. organizationalObjective(GroupOf3, PoliticalCooperation)
. instance(GroupOf5, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_5_Quot,
                       GroupOf5)
. abbreviation(a_Quot_G_Minus_5_Quot, GroupOf5)
. dateEstablished(GroupOf5,
                  DayFn(a_2_2, MonthFn(September, YearFn(a_1_9_8_5))))
. organizationalObjective(GroupOf5, EconomicCooperation)
. instance(GroupOf6, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_6_Quot,
                       GroupOf6)
. abbreviation(a_Quot_G_Minus_6_Quot, GroupOf6)
. localLongName(a_Quot_G_r_o_u_p_e_Space_d_e_s_Space_S_i_x_Space_S_u_r_Space_l_e_Space_D_e_s_a_r_m_e_m_e_n_t_Quot,
                GroupOf6)
. dateEstablished(GroupOf6,
                  DayFn(a_2_2, MonthFn(May, YearFn(a_1_9_8_5))))
. organizationalObjective(GroupOf6, NuclearDisarmament)
. instance(GroupOf7, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_7_Quot,
                       GroupOf7)
. abbreviation(a_Quot_G_Minus_7_Quot, GroupOf7)
%{GroupOf7
"The memberships of the &%BigSeven and the 
&%GroupOf7 include the same &%Nations."}%
. dateEstablished(GroupOf7,
                  DayFn(a_2_2, MonthFn(September, YearFn(a_1_9_8_5))))
. organizationalObjective(GroupOf7, EconomicCooperation)
. instance(GroupOf8, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_8_Quot,
                       GroupOf8)
. abbreviation(a_Quot_G_Minus_8_Quot, GroupOf8)
. dateEstablished(GroupOf8, MonthFn(October, YearFn(a_1_9_7_5)))
. organizationalObjective(GroupOf8, EconomicCooperation)
%{GroupOf8
"The &%GroupOf8 members were participants in the 
Conference on International Economic Cooperation (CIEC) between 
1975-1977."}%
. instance(GroupOf9, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_9_Quot,
                       GroupOf9)
. abbreviation(a_Quot_G_Minus_9_Quot, GroupOf9)
. organizationalObjective(GroupOf9, PoliticalCooperation)
. instance(GroupOf10, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_1_0_Quot,
                       GroupOf10)
. abbreviation(a_Quot_G_Minus_1_0_Quot, GroupOf10)
. conventionalLongName(a_Quot_P_a_r_i_s_Space_C_l_u_b_Quot,
                       GroupOf10)
. dateEstablished(GroupOf10, MonthFn(October, YearFn(a_1_9_6_2)))
. organizationalObjective(GroupOf10, CoordinateCreditPolicy)
%{GroupOf10
"The &%GroupOf10 (also known as the Paris Club) 
is a group of (now) 11 major creditor nations that manage the repayment of 
loans by debtor countries.  The Group of 10 works closely with the 
&%InternationalMonetaryFund."}%
. instance(GroupOf11, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_1_1_Quot,
                       GroupOf11)
. conventionalLongName(a_Quot_C_a_r_t_a_g_e_n_a_Space_G_r_o_u_p_Quot,
                       GroupOf11)
. abbreviation(a_Quot_G_Minus_1_1_Quot, GroupOf11)
. dateEstablished(GroupOf11,
                  DayFn(a_2_2, MonthFn(June, YearFn(a_1_9_8_4))))
. organizationalObjective(GroupOf11, EconomicCooperation)
. instance(GroupOf15, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_1_5_Quot,
                       GroupOf15)
. abbreviation(a_Quot_G_Minus_1_5_Quot, GroupOf15)
. dateEstablished(GroupOf15, MonthFn(September, YearFn(a_1_9_8_9)))
. organizationalObjective(GroupOf15, EconomicCooperation)
. organizationalObjective(GroupOf15, PoliticalCooperation)
%{GroupOf15
"The &%GroupOf15 was a result of the &%NonalignedMovement."}%
. instance(GroupOf24, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_2_4_Quot,
                       GroupOf24)
. abbreviation(a_Quot_G_Minus_2_4_Quot, GroupOf24)
. dateEstablished(GroupOf24,
                  DayFn(a_1, MonthFn(August, YearFn(a_1_9_8_9))))
. organizationalObjective(GroupOf24, EconomicCooperation)
%{GroupOf24
"The &%GroupOf24 promotes the interests of 
developing countries in Africa, Asia, and Latin America within the 
&%InternationalMonetaryFund."}%
. instance(GroupOf77, OrganizationOfNations)
. conventionalLongName(a_Quot_G_r_o_u_p_Space_o_f_Space_7_7_Quot,
                       GroupOf77)
. abbreviation(a_Quot_G_Minus_7_7_Quot, GroupOf77)
. dateEstablished(GroupOf77,
                  DayFn(a_1_5, MonthFn(June, YearFn(a_1_9_6_4))))
. organizationalObjective(GroupOf77, EconomicCooperation)
. instance(GulfCooperationCouncil, OrganizationOfNations)
. conventionalLongName(a_Quot_G_u_l_f_Space_C_o_o_p_e_r_a_t_i_o_n_Space_C_o_u_n_c_i_l_Quot,
                       GulfCooperationCouncil)
. abbreviation(a_Quot_G_C_C_Quot, GulfCooperationCouncil)
. dateEstablished(GulfCooperationCouncil,
                  DayFn(a_2_5, MonthFn(May, YearFn(a_1_9_8_1))))
. organizationalObjective(GulfCooperationCouncil,
                          PoliticalCooperation)
. organizationalObjective(GulfCooperationCouncil,
                          EconomicCooperation)
. organizationalObjective(GulfCooperationCouncil,
                          MilitaryCooperation)
. organizationalObjective(GulfCooperationCouncil,
                          SocialCooperation)
. instance(IndianOceanCommission, OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_d_i_a_n_Space_O_c_e_a_n_Space_C_o_m_m_i_s_s_i_o_n_Quot,
                       IndianOceanCommission)
. abbreviation(a_Quot_I_n_O_C_Quot, IndianOceanCommission)
. dateEstablished(IndianOceanCommission,
                  DayFn(a_2_1, MonthFn(December, YearFn(a_1_9_8_2))))
. organizationalObjective(IndianOceanCommission,
                          EconomicCooperation)
. organizationalObjective(IndianOceanCommission,
                          PoliticalCooperation)
. instance(InterAmericanDevelopmentBank, OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_Minus_A_m_e_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
                       InterAmericanDevelopmentBank)
. abbreviation(a_Quot_I_A_D_B_Quot, InterAmericanDevelopmentBank)
. localLongName(a_Quot_B_a_n_c_o_Space_I_n_t_e_r_a_m_e_r_i_c_a_n_o_Space_d_e_Space_D_e_s_a_r_r_o_l_l_o_Quot,
                InterAmericanDevelopmentBank)
. localShortName(a_Quot_B_I_D_Quot, InterAmericanDevelopmentBank)
. dateEstablished(InterAmericanDevelopmentBank,
                  DayFn(a_8, MonthFn(April, YearFn(a_1_9_5_9))))
. organizationalObjective(InterAmericanDevelopmentBank,
                          EconomicDevelopment)
. organizationalObjective(InterAmericanDevelopmentBank,
                          SocialDevelopment)
. instance(InterGovernmentalAuthorityOnDevelopment,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_Minus_G_o_v_e_r_n_m_e_n_t_a_l_Space_A_u_t_h_o_r_i_t_y_Space_o_n_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
                       InterGovernmentalAuthorityOnDevelopment)
. abbreviation(a_Quot_I_G_A_D_Quot,
               InterGovernmentalAuthorityOnDevelopment)
. formerName(a_Quot_I_n_t_e_r_Minus_G_o_v_e_r_n_m_e_n_t_a_l_Space_A_u_t_h_o_r_i_t_y_Space_o_n_Space_D_r_o_u_g_h_t_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
             InterGovernmentalAuthorityOnDevelopment)
. formerName(a_Quot_I_G_A_D_D_Quot,
             InterGovernmentalAuthorityOnDevelopment)
. dateEstablished(InterGovernmentalAuthorityOnDevelopment,
                  DayFn(a_2_1, MonthFn(March, YearFn(a_1_9_9_6))))
. organizationalObjective(InterGovernmentalAuthorityOnDevelopment,
                          SocialCooperation)
. organizationalObjective(InterGovernmentalAuthorityOnDevelopment,
                          EconomicCooperation)
. organizationalObjective(InterGovernmentalAuthorityOnDevelopment,
                          ScientificCooperation)
%{InterGovernmentalAuthorityOnDevelopment
"The 
&%InterGovernmentalAuthorityOnDevelopment is the revitalized successor 
organization of the Inter-Governmental Authority on Development, which had 
been established 15-16 January 1986."}%
. instance(InternationalAtomicEnergyAgency, OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_A_t_o_m_i_c_Space_E_n_e_r_g_y_Space_A_g_e_n_c_y_Quot,
                       InternationalAtomicEnergyAgency)
. abbreviation(a_Quot_I_A_E_A_Quot,
               InternationalAtomicEnergyAgency)
. dateEstablished(InternationalAtomicEnergyAgency,
                  DayFn(a_2_6, MonthFn(October, YearFn(a_1_9_5_6))))
. organizationalObjective(InternationalAtomicEnergyAgency,
                          PeacefulUseOfAtomicPower)
. instance(InternationalBankForReconstructionAndDevelopment,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_B_a_n_k_Space_f_o_r_Space_R_e_c_o_n_s_t_r_u_c_t_i_o_n_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
                       InternationalBankForReconstructionAndDevelopment)
. conventionalShortName(a_Quot_W_o_r_l_d_Space_B_a_n_k_Quot,
                        InternationalBankForReconstructionAndDevelopment)
. abbreviation(a_Quot_I_B_R_D_Quot,
               InternationalBankForReconstructionAndDevelopment)
. dateEstablished(InternationalBankForReconstructionAndDevelopment,
                  DayFn(a_2_2, MonthFn(July, YearFn(a_1_9_4_4))))
. organizationalObjective(InternationalBankForReconstructionAndDevelopment,
                          EconomicDevelopment)
. subOrganization(InternationalBankForReconstructionAndDevelopment,
                  UnitedNations)
. instance(InternationalChamberOfCommerce, OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_h_a_m_b_e_r_Space_o_f_Space_C_o_m_m_e_r_c_e_Quot,
                       InternationalChamberOfCommerce)
. abbreviation(a_Quot_I_C_C_Quot, InternationalChamberOfCommerce)
. dateEstablished(InternationalChamberOfCommerce,
                  YearFn(a_1_9_1_9))
. organizationalObjective(InternationalChamberOfCommerce,
                          PromotionOfFreeTrade)
. organizationalObjective(InternationalChamberOfCommerce,
                          PromotionOfTradeAndInvestment)
. organizationalObjective(InternationalChamberOfCommerce,
                          PromotionOfPrivateEnterprise)
. instance(InternationalCivilAviationOrganization,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_i_v_i_l_Space_A_v_i_a_t_i_o_n_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       InternationalCivilAviationOrganization)
. abbreviation(a_Quot_I_C_A_O_Quot,
               InternationalCivilAviationOrganization)
. dateEstablished(InternationalCivilAviationOrganization,
                  DayFn(a_7, MonthFn(December, YearFn(a_1_9_4_4))))
. subOrganization(InternationalCivilAviationOrganization,
                  UnitedNations)
. organizationalObjective(InternationalCivilAviationOrganization,
                          CooperationInCivilAviation)
. instance(InternationalCommitteeOfTheRedCross,
           InternationalOrganization)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_o_m_m_i_t_t_e_e_Space_o_f_Space_t_h_e_Space_R_e_d_Space_C_r_o_s_s_Quot,
                       InternationalCommitteeOfTheRedCross)
. abbreviation(a_Quot_I_C_R_C_Quot,
               InternationalCommitteeOfTheRedCross)
. conventionalShortName(a_Quot_R_e_d_Space_C_r_o_s_s_Quot,
                        InternationalCommitteeOfTheRedCross)
. dateEstablished(InternationalCommitteeOfTheRedCross,
                  DayFn(a_1_7, MonthFn(February, YearFn(a_1_8_6_3))))
. organizationalObjective(InternationalCommitteeOfTheRedCross,
                          HumanitarianAid)
. instance(InternationalConfederationOfFreeTradeUnions,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_o_n_f_e_d_e_r_a_t_i_o_n_Space_o_f_Space_F_r_e_e_Space_T_r_a_d_e_Space_U_n_i_o_n_s_Quot,
                       InternationalConfederationOfFreeTradeUnions)
. abbreviation(a_Quot_I_C_F_T_U_Quot,
               InternationalConfederationOfFreeTradeUnions)
. dateEstablished(InternationalConfederationOfFreeTradeUnions,
                  MonthFn(December, YearFn(a_1_9_4_9)))
. organizationalObjective(InternationalConfederationOfFreeTradeUnions,
                          PromoteTradeUnionism)
. instance(InternationalCourtOfJustice, InternationalOrganization)
. instance(InternationalCourtOfJustice, JudicialOrganization)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_o_u_r_t_Space_o_f_Space_J_u_s_t_i_c_e_Quot,
                       InternationalCourtOfJustice)
. abbreviation(a_Quot_I_C_J_Quot, InternationalCourtOfJustice)
. conventionalShortName(a_Quot_W_o_r_l_d_Space_C_o_u_r_t_Quot,
                        InternationalCourtOfJustice)
. dateEstablished(InternationalCourtOfJustice,
                  DayFn(a_3, Month(a_2, Year(a_1_9_4_6))))
%{InternationalCourtOfJustice
"The 
&%InternationalCourtOfJustice superseded the Permanent Court of 
International Justice."}%
. subOrganization(InternationalCourtOfJustice, UnitedNations)
. organizationalObjective(InternationalCourtOfJustice,
                          InternationalJustice)
. member(vAGENT, InternationalCourtOfJustice) =>
      instance(vAGENT, Human) /\ attribute(vAGENT, JudgeAtLaw)
. member(vAGENT, InternationalCourtOfJustice)
  /\ attribute(vAGENT, JudgeAtLaw) =>
      exists vPOLITY: U
          . instance(vPOLITY, GeopoliticalArea)
            /\ representativeAgentToAgent(vPOLITY, vAGENT,
                                          InternationalCourtOfJustice)
. instance(InternationalCriminalPoliceOrganization,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_r_i_m_i_n_a_l_Space_P_o_l_i_c_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       InternationalCriminalPoliceOrganization)
. abbreviation(a_Quot_I_n_t_e_r_p_o_l_Quot,
               InternationalCriminalPoliceOrganization)
. dateEstablished(InternationalCriminalPoliceOrganization,
                  DayFn(a_1_3, MonthFn(June, YearFn(a_1_9_5_6))))
%{InternationalCriminalPoliceOrganization
"Interpol is the 
successor organization to the International Criminal Police Organization, 
which had been established in 1923."}%
. organizationalObjective(InternationalCriminalPoliceOrganization,
                          SupportLawEnforcement)
. instance(InternationalDevelopmentAssociation,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Space_A_s_s_o_c_i_a_t_i_o_n_Quot,
                       InternationalDevelopmentAssociation)
. abbreviation(a_Quot_I_D_A_Quot,
               InternationalDevelopmentAssociation)
. dateEstablished(InternationalDevelopmentAssociation,
                  DayFn(a_2_6, MonthFn(January, YearFn(a_1_9_6_0))))
. subOrganization(InternationalDevelopmentAssociation,
                  UnitedNations)
. organizationalObjective(InternationalDevelopmentAssociation,
                          EconomicDevelopment)
. instance(InternationalEnergyAgency, OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_E_n_e_r_g_y_Space_A_g_e_n_c_y_Quot,
                       InternationalEnergyAgency)
. abbreviation(a_Quot_I_E_A_Quot, InternationalEnergyAgency)
. dateEstablished(InternationalEnergyAgency,
                  DayFn(a_1_5, MonthFn(November, YearFn(a_1_9_7_4))))
%{InternationalEnergyAgency
"The &%InternationalEnergyAgency 
was established by the &%OrganizationForEconomicAndCulturalDevelopment."}%
. organizationalObjective(InternationalEnergyAgency,
                          EnergyCooperation)
. instance(InternationalFederationOfRedCrossAndRedCrescentSocieties,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_F_e_d_e_r_a_t_i_o_n_Space_o_f_Space_R_e_d_Space_C_r_o_s_s_Space_a_n_d_Space_R_e_d_Space_C_r_e_s_c_e_n_t_Space_S_o_c_i_e_t_i_e_s_Quot,
                       InternationalFederationOfRedCrossAndRedCrescentSocieties)
. abbreviation(a_Quot_I_F_R_C_S_Quot,
               InternationalFederationOfRedCrossAndRedCrescentSocieties)
. formerName(a_Quot_L_e_a_g_u_e_Space_o_f_Space_R_e_d_Space_C_r_o_s_s_Space_a_n_d_Space_R_e_d_Space_C_r_e_s_c_e_n_t_Space_S_o_c_i_e_t_i_e_s_Quot,
             InternationalFederationOfRedCrossAndRedCrescentSocieties)
. formerName(a_Quot_L_O_R_C_S_Quot,
             InternationalFederationOfRedCrossAndRedCrescentSocieties)
. dateEstablished(InternationalFederationOfRedCrossAndRedCrescentSocieties,
                  DayFn(a_5, MonthFn(May, YearFn(a_1_9_1_9))))
. organizationalObjective(InternationalFederationOfRedCrossAndRedCrescentSocieties,
                          HumanitarianAid)
. instance(InternationalFinanceCorporation, OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_F_i_n_a_n_c_e_Space_C_o_r_p_o_r_a_t_i_o_n_Quot,
                       InternationalFinanceCorporation)
. abbreviation(a_Quot_I_F_C_Quot, InternationalFinanceCorporation)
. dateEstablished(InternationalFinanceCorporation,
                  DayFn(a_2_5, MonthFn(May, YearFn(a_1_9_5_5))))
. subOrganization(InternationalFinanceCorporation, UnitedNations)
%{InternationalFinanceCorporation
"The 
&%InternationalFinanceCorporation is affiliated with the 
&%InternationalBankForReconstructionAndDevelopment."}%
. instance(PromotePrivateEnterprise, AreaOfConcern)
. organizationalObjective(InternationalFinanceCorporation,
                          PromotePrivateEnterprise)
. instance(InternationalFundForAgriculturalDevelopment,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_F_u_n_d_Space_f_o_r_Space_A_g_r_i_c_u_l_t_u_r_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
                       InternationalFundForAgriculturalDevelopment)
. abbreviation(a_Quot_I_F_A_D_Quot,
               InternationalFundForAgriculturalDevelopment)
. dateEstablished(InternationalFundForAgriculturalDevelopment,
                  MonthFn(November, YearFn(a_1_9_7_4)))
. organizationalObjective(InternationalFundForAgriculturalDevelopment,
                          AgriculturalDevelopment)
. subOrganization(InternationalFundForAgriculturalDevelopment,
                  UnitedNations)
. instance(InternationalHydrographicOrganization,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_H_y_d_r_o_g_r_a_p_h_i_c_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       InternationalHydrographicOrganization)
. abbreviation(a_Quot_I_H_O_Quot,
               InternationalHydrographicOrganization)
. formerName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_H_y_d_r_o_g_r_a_p_h_i_c_Space_B_u_r_e_a_u_Quot,
             InternationalHydrographicOrganization)
. dateEstablished(InternationalHydrographicOrganization,
                  MonthFn(June, YearFn(a_1_9_1_9)))
. organizationalObjective(InternationalHydrographicOrganization,
                          ScientificCooperation)
. organizationalObjective(InternationalHydrographicOrganization,
                          InformationStandards)
. inScopeOfInterest(InternationalHydrographicOrganization,
                    WorldOcean)
. instance(InternationalLaborOrganization, OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_L_a_b_o_r_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       InternationalLaborOrganization)
. abbreviation(a_Quot_I_L_O_Quot, InternationalLaborOrganization)
. dateEstablished(InternationalLaborOrganization,
                  DayFn(a_2_8, MonthFn(June, YearFn(a_1_9_1_9))))
. organizationalObjective(InternationalLaborOrganization,
                          WorldLaborIssues)
. subOrganization(InternationalLaborOrganization, UnitedNations)
%{InternationalLaborOrganization
"The 
&%InternationalLaborOrganization became affiliated with the 
&%UnitedNations in 1946."}%
. instance(InternationalMaritimeOrganization,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_M_a_r_i_t_i_m_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       InternationalMaritimeOrganization)
. abbreviation(a_Quot_I_M_O_Quot,
               InternationalMaritimeOrganization)
. formerName(a_Quot_I_n_t_e_r_g_o_v_e_r_n_m_e_n_t_a_l_Space_M_a_r_i_t_i_m_e_Space_C_o_n_s_u_l_t_a_t_i_v_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
             InternationalMaritimeOrganization)
. formerName(a_Quot_I_M_C_O_Quot,
             InternationalMaritimeOrganization)
. dateEstablished(InternationalMaritimeOrganization,
                  DayFn(a_6, MonthFn(March, YearFn(a_1_9_4_8))))
%{InternationalMaritimeOrganization
"The 
&%InternationalMaritimeOrganization was established in 1948 but became 
effective ten years later."}%
. subOrganization(InternationalMaritimeOrganization, UnitedNations)
. organizationalObjective(InternationalMaritimeOrganization,
                          InternationalMaritimeAffairs)
. instance(InternationalMonetaryFund, OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_M_o_n_e_t_a_r_y_Space_F_u_n_d_Quot,
                       InternationalMonetaryFund)
. abbreviation(a_Quot_I_M_F_Quot, InternationalMonetaryFund)
. dateEstablished(InternationalMonetaryFund,
                  DayFn(a_2_2, MonthFn(July, YearFn(a_1_9_4_4))))
. subOrganization(InternationalMonetaryFund, UnitedNations)
. organizationalObjective(InternationalMonetaryFund,
                          EconomicDevelopment)
. organizationalObjective(InternationalMonetaryFund,
                          MonetaryStability)
. instance(InternationalOlympicCommittee, OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_O_l_y_m_p_i_c_Space_C_o_m_m_i_t_t_e_e_Quot,
                       InternationalOlympicCommittee)
. abbreviation(a_Quot_I_O_C_Quot, InternationalOlympicCommittee)
. dateEstablished(InternationalOlympicCommittee,
                  DayFn(a_2_3, MonthFn(June, YearFn(a_1_8_9_4))))
. organizationalObjective(InternationalOlympicCommittee,
                          OrganizeOlympicGames)
. instance(InternationalOrganizationForMigration,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_M_i_g_r_a_t_i_o_n_Quot,
                       InternationalOrganizationForMigration)
. abbreviation(a_Quot_I_O_M_Quot,
               InternationalOrganizationForMigration)
. formerName(a_Quot_P_r_o_v_i_s_i_o_n_a_l_Space_I_n_t_e_r_g_o_v_e_r_n_m_e_n_t_a_l_Space_C_o_m_m_i_t_t_e_e_Space_f_o_r_Space_t_h_e_Space_M_o_v_e_m_e_n_t_Space_o_f_Space_M_i_g_r_a_n_t_s_Space_f_r_o_m_Space_E_u_r_o_p_e_Quot,
             InternationalOrganizationForMigration)
. formerName(a_Quot_I_n_t_e_r_g_o_v_e_r_n_m_e_n_t_a_l_Space_C_o_m_m_i_t_t_e_e_Space_f_o_r_Space_E_u_r_o_p_e_a_n_Space_M_i_g_r_a_t_i_o_n_Quot,
             InternationalOrganizationForMigration)
. formerName(a_Quot_I_C_E_M_Quot,
             InternationalOrganizationForMigration)
. formerName(a_Quot_I_n_t_e_r_g_o_v_e_r_n_m_e_n_t_a_l_Space_C_o_m_m_i_t_t_e_e_Space_f_o_r_Space_M_i_g_r_a_t_i_o_n_Quot,
             InternationalOrganizationForMigration)
. formerName(a_Quot_I_C_M_Quot,
             InternationalOrganizationForMigration)
. dateEstablished(InternationalOrganizationForMigration,
                  DayFn(a_5, MonthFn(November, YearFn(a_1_9_5_1))))
. organizationalObjective(InternationalOrganizationForMigration,
                          EmigrationAndImmigrationIssues)
. instance(InternationalOrganizationForStandardization,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_S_t_a_n_d_a_r_d_i_z_a_t_i_o_n_Quot,
                       InternationalOrganizationForStandardization)
. abbreviation(a_Quot_I_S_O_Quot,
               InternationalOrganizationForStandardization)
. dateEstablished(InternationalOrganizationForStandardization,
                  MonthFn(February, YearFn(a_1_9_4_7)))
. organizationalObjective(InternationalOrganizationForStandardization,
                          InformationStandards)
. organizationalObjective(InternationalOrganizationForStandardization,
                          IndustryStandards)
. instance(InternationalRedCrossAndRedCrescentMovement,
           InternationalOrganization)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_R_e_d_Space_C_r_o_s_s_Space_a_n_d_Space_R_e_d_Space_C_r_e_s_c_e_n_t_Space_M_o_v_e_m_e_n_t_Quot,
                       InternationalRedCrossAndRedCrescentMovement)
. abbreviation(a_Quot_I_C_R_M_Quot,
               InternationalRedCrossAndRedCrescentMovement)
. dateEstablished(InternationalRedCrossAndRedCrescentMovement,
                  YearFn(a_1_9_2_8))
. organizationalObjective(InternationalRedCrossAndRedCrescentMovement,
                          HumanitarianAid)
. member(vPART, InternationalRedCrossAndRedCrescentMovement) <=>
      member(vPART,
             InternationalFederationOfRedCrossAndRedCrescentSocieties)
. instance(InternationalTelecommunicationUnion,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_T_e_l_e_c_o_m_m_u_n_i_c_a_t_i_o_n_Space_U_n_i_o_n_Quot,
                       InternationalTelecommunicationUnion)
. abbreviation(a_Quot_I_T_U_Quot,
               InternationalTelecommunicationUnion)
. dateEstablished(InternationalTelecommunicationUnion,
                  DayFn(a_1_7, MonthFn(May, YearFn(a_1_8_6_5))))
. formerName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_T_e_l_e_g_r_a_p_h_Space_U_n_i_o_n_Quot,
             InternationalTelecommunicationUnion)
. organizationalObjective(InternationalTelecommunicationUnion,
                          CommunicationsCoordination)
%{InternationalTelecommunicationUnion
"The 
&%InternationalTelecommunicationUnion became affiliated with the 
&%UnitedNations on November 15, 1947."}%
. subOrganization(InternationalTelecommunicationUnion,
                  UnitedNations)
. instance(IslamicDevelopmentBank, OrganizationOfNations)
. conventionalLongName(a_Quot_I_s_l_a_m_i_c_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
                       IslamicDevelopmentBank)
. abbreviation(a_Quot_I_D_B_Quot, IslamicDevelopmentBank)
. dateEstablished(IslamicDevelopmentBank,
                  DayFn(a_1_5, MonthFn(December, YearFn(a_1_9_7_3))))
. organizationalObjective(IslamicDevelopmentBank,
                          EconomicDevelopment)
. organizationalObjective(IslamicDevelopmentBank,
                          SocialDevelopment)
. instance(LatinAmericanEconomicSystem, OrganizationOfNations)
. conventionalLongName(a_Quot_L_a_t_i_n_Space_A_m_e_r_i_c_a_n_Space_E_c_o_n_o_m_i_c_Space_S_y_s_t_e_m_Quot,
                       LatinAmericanEconomicSystem)
. abbreviation(a_Quot_L_A_E_S_Quot, LatinAmericanEconomicSystem)
. localLongName(a_Quot_S_i_s_t_e_m_a_Space_E_c_o_n_o_m_i_c_o_Space_L_a_t_i_n_o_a_m_e_r_i_c_a_n_a_Quot,
                LatinAmericanEconomicSystem)
. localShortName(a_Quot_S_E_L_A_Quot, LatinAmericanEconomicSystem)
. dateEstablished(LatinAmericanEconomicSystem,
                  DayFn(a_1_7, MonthFn(October, YearFn(a_1_9_7_5))))
. organizationalObjective(LatinAmericanEconomicSystem,
                          EconomicDevelopment)
. organizationalObjective(LatinAmericanEconomicSystem,
                          SocialDevelopment)
. instance(LatinAmericanIntegrationAssociation,
           OrganizationOfNations)
. conventionalLongName(a_Quot_L_a_t_i_n_Space_A_m_e_r_i_c_a_n_Space_I_n_t_e_g_r_a_t_i_o_n_Space_A_s_s_o_c_i_a_t_i_o_n_Quot,
                       LatinAmericanIntegrationAssociation)
. abbreviation(a_Quot_L_A_I_A_Quot,
               LatinAmericanIntegrationAssociation)
. localLongName(a_Quot_A_s_o_c_i_a_c_i_o_n_Space_L_a_t_i_n_o_a_m_e_r_i_c_a_n_a_Space_d_e_Space_I_n_t_e_g_r_a_c_i_o_n_Quot,
                LatinAmericanIntegrationAssociation)
. localShortName(a_Quot_A_L_A_D_I_Quot,
                 LatinAmericanIntegrationAssociation)
. dateEstablished(LatinAmericanIntegrationAssociation,
                  DayFn(a_1_2, MonthFn(August, YearFn(a_1_9_8_0))))
. organizationalObjective(LatinAmericanIntegrationAssociation,
                          PromotionOfFreeTrade)
. organizationalObjective(LatinAmericanIntegrationAssociation,
                          EconomicIntegration)
. instance(MonetaryAndEconomicCommunityOfCentralAfrica,
           OrganizationOfNations)
. conventionalLongName(a_Quot_M_o_n_e_t_a_r_y_Space_a_n_d_Space_E_c_o_n_o_m_i_c_Space_C_o_m_m_u_n_i_t_y_Space_o_f_Space_C_e_n_t_r_a_l_Space_A_f_r_i_c_a_Quot,
                       MonetaryAndEconomicCommunityOfCentralAfrica)
. abbreviation(a_Quot_C_E_M_A_C_Quot,
               MonetaryAndEconomicCommunityOfCentralAfrica)
. formerName(a_Quot_C_e_n_t_r_a_l_Space_A_f_r_i_c_a_n_Space_C_u_s_t_o_m_s_Space_a_n_d_Space_E_c_o_n_o_m_i_c_Space_U_n_i_o_n_Quot,
             MonetaryAndEconomicCommunityOfCentralAfrica)
. formerName(a_Quot_U_D_E_A_C_Quot,
             MonetaryAndEconomicCommunityOfCentralAfrica)
. dateEstablished(MonetaryAndEconomicCommunityOfCentralAfrica,
                  DayFn(a_8, MonthFn(December, YearFn(a_1_8_6_4))))
. organizationalObjective(MonetaryAndEconomicCommunityOfCentralAfrica,
                          EconomicIntegration)
. instance(NonalignedMovement, OrganizationOfNations)
. conventionalLongName(a_Quot_N_o_n_a_l_i_g_n_e_d_Space_M_o_v_e_m_e_n_t_Quot,
                       NonalignedMovement)
. abbreviation(a_Quot_N_A_M_Quot, NonalignedMovement)
. dateEstablished(NonalignedMovement,
                  DayFn(a_6, MonthFn(September, YearFn(a_1_9_6_1))))
. organizationalObjective(NonalignedMovement, PoliticalCooperation)
. organizationalObjective(NonalignedMovement, MilitaryCooperation)
%{NonalignedMovement
"The &%NonalignedMovement was 
established to promote political and military cooperation outside of the 
traditional East and West power groups."}%
. instance(NordicCouncil, OrganizationOfNations)
. conventionalLongName(a_Quot_N_o_r_d_i_c_Space_C_o_u_n_c_i_l_Quot,
                       NordicCouncil)
. abbreviation(a_Quot_N_C_Quot, NordicCouncil)
. dateEstablished(NordicCouncil,
                  DayFn(a_1_6, MonthFn(March, YearFn(a_1_9_5_2))))
. organizationalObjective(NordicCouncil, EconomicCooperation)
. organizationalObjective(NordicCouncil, CulturalCooperation)
. organizationalObjective(NordicCouncil, EnvironmentalCooperation)
. instance(NordicInvestmentBank, OrganizationOfNations)
. conventionalLongName(a_Quot_N_o_r_d_i_c_Space_I_n_v_e_s_t_m_e_n_t_Space_B_a_n_k_Quot,
                       NordicInvestmentBank)
. abbreviation(a_Quot_N_I_B_Quot, NordicInvestmentBank)
. dateEstablished(NordicInvestmentBank,
                  DayFn(a_4, MonthFn(December, YearFn(a_1_9_7_5))))
. organizationalObjective(NordicInvestmentBank,
                          EconomicCooperation)
. organizationalObjective(NordicInvestmentBank,
                          EconomicDevelopment)
. instance(NorthAtlanticTreatyOrganization, OrganizationOfNations)
. conventionalLongName(a_Quot_N_o_r_t_h_Space_A_t_l_a_n_t_i_c_Space_T_r_e_a_t_y_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       NorthAtlanticTreatyOrganization)
. abbreviation(a_Quot_N_A_T_O_Quot,
               NorthAtlanticTreatyOrganization)
. dateEstablished(NorthAtlanticTreatyOrganization,
                  DayFn(a_4, MonthFn(April, YearFn(a_1_9_4_9))))
. organizationalObjective(NorthAtlanticTreatyOrganization,
                          MutualDefensePact)
. instance(NuclearEnergyAgency, OrganizationOfNations)
. conventionalLongName(a_Quot_N_u_c_l_e_a_r_Space_E_n_e_r_g_y_Space_A_g_e_n_c_y_Quot,
                       NuclearEnergyAgency)
. conventionalLongName(a_Quot_O_E_C_D_Space_N_u_c_l_e_a_r_Space_E_n_e_r_g_y_Space_A_g_e_n_c_y_Quot,
                       NuclearEnergyAgency)
. abbreviation(a_Quot_N_E_A_Quot, NuclearEnergyAgency)
. dateEstablished(NuclearEnergyAgency,
                  DayFn(a_1, MonthFn(February, YearFn(a_1_9_5_8))))
. organizationalObjective(NuclearEnergyAgency,
                          PeacefulUseOfAtomicPower)
. subOrganization(NuclearEnergyAgency,
                  OrganizationForEconomicCooperationAndDevelopment)
. instance(NuclearSuppliersGroup, OrganizationOfNations)
. conventionalLongName(a_Quot_N_u_c_l_e_a_r_Space_S_u_p_p_l_i_e_r_s_Space_G_r_o_u_p_Quot,
                       NuclearSuppliersGroup)
. abbreviation(a_Quot_N_S_G_Quot, NuclearSuppliersGroup)
. formerName(a_Quot_L_o_n_d_o_n_Space_S_u_p_p_l_i_e_r_s_Space_G_r_o_u_p_Quot,
             NuclearSuppliersGroup)
. formerName(a_Quot_L_o_n_d_o_n_Space_G_r_o_u_p_Quot,
             NuclearSuppliersGroup)
. dateEstablished(NuclearSuppliersGroup, YearFn(a_1_9_7_4))
. organizationalObjective(NuclearSuppliersGroup,
                          NuclearExportControls)
. instance(OrganizationForEconomicCooperationAndDevelopment,
           OrganizationOfNations)
. conventionalLongName(a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
                       OrganizationForEconomicCooperationAndDevelopment)
. abbreviation(a_Quot_O_E_C_D_Quot,
               OrganizationForEconomicCooperationAndDevelopment)
. dateEstablished(OrganizationForEconomicCooperationAndDevelopment,
                  DayFn(a_1_4, MonthFn(December, YearFn(a_1_9_6_0))))
. organizationalObjective(OrganizationForEconomicCooperationAndDevelopment,
                          EconomicDevelopment)
. organizationalObjective(OrganizationForEconomicCooperationAndDevelopment,
                          EconomicCooperation)
. instance(OrganizationForSecurityAndCooperationInEurope,
           OrganizationOfNations)
. conventionalLongName(a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_S_e_c_u_r_i_t_y_Space_a_n_d_Space_C_o_o_p_e_r_a_t_i_o_n_Space_i_n_Space_E_u_r_o_p_e_Quot,
                       OrganizationForSecurityAndCooperationInEurope)
. abbreviation(a_Quot_O_S_C_E_Quot,
               OrganizationForSecurityAndCooperationInEurope)
. formerName(a_Quot_C_o_n_f_e_r_e_n_c_e_Space_o_n_Space_S_e_c_u_r_i_t_y_Space_a_n_d_Space_C_o_o_p_e_r_a_t_i_o_n_Space_i_n_Space_E_u_r_o_p_e_Quot,
             OrganizationForSecurityAndCooperationInEurope)
. formerName(a_Quot_C_S_C_E_Quot,
             OrganizationForSecurityAndCooperationInEurope)
. dateEstablished(OrganizationForSecurityAndCooperationInEurope,
                  DayFn(a_1, MonthFn(January, YearFn(a_1_9_9_5))))
%{OrganizationForSecurityAndCooperationInEurope
"The 
&%OrganizationForSecurityAndCooperationInEurope, established January 1, 
1995, grew out of the Conference on Security and Cooperation in Europe, 
which began meeting in 1975."}%
. organizationalObjective(OrganizationForSecurityAndCooperationInEurope,
                          HumanRightsIssues)
. organizationalObjective(OrganizationForSecurityAndCooperationInEurope,
                          PromoteRegionalStability)
. organizationalObjective(OrganizationForSecurityAndCooperationInEurope,
                          ConventionalArmsControl)
. instance(OrganizationForTheProhibitionOfChemicalWeapons,
           OrganizationOfNations)
. conventionalLongName(a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_f_o_r_Space_t_h_e_Space_P_r_o_h_i_b_i_t_i_o_n_Space_o_f_Space_C_h_e_m_i_c_a_l_Space_W_e_a_p_o_n_s_Quot,
                       OrganizationForTheProhibitionOfChemicalWeapons)
. abbreviation(a_Quot_O_P_C_W_Quot,
               OrganizationForTheProhibitionOfChemicalWeapons)
. dateEstablished(OrganizationForTheProhibitionOfChemicalWeapons,
                  DayFn(a_2_9, MonthFn(April, YearFn(a_1_9_9_7))))
. organizationalObjective(OrganizationForTheProhibitionOfChemicalWeapons,
                          EliminateChemicalWeapons)
. instance(OrganizationOfAfricanUnity, OrganizationOfNations)
. conventionalLongName(a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_A_f_r_i_c_a_n_Space_U_n_i_t_y_Quot,
                       OrganizationOfAfricanUnity)
. conventionalLongName(a_Quot_A_f_r_i_c_a_n_Space_U_n_i_o_n_Quot,
                       OrganizationOfAfricanUnity)
. abbreviation(a_Quot_O_A_U_Quot, OrganizationOfAfricanUnity)
. dateEstablished(OrganizationOfAfricanUnity,
                  DayFn(a_2_5, MonthFn(May, YearFn(a_1_9_6_3))))
%{OrganizationOfAfricanUnity
"The 
&%OrganizationOfAfricanUnity was renamed to African Union 
(Union-Africaine) in July, 2002."}%
. organizationalObjective(OrganizationOfAfricanUnity,
                          EconomicCooperation)
. organizationalObjective(OrganizationOfAfricanUnity,
                          MilitaryCooperation)
. organizationalObjective(OrganizationOfAfricanUnity,
                          SocialDevelopment)
. organizationalObjective(OrganizationOfAfricanUnity,
                          EconomicDevelopment)
. organizationalObjective(OrganizationOfAfricanUnity,
                          CulturalCooperation)
. organizationalObjective(OrganizationOfAfricanUnity,
                          PublicHealthConcern)
. instance(OrganizationOfAmericanStates, OrganizationOfNations)
. conventionalLongName(a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_A_m_e_r_i_c_a_n_Space_S_t_a_t_e_s_Quot,
                       OrganizationOfAmericanStates)
. abbreviation(a_Quot_O_A_S_Quot, OrganizationOfAmericanStates)
. formerName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_U_n_i_o_n_Space_o_f_Space_A_m_e_r_i_c_a_n_Space_R_e_p_u_b_l_i_c_s_Quot,
             OrganizationOfAmericanStates)
. dateEstablished(OrganizationOfAmericanStates,
                  DayFn(a_1_4, MonthFn(April, YearFn(a_1_8_9_0))))
%{OrganizationOfAmericanStates
"The 
&%OrganizationOfAmericanStates adopted its present charter on April 30, 
1948."}%
. organizationalObjective(OrganizationOfAmericanStates,
                          EconomicDevelopment)
. organizationalObjective(OrganizationOfAmericanStates,
                          SocialDevelopment)
. organizationalObjective(OrganizationOfAmericanStates,
                          PromoteRegionalStability)
. instance(OrganizationOfArabPetroleumExportingCountries,
           OrganizationOfNations)
. conventionalLongName(a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_A_r_a_b_Space_P_e_t_r_o_l_e_u_m_Space_E_x_p_o_r_t_i_n_g_Space_C_o_u_n_t_r_i_e_s_Quot,
                       OrganizationOfArabPetroleumExportingCountries)
. abbreviation(a_Quot_O_A_P_E_C_Quot,
               OrganizationOfArabPetroleumExportingCountries)
. dateEstablished(OrganizationOfArabPetroleumExportingCountries,
                  DayFn(a_9, MonthFn(January, YearFn(a_1_9_6_8))))
. organizationalObjective(OrganizationOfArabPetroleumExportingCountries,
                          EconomicCooperation)
. instance(OrganizationOfEasternCaribbeanStates,
           OrganizationOfNations)
. conventionalLongName(a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_E_a_s_t_e_r_n_Space_C_a_r_i_b_b_e_a_n_Space_S_t_a_t_e_s_Quot,
                       OrganizationOfEasternCaribbeanStates)
. abbreviation(a_Quot_O_E_C_S_Quot,
               OrganizationOfEasternCaribbeanStates)
. dateEstablished(OrganizationOfEasternCaribbeanStates,
                  DayFn(a_1_8, MonthFn(June, YearFn(a_1_9_8_1))))
. organizationalObjective(OrganizationOfEasternCaribbeanStates,
                          PoliticalCooperation)
. organizationalObjective(OrganizationOfEasternCaribbeanStates,
                          EconomicCooperation)
. organizationalObjective(OrganizationOfEasternCaribbeanStates,
                          MilitaryCooperation)
. instance(OrganizationOfPetroleumExportingCountries,
           OrganizationOfNations)
. conventionalLongName(a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_P_e_t_r_o_l_e_u_m_Space_E_x_p_o_r_t_i_n_g_Space_C_o_u_n_t_r_i_e_s_Quot,
                       OrganizationOfPetroleumExportingCountries)
. abbreviation(a_Quot_O_P_E_C_Quot,
               OrganizationOfPetroleumExportingCountries)
. dateEstablished(OrganizationOfPetroleumExportingCountries,
                  DayFn(a_1_4, MonthFn(September, YearFn(a_1_9_6_0))))
. organizationalObjective(OrganizationOfPetroleumExportingCountries,
                          EconomicPolicyCoordination)
. instance(OrganizationOfTheIslamicConference,
           OrganizationOfNations)
. conventionalLongName(a_Quot_O_r_g_a_n_i_z_a_t_i_o_n_Space_o_f_Space_t_h_e_Space_I_s_l_a_m_i_c_Space_C_o_n_f_e_r_e_n_c_e_Quot,
                       OrganizationOfTheIslamicConference)
. abbreviation(a_Quot_O_I_C_Quot,
               OrganizationOfTheIslamicConference)
. dateEstablished(OrganizationOfTheIslamicConference,
                  MonthFn(September, YearFn(a_1_9_6_9)))
. organizationalObjective(OrganizationOfTheIslamicConference,
                          PoliticalCooperation)
. organizationalObjective(OrganizationOfTheIslamicConference,
                          EconomicCooperation)
. organizationalObjective(OrganizationOfTheIslamicConference,
                          CulturalCooperation)
. organizationalObjective(OrganizationOfTheIslamicConference,
                          SocialCooperation)
. instance(PacificCommunity, OrganizationOfNations)
. conventionalLongName(a_Quot_P_a_c_i_f_i_c_Space_C_o_m_m_u_n_i_t_y_Quot,
                       PacificCommunity)
. formerName(a_Quot_S_o_u_t_h_Space_P_a_c_i_f_i_c_Space_C_o_m_m_i_s_s_i_o_n_Quot,
             PacificCommunity)
. formerName(a_Quot_S_P_C_Quot, PacificCommunity)
. dateEstablished(PacificCommunity,
                  DayFn(a_6, MonthFn(February, YearFn(a_1_9_4_7))))
. organizationalObjective(PacificCommunity, EconomicCooperation)
. organizationalObjective(PacificCommunity, SocialCooperation)
. instance(PacificIslandForum, OrganizationOfNations)
. conventionalLongName(a_Quot_P_a_c_i_f_i_c_Space_I_s_l_a_n_d_Space_F_o_r_u_m_Quot,
                       PacificIslandForum)
. formerName(a_Quot_S_o_u_t_h_Space_P_a_c_i_f_i_c_Space_F_o_r_u_m_Quot,
             PacificIslandForum)
. dateEstablished(PacificIslandForum,
                  DayFn(a_5, MonthFn(August, YearFn(a_1_9_7_1))))
. organizationalObjective(PacificIslandForum, PoliticalCooperation)
. instance(PartnershipForPeace, OrganizationOfNations)
. conventionalLongName(a_Quot_P_a_r_t_n_e_r_s_h_i_p_Space_f_o_r_Space_P_e_a_c_e_Quot,
                       PartnershipForPeace)
. abbreviation(a_Quot_P_F_P_Quot, PartnershipForPeace)
. dateEstablished(PartnershipForPeace,
                  DayFn(a_1_1, MonthFn(January, YearFn(a_1_9_9_4))))
. organizationalObjective(PartnershipForPeace,
                          PoliticalCooperation)
. organizationalObjective(PartnershipForPeace, MilitaryCooperation)
. organizationalObjective(PartnershipForPeace,
                          PromoteRegionalStability)
. relatedInternalConcept(PartnershipForPeace,
                         NorthAtlanticTreatyOrganization)
. instance(PermanentCourtOfArbitration, OrganizationOfNations)
. conventionalLongName(a_Quot_P_e_r_m_a_n_e_n_t_Space_C_o_u_r_t_Space_o_f_Space_A_r_b_i_t_r_a_t_i_o_n_Quot,
                       PermanentCourtOfArbitration)
. abbreviation(a_Quot_P_C_A_Quot, PermanentCourtOfArbitration)
. dateEstablished(PermanentCourtOfArbitration,
                  DayFn(a_2_9, MonthFn(July, YearFn(a_1_8_9_9))))
. organizationalObjective(PermanentCourtOfArbitration,
                          InternationalJustice)
. instance(RioGroup, OrganizationOfNations)
. conventionalLongName(a_Quot_R_i_o_Space_G_r_o_u_p_Quot, RioGroup)
. abbreviation(a_Quot_R_G_Quot, RioGroup)
. formerName(a_Quot_G_r_u_p_o_Space_d_e_Space_l_o_s_Space_O_c_h_o_Quot,
             RioGroup)
. dateEstablished(RioGroup, YearFn(a_1_9_8_6))
%{RioGroup
"The &%RioGroup was the result of fusing the 
Contadora Group and the Lima (or Support) Group."}%
. organizationalObjective(RioGroup, PoliticalCooperation)
. instance(SouthAsianAssociationForRegionalCooperation,
           OrganizationOfNations)
. conventionalLongName(a_Quot_S_o_u_t_h_Space_A_s_i_a_n_Space_A_s_s_o_c_i_a_t_i_o_n_Space_f_o_r_Space_R_e_g_i_o_n_a_l_Space_C_o_o_p_e_r_a_t_i_o_n_Quot,
                       SouthAsianAssociationForRegionalCooperation)
. abbreviation(a_Quot_S_A_A_R_C_Quot,
               SouthAsianAssociationForRegionalCooperation)
. dateEstablished(SouthAsianAssociationForRegionalCooperation,
                  DayFn(a_8, MonthFn(December, YearFn(a_1_9_8_5))))
. organizationalObjective(SouthAsianAssociationForRegionalCooperation,
                          EconomicCooperation)
. organizationalObjective(SouthAsianAssociationForRegionalCooperation,
                          SocialCooperation)
. organizationalObjective(SouthAsianAssociationForRegionalCooperation,
                          CulturalCooperation)
. instance(SouthPacificRegionalTradeAndEconomicCooperationAgreement,
           OrganizationOfNations)
. conventionalLongName(a_Quot_S_o_u_t_h_Space_P_a_c_i_f_i_c_Space_R_e_g_i_o_n_a_l_Space_T_r_a_d_e_Space_a_n_d_Space_E_c_o_n_o_m_i_c_Space_C_o_o_p_e_r_a_t_i_o_n_Space_A_g_r_e_e_m_e_n_t_Quot,
                       SouthPacificRegionalTradeAndEconomicCooperationAgreement)
. abbreviation(a_Quot_S_p_a_r_t_e_c_a_Quot,
               SouthPacificRegionalTradeAndEconomicCooperationAgreement)
. organizationalObjective(SouthPacificRegionalTradeAndEconomicCooperationAgreement,
                          EconomicCooperation)
. organizationalObjective(SouthPacificRegionalTradeAndEconomicCooperationAgreement,
                          PromotionOfFreeTrade)
. instance(SouthernAfricanCustomsUnion, OrganizationOfNations)
. conventionalLongName(a_Quot_S_o_u_t_h_e_r_n_Space_A_f_r_i_c_a_n_Space_C_u_s_t_o_m_s_Space_U_n_i_o_n_Quot,
                       SouthernAfricanCustomsUnion)
. abbreviation(a_Quot_S_A_C_U_Quot, SouthernAfricanCustomsUnion)
. dateEstablished(SouthernAfricanCustomsUnion,
                  DayFn(a_1_1, MonthFn(December, YearFn(a_1_9_6_9))))
. organizationalObjective(SouthernAfricanCustomsUnion,
                          PromotionOfFreeTrade)
. organizationalObjective(SouthernAfricanCustomsUnion,
                          EfficientCustomsAdministration)
. instance(SouthernAfricanDevelopmentCommunity,
           OrganizationOfNations)
. conventionalLongName(a_Quot_S_o_u_t_h_e_r_n_Space_A_f_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_C_o_m_m_u_n_i_t_y_Quot,
                       SouthernAfricanDevelopmentCommunity)
. abbreviation(a_Quot_S_A_D_C_Quot,
               SouthernAfricanDevelopmentCommunity)
. formerName(a_Quot_S_o_u_t_h_e_r_n_Space_A_f_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_C_o_o_r_d_i_n_a_t_i_o_n_Space_C_o_n_f_e_r_e_n_c_e_Quot,
             SouthernAfricanDevelopmentCommunity)
. formerName(a_Quot_S_A_D_C_C_Quot,
             SouthernAfricanDevelopmentCommunity)
. dateEstablished(SouthernAfricanDevelopmentCommunity,
                  DayFn(a_1_7, MonthFn(August, YearFn(a_1_9_9_2))))
. organizationalObjective(SouthernAfricanDevelopmentCommunity,
                          EconomicIntegration)
. organizationalObjective(SouthernAfricanDevelopmentCommunity,
                          EconomicDevelopment)
. instance(SouthernConeCommonMarket, OrganizationOfNations)
. conventionalLongName(a_Quot_S_o_u_t_h_e_r_n_Space_C_o_n_e_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
                       SouthernConeCommonMarket)
. conventionalLongName(a_Quot_S_o_u_t_h_e_r_n_Space_C_o_m_m_o_n_Space_M_a_r_k_e_t_Quot,
                       SouthernConeCommonMarket)
. abbreviation(a_Quot_M_e_r_c_o_s_u_r_Quot,
               SouthernConeCommonMarket)
. localLongName(a_Quot_M_e_r_c_a_d_o_Space_C_o_m_u_n_Space_d_e_l_Space_C_o_n_o_Space_S_u_r_Quot,
                SouthernConeCommonMarket)
. dateEstablished(SouthernConeCommonMarket,
                  DayFn(a_2_6, MonthFn(March, YearFn(a_1_9_9_1))))
. organizationalObjective(SouthernConeCommonMarket,
                          EconomicCooperation)
. instance(UnitedNations, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Quot,
                       UnitedNations)
. abbreviation(a_Quot_U_N_Quot, UnitedNations)
. dateEstablished(UnitedNations,
                  DayFn(a_2_6, MonthFn(June, YearFn(a_1_9_4_5))))
. organizationalObjective(UnitedNations,
                          InternationalPeaceAndSecurity)
. organizationalObjective(UnitedNations, EconomicDevelopment)
. organizationalObjective(UnitedNations, SocialDevelopment)
. organizationalObjective(UnitedNations, HumanitarianAid)
. organizationalObjective(UnitedNations, CulturalCooperation)
%{UnitedNations
"The &%UnitedNations has six principal 
&%subOrganizations: the Secretariat, the General Assembly, the Security 
Council, the Economic and Social Council, the Trusteeship Council 
(currently inactive), and the International Court of Justice.  The United 
Nations has numerous subordinate agencies and bodies within those six 
major subdivisions."}%
. instance(UnitedNationsChildrensFund, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_h_i_l_d_r_e_n_s_Space_F_u_n_d_Quot,
                       UnitedNationsChildrensFund)
. abbreviation(a_Quot_U_N_I_C_E_F_Quot, UnitedNationsChildrensFund)
. formerName(a_Quot_U_N_Space_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_h_i_l_d_r_e_n_s_Space_E_m_e_r_g_e_n_c_y_Space_F_u_n_d_Quot,
             UnitedNationsChildrensFund)
. dateEstablished(UnitedNationsChildrensFund,
                  DayFn(a_1_1, MonthFn(December, YearFn(a_1_9_4_6))))
. organizationalObjective(UnitedNationsChildrensFund,
                          ChildHealthServices)
. instance(UnitedNationsCivilianPoliceMissionInHaiti,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_i_v_i_l_i_a_n_Space_P_o_l_i_c_e_Space_M_i_s_s_i_o_n_Space_i_n_Space_H_a_i_t_i_Quot,
                       UnitedNationsCivilianPoliceMissionInHaiti)
. abbreviation(a_Quot_M_I_P_O_N_U_H_Quot,
               UnitedNationsCivilianPoliceMissionInHaiti)
. dateEstablished(UnitedNationsCivilianPoliceMissionInHaiti,
                  DayFn(a_2_8, MonthFn(November, YearFn(a_1_9_9_7))))
. organizationalObjective(UnitedNationsCivilianPoliceMissionInHaiti,
                          CivilPoliceTraining)
. instance(UnitedNationsConferenceOnTradeAndDevelopment,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_o_n_f_e_r_e_n_c_e_Space_o_n_Space_T_r_a_d_e_Space_a_n_d_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
                       UnitedNationsConferenceOnTradeAndDevelopment)
. abbreviation(a_Quot_U_N_C_T_A_D_Quot,
               UnitedNationsConferenceOnTradeAndDevelopment)
. dateEstablished(UnitedNationsConferenceOnTradeAndDevelopment,
                  DayFn(a_3_0, MonthFn(December, YearFn(a_1_9_6_4))))
. organizationalObjective(UnitedNationsConferenceOnTradeAndDevelopment,
                          InternationalTradeSupport)
. instance(UnitedNationsDevelopmentProgram, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_D_e_v_e_l_o_p_m_e_n_t_Space_P_r_o_g_r_a_m_Quot,
                       UnitedNationsDevelopmentProgram)
. abbreviation(a_Quot_U_N_D_P_Quot,
               UnitedNationsDevelopmentProgram)
. dateEstablished(UnitedNationsDevelopmentProgram,
                  DayFn(a_2_2, MonthFn(November, YearFn(a_1_9_6_5))))
. organizationalObjective(UnitedNationsDevelopmentProgram,
                          EconomicDevelopment)
. organizationalObjective(UnitedNationsDevelopmentProgram,
                          SocialDevelopment)
. organizationalObjective(UnitedNationsDevelopmentProgram,
                          TechnologyCooperation)
. instance(UnitedNationsDisengagementObserverForce,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_D_i_s_e_n_g_a_g_e_m_e_n_t_Space_O_b_s_e_r_v_e_r_Space_F_o_r_c_e_Quot,
                       UnitedNationsDisengagementObserverForce)
. abbreviation(a_Quot_U_N_D_O_F_Quot,
               UnitedNationsDisengagementObserverForce)
. dateEstablished(UnitedNationsDisengagementObserverForce,
                  DayFn(a_3_1, MonthFn(May, YearFn(a_1_9_7_4))))
. organizationalObjective(UnitedNationsDisengagementObserverForce,
                          ObservationAndMonitoring)
%{UnitedNationsDisengagementObserverForce
"The 
&%UnitedNationsDisengagementObserverForce was formed by the UN Security 
Council in order to observe the 1973 Arab-Israeli cease-fire."}%
. instance(UnitedNationsEducationalScientificAndCulturalOrganization,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_E_d_u_c_a_t_i_o_n_a_l_Comma_Space_S_c_i_e_n_t_i_f_i_c_Comma_Space_a_n_d_Space_C_u_l_t_u_r_a_l_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       UnitedNationsEducationalScientificAndCulturalOrganization)
. abbreviation(a_Quot_U_N_E_S_C_O_Quot,
               UnitedNationsEducationalScientificAndCulturalOrganization)
. dateEstablished(UnitedNationsEducationalScientificAndCulturalOrganization,
                  DayFn(a_1_6, MonthFn(November, YearFn(a_1_9_4_5))))
. organizationalObjective(UnitedNationsEducationalScientificAndCulturalOrganization,
                          ScientificCooperation)
. organizationalObjective(UnitedNationsEducationalScientificAndCulturalOrganization,
                          CulturalCooperation)
. organizationalObjective(UnitedNationsEducationalScientificAndCulturalOrganization,
                          EducationalCooperation)
. instance(UnitedNationsEnvironmentProgram, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_E_n_v_i_r_o_n_m_e_n_t_Space_P_r_o_g_r_a_m_Quot,
                       UnitedNationsEnvironmentProgram)
. abbreviation(a_Quot_U_N_E_P_Quot,
               UnitedNationsEnvironmentProgram)
. dateEstablished(UnitedNationsEnvironmentProgram,
                  DayFn(a_1_5, MonthFn(December, YearFn(a_1_9_7_2))))
. organizationalObjective(UnitedNationsEnvironmentProgram,
                          EnvironmentalCooperation)
. instance(UnitedNationsGeneralAssembly, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_G_e_n_e_r_a_l_Space_A_s_s_e_m_b_l_y_Quot,
                       UnitedNationsGeneralAssembly)
. conventionalShortName(a_Quot_U_N_Space_G_e_n_e_r_a_l_Space_A_s_s_e_m_b_l_y_Quot,
                        UnitedNationsGeneralAssembly)
. dateEstablished(UnitedNationsGeneralAssembly,
                  DayFn(a_2_6, MonthFn(June, YearFn(a_1_9_4_5))))
. organizationalObjective(UnitedNationsGeneralAssembly,
                          PoliticalCooperation)
%{UnitedNationsGeneralAssembly
"The 
&%UnitedNationsGeneralAssembly is the primary deliberative body of the 
&%UnitedNations."}%
. subOrganization(UnitedNationsGeneralAssembly, UnitedNations)
. subOrganization(UnitedNationsChildrensFund,
                  UnitedNationsGeneralAssembly)
. subOrganization(UnitedNationsConferenceOnTradeAndDevelopment,
                  UnitedNationsGeneralAssembly)
. subOrganization(UnitedNationsDevelopmentProgram,
                  UnitedNationsGeneralAssembly)
. subOrganization(UnitedNationsEnvironmentProgram,
                  UnitedNationsGeneralAssembly)
. subOrganization(UnitedNationsHighCommissionerForRefugees,
                  UnitedNationsGeneralAssembly)
. subOrganization(UnitedNationsInstituteForTrainingAndResearch,
                  UnitedNationsGeneralAssembly)
. subOrganization(UnitedNationsPopulationFund,
                  UnitedNationsGeneralAssembly)
. subOrganization(UnitedNationsReliefAndWorksAgencyForPalestineRefugeesInTheNearEast,
                  UnitedNationsGeneralAssembly)
. subOrganization(UnitedNationsResearchInstituteForSocialDevelopment,
                  UnitedNationsGeneralAssembly)
. subOrganization(UnitedNationsUniversity,
                  UnitedNationsGeneralAssembly)
. subOrganization(WorldFoodProgram, UnitedNationsGeneralAssembly)
. subOrganization(InternationalResearchAndTrainingInstituteForTheAdvancementOfWomen,
                  UnitedNationsGeneralAssembly)
. instance(InternationalResearchAndTrainingInstituteForTheAdvancementOfWomen,
           OrganizationOfNations)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_R_e_s_e_a_r_c_h_Space_a_n_d_Space_T_r_a_i_n_i_n_g_Space_I_n_s_t_i_t_u_t_e_Space_f_o_r_Space_t_h_e_Space_A_d_v_a_n_c_e_m_e_n_t_Space_o_f_Space_W_o_m_e_n_Quot,
                       InternationalResearchAndTrainingInstituteForTheAdvancementOfWomen)
. abbreviation(a_Quot_I_N_S_T_R_A_W_Quot,
               InternationalResearchAndTrainingInstituteForTheAdvancementOfWomen)
. organizationalObjective(InternationalResearchAndTrainingInstituteForTheAdvancementOfWomen,
                          GenderEquality)
. subOrganization(UnitedNationsCenterForHumanSettlements,
                  UnitedNationsGeneralAssembly)
. instance(UnitedNationsCenterForHumanSettlements,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_e_n_t_e_r_Space_f_o_r_Space_H_u_m_a_n_Space_S_e_t_t_l_e_m_e_n_t_s_Quot,
                       UnitedNationsCenterForHumanSettlements)
. abbreviation(a_Quot_U_N_Minus_H_A_B_I_T_A_T_Quot,
               UnitedNationsCenterForHumanSettlements)
. formerName(a_Quot_U_N_C_H_S_Quot,
             UnitedNationsCenterForHumanSettlements)
. formerName(a_Quot_H_a_b_i_t_a_t_Quot,
             UnitedNationsCenterForHumanSettlements)
. organizationalObjective(UnitedNationsCenterForHumanSettlements,
                          ImproveHumanSettlementConditions)
. organizationalObjective(UnitedNationsCenterForHumanSettlements,
                          ReducePoverty)
. organizationalObjective(UnitedNationsCenterForHumanSettlements,
                          PromoteSustainableDevelopment)
. subOrganization(UnitedNationsHighCommissionerForHumanRights,
                  UnitedNationsGeneralAssembly)
. instance(UnitedNationsHighCommissionerForHumanRights,
           InternationalOrganization)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_H_i_g_h_Space_C_o_m_m_i_s_s_i_o_n_e_r_Space_f_o_r_Space_H_u_m_a_n_Space_R_i_g_h_t_s_Quot,
                       UnitedNationsHighCommissionerForHumanRights)
. abbreviation(a_Quot_U_N_H_C_H_R_Quot,
               UnitedNationsHighCommissionerForHumanRights)
. organizationalObjective(UnitedNationsHighCommissionerForHumanRights,
                          HumanRightsIssues)
. subOrganization(UnitedNationsInstituteForDisarmamentResearch,
                  UnitedNationsGeneralAssembly)
. instance(UnitedNationsInstituteForDisarmamentResearch,
           InternationalOrganization)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_s_t_i_t_u_t_e_Space_f_o_r_Space_D_i_s_a_r_m_a_m_e_n_t_Space_R_e_s_e_a_r_c_h_Quot,
                       UnitedNationsInstituteForDisarmamentResearch)
. abbreviation(a_Quot_U_N_I_D_I_R_Quot,
               UnitedNationsInstituteForDisarmamentResearch)
. organizationalObjective(UnitedNationsInstituteForDisarmamentResearch,
                          ArmsControl)
. subOrganization(UnitedNationsInterregionalCrimeAndJusticeResearchInstitute,
                  UnitedNationsGeneralAssembly)
. instance(UnitedNationsInterregionalCrimeAndJusticeResearchInstitute,
           InternationalOrganization)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_t_e_r_r_e_g_i_o_n_a_l_Space_C_r_i_m_e_Space_a_n_d_Space_J_u_s_t_i_c_e_Space_R_e_s_e_a_r_c_h_Space_I_n_s_t_i_t_u_t_e_Quot,
                       UnitedNationsInterregionalCrimeAndJusticeResearchInstitute)
. abbreviation(a_Quot_U_N_I_C_R_I_Quot,
               UnitedNationsInterregionalCrimeAndJusticeResearchInstitute)
. formerName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_o_c_i_a_l_Space_D_e_f_e_n_s_e_Space_R_e_s_e_a_r_c_h_Space_I_n_s_t_i_t_u_t_e_Quot,
             UnitedNationsInterregionalCrimeAndJusticeResearchInstitute)
. formerName(a_Quot_U_N_S_D_R_I_Quot,
             UnitedNationsInterregionalCrimeAndJusticeResearchInstitute)
. dateEstablished(UnitedNationsInterregionalCrimeAndJusticeResearchInstitute,
                  DayFn(a_2_9, MonthFn(April, YearFn(a_1_9_6_9))))
%{UnitedNationsInterregionalCrimeAndJusticeResearchInstitute
"The &%UnitedNationsInterregionalCrimeAndJusticeResearchInstitute was 
reconstituted (from UNSDRI) into its present form in 1989 to address 
broader demands introduced by the participation of more developing 
countries in the &%UnitedNations."}%
. organizationalObjective(UnitedNationsInterregionalCrimeAndJusticeResearchInstitute,
                          ReducingCrime)
. organizationalObjective(UnitedNationsInterregionalCrimeAndJusticeResearchInstitute,
                          EducationalCooperation)
. subOrganization(UnitedNationsOfficeOfProjectServices,
                  UnitedNationsGeneralAssembly)
. instance(UnitedNationsOfficeOfProjectServices,
           InternationalOrganization)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_O_f_f_i_c_e_Space_o_f_Space_P_r_o_j_e_c_t_Space_S_e_r_v_i_c_e_s_Quot,
                       UnitedNationsOfficeOfProjectServices)
. abbreviation(a_Quot_U_N_O_P_S_Quot,
               UnitedNationsOfficeOfProjectServices)
. organizationalObjective(UnitedNationsOfficeOfProjectServices,
                          AdministrationAndManagement)
. subOrganization(UnitedNationsSystemStaffCollege,
                  UnitedNationsGeneralAssembly)
. instance(UnitedNationsSystemStaffCollege, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_y_s_t_e_m_s_Space_S_t_a_f_f_Space_C_o_l_l_e_g_e_Quot,
                       UnitedNationsSystemStaffCollege)
. abbreviation(a_Quot_U_N_S_S_C_Quot,
               UnitedNationsSystemStaffCollege)
. organizationalObjective(UnitedNationsSystemStaffCollege,
                          EducationalCooperation)
. instance(UnitedNationsHighCommissionerForRefugees,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_H_i_g_h_Space_C_o_m_m_i_s_s_i_o_n_e_r_Space_f_o_r_Space_R_e_f_u_g_e_e_s_Quot,
                       UnitedNationsHighCommissionerForRefugees)
. abbreviation(a_Quot_U_N_H_C_R_Quot,
               UnitedNationsHighCommissionerForRefugees)
. dateEstablished(UnitedNationsHighCommissionerForRefugees,
                  DayFn(a_3, MonthFn(December, YearFn(a_1_9_4_9))))
. organizationalObjective(UnitedNationsHighCommissionerForRefugees,
                          HumanitarianAssistance)
. organizationalObjective(UnitedNationsHighCommissionerForRefugees,
                          RefugeeAssistance)
. instance(UnitedNationsIndustrialDevelopmentOrganization,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_d_u_s_t_r_i_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       UnitedNationsIndustrialDevelopmentOrganization)
. abbreviation(a_Quot_U_N_I_D_O_Quot,
               UnitedNationsIndustrialDevelopmentOrganization)
. dateEstablished(UnitedNationsIndustrialDevelopmentOrganization,
                  DayFn(a_1_7, MonthFn(November, YearFn(a_1_9_6_6))))
. organizationalObjective(UnitedNationsIndustrialDevelopmentOrganization,
                          EconomicDevelopment)
. organizationalObjective(UnitedNationsIndustrialDevelopmentOrganization,
                          TechnologyCooperation)
. instance(UnitedNationsInstituteForTrainingAndResearch,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_s_t_i_t_u_t_e_Space_f_o_r_Space_T_r_a_i_n_i_n_g_Space_a_n_d_Space_R_e_s_e_a_r_c_h_Quot,
                       UnitedNationsInstituteForTrainingAndResearch)
. abbreviation(a_Quot_U_N_I_T_A_R_Quot,
               UnitedNationsInstituteForTrainingAndResearch)
. dateEstablished(UnitedNationsInstituteForTrainingAndResearch,
                  DayFn(a_1_1, MonthFn(December, YearFn(a_1_9_6_3))))
. organizationalObjective(UnitedNationsInstituteForTrainingAndResearch,
                          EducationalCooperation)
. instance(UnitedNationsInterimAdminstrationMissionInKosovo,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_t_e_r_i_m_Space_A_d_m_i_n_i_s_t_r_a_t_i_o_n_Space_M_i_s_s_i_o_n_Space_i_n_Space_K_o_s_o_v_o_Quot,
                       UnitedNationsInterimAdminstrationMissionInKosovo)
. abbreviation(a_Quot_U_N_M_I_K_Quot,
               UnitedNationsInterimAdminstrationMissionInKosovo)
. dateEstablished(UnitedNationsInterimAdminstrationMissionInKosovo,
                  DayFn(a_1_0, MonthFn(June, YearFn(a_1_9_9_9))))
. organizationalObjective(UnitedNationsInterimAdminstrationMissionInKosovo,
                          HumanitarianAssistance)
. organizationalObjective(UnitedNationsInterimAdminstrationMissionInKosovo,
                          TransitionalAdministration)
. instance(UnitedNationsInterimForceInLebanon,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_n_t_e_r_i_m_Space_F_o_r_c_e_Space_i_n_Space_L_e_b_a_n_o_n_Quot,
                       UnitedNationsInterimForceInLebanon)
. abbreviation(a_Quot_U_N_I_F_I_L_Quot,
               UnitedNationsInterimForceInLebanon)
. dateEstablished(UnitedNationsInterimForceInLebanon,
                  DayFn(a_1_9, MonthFn(March, YearFn(a_1_9_7_8))))
. organizationalObjective(UnitedNationsInterimForceInLebanon,
                          TransitionalAdministration)
. organizationalObjective(UnitedNationsInterimForceInLebanon,
                          ObservationAndMonitoring)
. instance(UnitedNationsIraqKuwaitObservationMission,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_r_a_q_Minus_K_u_w_a_i_t_Space_O_b_s_e_r_v_a_t_i_o_n_Space_M_i_s_s_i_o_n_Quot,
                       UnitedNationsIraqKuwaitObservationMission)
. abbreviation(a_Quot_U_N_I_K_O_M_Quot,
               UnitedNationsIraqKuwaitObservationMission)
. dateEstablished(UnitedNationsIraqKuwaitObservationMission,
                  DayFn(a_9, MonthFn(April, YearFn(a_1_9_9_1))))
. organizationalObjective(UnitedNationsIraqKuwaitObservationMission,
                          ObservationAndMonitoring)
. instance(UnitedNationsMilitaryObserverGroupInIndiaAndPakistan,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_l_i_t_a_r_y_Space_O_b_s_e_r_v_e_r_Space_G_r_o_u_p_Space_i_n_Space_I_n_d_i_a_Space_a_n_d_Space_P_a_k_i_s_t_a_n_Quot,
                       UnitedNationsMilitaryObserverGroupInIndiaAndPakistan)
. abbreviation(a_Quot_U_N_M_O_G_I_P_Quot,
               UnitedNationsMilitaryObserverGroupInIndiaAndPakistan)
. dateEstablished(UnitedNationsMilitaryObserverGroupInIndiaAndPakistan,
                  DayFn(a_2_4, MonthFn(January, YearFn(a_1_9_4_9))))
. organizationalObjective(UnitedNationsMilitaryObserverGroupInIndiaAndPakistan,
                          ObservationAndMonitoring)
. instance(UnitedNationsMissionForTheReferendumInWesternSahara,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_f_o_r_Space_t_h_e_Space_R_e_f_e_r_e_n_d_u_m_Space_i_n_Space_W_e_s_t_e_r_n_Space_S_a_h_a_r_a_Quot,
                       UnitedNationsMissionForTheReferendumInWesternSahara)
. abbreviation(a_Quot_M_I_N_U_R_S_O_Quot,
               UnitedNationsMissionForTheReferendumInWesternSahara)
. dateEstablished(UnitedNationsMissionForTheReferendumInWesternSahara,
                  DayFn(a_2_9, MonthFn(April, YearFn(a_1_9_9_1))))
. organizationalObjective(UnitedNationsMissionForTheReferendumInWesternSahara,
                          ObservationAndMonitoring)
. organizationalObjective(UnitedNationsMissionForTheReferendumInWesternSahara,
                          TransitionalAdministration)
. instance(UnitedNationsMissionInBosniaAndHerzegovina,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_i_n_Space_B_o_s_n_i_a_Space_a_n_d_Space_H_e_r_z_e_g_o_v_i_n_a_Quot,
                       UnitedNationsMissionInBosniaAndHerzegovina)
. abbreviation(a_Quot_U_N_M_I_B_H_Quot,
               UnitedNationsMissionInBosniaAndHerzegovina)
. dateEstablished(UnitedNationsMissionInBosniaAndHerzegovina,
                  DayFn(a_2_1, MonthFn(December, YearFn(a_1_9_9_5))))
. organizationalObjective(UnitedNationsMissionInBosniaAndHerzegovina,
                          SupportLawEnforcement)
. organizationalObjective(UnitedNationsMissionInBosniaAndHerzegovina,
                          CivilPoliceTraining)
. organizationalObjective(UnitedNationsMissionInBosniaAndHerzegovina,
                          ObservationAndMonitoring)
. instance(UnitedNationsMissionInEthiopiaAndEritrea,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_i_n_Space_E_t_h_i_o_p_i_a_Space_a_n_d_Space_E_r_i_t_r_e_a_Quot,
                       UnitedNationsMissionInEthiopiaAndEritrea)
. abbreviation(a_Quot_U_N_M_E_E_Quot,
               UnitedNationsMissionInEthiopiaAndEritrea)
. dateEstablished(UnitedNationsMissionInEthiopiaAndEritrea,
                  DayFn(a_3_1, MonthFn(July, YearFn(a_2_0_0_0))))
. organizationalObjective(UnitedNationsMissionInEthiopiaAndEritrea,
                          ObservationAndMonitoring)
. instance(UnitedNationsMissionInSierraLeone,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_i_n_Space_S_i_e_r_r_a_Space_L_e_o_n_e_Quot,
                       UnitedNationsMissionInSierraLeone)
. abbreviation(a_Quot_U_N_A_M_S_I_L_Quot,
               UnitedNationsMissionInSierraLeone)
. dateEstablished(UnitedNationsMissionInSierraLeone,
                  DayFn(a_2_2, MonthFn(October, YearFn(a_1_9_9_9))))
. organizationalObjective(UnitedNationsMissionInSierraLeone,
                          TransitionalAdministration)
. organizationalObjective(UnitedNationsMissionInSierraLeone,
                          ObservationAndMonitoring)
. instance(UnitedNationsMissionOfObserversInPrevlaka,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_o_f_Space_O_b_s_e_r_v_e_r_s_Space_i_n_Space_P_r_e_v_l_a_k_a_Quot,
                       UnitedNationsMissionOfObserversInPrevlaka)
. abbreviation(a_Quot_U_N_M_O_P_Quot,
               UnitedNationsMissionOfObserversInPrevlaka)
. dateEstablished(UnitedNationsMissionOfObserversInPrevlaka,
                  DayFn(a_1, MonthFn(February, YearFn(a_1_9_9_6))))
. organizationalObjective(UnitedNationsMissionOfObserversInPrevlaka,
                          ObservationAndMonitoring)
. instance(UnitedNationsMissionOfObserversInTajikistan,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_i_s_s_i_o_n_Space_o_f_Space_O_b_s_e_r_v_e_r_s_Space_i_n_Space_T_a_j_i_k_i_s_t_a_n_Quot,
                       UnitedNationsMissionOfObserversInTajikistan)
. abbreviation(a_Quot_U_N_M_O_T_Quot,
               UnitedNationsMissionOfObserversInTajikistan)
. dateEstablished(UnitedNationsMissionOfObserversInTajikistan,
                  DayFn(a_1_6, MonthFn(December, YearFn(a_1_9_9_4))))
. organizationalObjective(UnitedNationsMissionOfObserversInTajikistan,
                          TransitionalAdministration)
. organizationalObjective(UnitedNationsMissionOfObserversInTajikistan,
                          ObservationAndMonitoring)
. instance(UnitedNationsMonitoringAndVerificationCommission,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_M_o_n_i_t_o_r_i_n_g_Space_a_n_d_Space_V_e_r_i_f_i_c_a_t_i_o_n_Space_C_o_m_m_i_s_s_i_o_n_Quot,
                       UnitedNationsMonitoringAndVerificationCommission)
. abbreviation(a_Quot_U_N_M_O_V_I_C_Quot,
               UnitedNationsMonitoringAndVerificationCommission)
. dateEstablished(UnitedNationsMonitoringAndVerificationCommission,
                  YearFn(a_1_9_9_9))
. formerName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_p_e_c_i_a_l_Space_C_o_m_m_i_s_s_i_o_n_Space_f_o_r_Space_t_h_e_Space_E_l_i_m_i_n_a_t_i_o_n_Space_o_f_Space_I_r_a_q_i_Space_W_e_a_p_o_n_s_Space_o_f_Space_M_a_s_s_Space_D_e_s_t_r_u_c_t_i_o_n_Quot,
             UnitedNationsMonitoringAndVerificationCommission)
. formerName(a_Quot_U_N_S_C_O_M_Quot,
             UnitedNationsMonitoringAndVerificationCommission)
. organizationalObjective(UnitedNationsMonitoringAndVerificationCommission,
                          ObservationAndMonitoring)
. organizationalObjective(UnitedNationsMonitoringAndVerificationCommission,
                          ControlWeaponsOfMassDestruction)
. instance(UnitedNationsObserverMissionInGeorgia,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_O_b_s_e_r_v_e_r_Space_M_i_s_s_i_o_n_Space_i_n_Space_G_e_o_r_g_i_a_Quot,
                       UnitedNationsObserverMissionInGeorgia)
. abbreviation(a_Quot_U_N_O_M_I_G_Quot,
               UnitedNationsObserverMissionInGeorgia)
. dateEstablished(UnitedNationsObserverMissionInGeorgia,
                  DayFn(a_2_4, MonthFn(August, YearFn(a_1_9_9_3))))
. organizationalObjective(UnitedNationsObserverMissionInGeorgia,
                          ObservationAndMonitoring)
. agentOperatesInArea(UnitedNationsObserverMissionInGeorgia,
                      RepublicOfGeorgia)
. instance(UnitedNationsOrganizationMissionInTheDemocraticRepublicOfTheCongo,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_O_r_g_a_n_i_z_a_t_i_o_n_Space_M_i_s_s_i_o_n_Space_i_n_Space_t_h_e_Space_D_e_m_o_c_r_a_t_i_c_Space_R_e_p_u_b_l_i_c_Space_o_f_Space_t_h_e_Space_C_o_n_g_o_Quot,
                       UnitedNationsOrganizationMissionInTheDemocraticRepublicOfTheCongo)
. abbreviation(a_Quot_M_O_N_U_C_Quot,
               UnitedNationsOrganizationMissionInTheDemocraticRepublicOfTheCongo)
. dateEstablished(UnitedNationsOrganizationMissionInTheDemocraticRepublicOfTheCongo,
                  DayFn(a_3_0, MonthFn(November, YearFn(a_1_9_9_9))))
. organizationalObjective(UnitedNationsOrganizationMissionInTheDemocraticRepublicOfTheCongo,
                          ObservationAndMonitoring)
. instance(UnitedNationsPeaceKeepingForceInCyprus,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_P_e_a_c_e_Minus_k_e_e_p_i_n_g_Space_F_o_r_c_e_Space_i_n_Space_C_y_p_r_u_s_Quot,
                       UnitedNationsPeaceKeepingForceInCyprus)
. abbreviation(a_Quot_U_N_F_I_C_Y_P_Quot,
               UnitedNationsPeaceKeepingForceInCyprus)
. dateEstablished(UnitedNationsPeaceKeepingForceInCyprus,
                  DayFn(a_4, MonthFn(March, YearFn(a_1_9_6_4))))
. organizationalObjective(UnitedNationsPeaceKeepingForceInCyprus,
                          PeacekeepingOperation)
. instance(UnitedNationsPopulationFund, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_P_o_p_u_l_a_t_i_o_n_Space_F_u_n_d_Quot,
                       UnitedNationsPopulationFund)
. abbreviation(a_Quot_U_N_F_P_A_Quot, UnitedNationsPopulationFund)
. formerName(a_Quot_U_N_Space_F_u_n_d_Space_f_o_r_Space_P_o_p_u_l_a_t_i_o_n_Space_A_c_t_i_v_i_t_i_e_s_Quot,
             UnitedNationsPopulationFund)
. dateEstablished(UnitedNationsPopulationFund,
                  MonthFn(July, YearFn(a_1_9_6_7)))
. organizationalObjective(UnitedNationsPopulationFund,
                          ReproductiveHealthAndFamilyPlannning)
. organizationalObjective(UnitedNationsPopulationFund,
                          PopulationPolicySupport)
. instance(UnitedNationsPreventiveDeploymentForce,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_P_r_e_v_e_n_t_i_v_e_Space_D_e_p_l_o_y_m_e_n_t_Space_F_o_r_c_e_Quot,
                       UnitedNationsPreventiveDeploymentForce)
. abbreviation(a_Quot_U_N_P_R_E_D_E_P_Quot,
               UnitedNationsPreventiveDeploymentForce)
. dateEstablished(UnitedNationsPreventiveDeploymentForce,
                  DayFn(a_3_1, MonthFn(March, YearFn(a_1_9_9_5))))
. organizationalObjective(UnitedNationsPreventiveDeploymentForce,
                          ObservationAndMonitoring)
. dateDissolved(UnitedNationsPreventiveDeploymentForce,
                DayFn(a_2_5, MonthFn(March, YearFn(a_1_9_9_9))))
. instance(UnitedNationsReliefAndWorksAgencyForPalestineRefugeesInTheNearEast,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_R_e_l_i_e_f_Space_a_n_d_Space_W_o_r_k_s_Space_A_g_e_n_c_y_Space_f_o_r_Space_P_a_l_e_s_t_i_n_e_Space_R_e_f_u_g_e_e_s_Space_i_n_Space_t_h_e_Space_N_e_a_r_Space_E_a_s_t_Quot,
                       UnitedNationsReliefAndWorksAgencyForPalestineRefugeesInTheNearEast)
. abbreviation(a_Quot_U_N_R_W_A_Quot,
               UnitedNationsReliefAndWorksAgencyForPalestineRefugeesInTheNearEast)
. dateEstablished(UnitedNationsReliefAndWorksAgencyForPalestineRefugeesInTheNearEast,
                  DayFn(a_8, MonthFn(December, YearFn(a_1_9_4_9))))
. organizationalObjective(UnitedNationsReliefAndWorksAgencyForPalestineRefugeesInTheNearEast,
                          RefugeeAssistance)
. instance(UnitedNationsResearchInstituteForSocialDevelopment,
           InternationalOrganization)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_R_e_s_e_a_r_c_h_Space_I_n_s_t_i_t_u_t_e_Space_f_o_r_Space_S_o_c_i_a_l_Space_D_e_v_e_l_o_p_m_e_n_t_Quot,
                       UnitedNationsResearchInstituteForSocialDevelopment)
. abbreviation(a_Quot_U_N_R_I_S_D_Quot,
               UnitedNationsResearchInstituteForSocialDevelopment)
. dateEstablished(UnitedNationsResearchInstituteForSocialDevelopment,
                  YearFn(a_1_9_6_3))
. organizationalObjective(UnitedNationsResearchInstituteForSocialDevelopment,
                          SocioeconomicResearch)
%{UnitedNationsResearchInstituteForSocialDevelopment
"The 
&%UnitedNationsResearchInstituteForSocialDevelopment conducts research 
into problems of social and economic development.  The Chair of its Board 
of Directors is appointed by the UN Secretary General.  (No country 
members.)"}%
. instance(UnitedNationsSecretariat, InternationalOrganization)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_e_c_r_e_t_a_r_i_a_t_Quot,
                       UnitedNationsSecretariat)
. dateEstablished(UnitedNationsSecretariat,
                  DayFn(a_2_6, MonthFn(June, YearFn(a_1_9_4_5))))
. subOrganization(UnitedNationsSecretariat, UnitedNations)
%{UnitedNationsSecretariat
"The &%UnitedNationsSecretariat is 
the primary administrative body of the &%UnitedNations.  It is headed by 
the United Nations' Secretary General, and constituted by him and his 
staff.  The UN General Assembly appoints the Secretary General for a 
five-year term."}%
. instance(UnitedNationsSecurityCouncil, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_S_e_c_u_r_i_t_y_Space_C_o_u_n_c_i_l_Quot,
                       UnitedNationsSecurityCouncil)
. dateEstablished(UnitedNationsSecurityCouncil,
                  DayFn(a_2_6, MonthFn(June, YearFn(a_1_9_4_5))))
. organizationalObjective(UnitedNationsSecurityCouncil,
                          InternationalPeaceAndSecurity)
. subOrganization(UnitedNationsSecurityCouncil, UnitedNations)
. subOrganization(InternationalCriminalTribunalForTheFormerYugoslavia,
                  UnitedNationsSecurityCouncil)
. subOrganization(InternationalCriminalTribunalForRwanda,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsCompensationCommission,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsDisengagementObserverForce,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsInterimAdministrationMissionInKosovo,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsInterimForceInLebanon,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsIraqKuwaitBoundaryDemarcationCommission,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsIraqKuwaitObservationMission,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsMilitaryObserverGroupInIndiaAndPakistan,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsMissionForTheReferendumInWesternSahara,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsMissionInBosniaAndHerzegovina,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsMissionInEthiopiaAndEritrea,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsMissionInSierraLeone,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsMissionOfObserversInPrevlaka,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsMonitoringAndVerificationCommission,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsObserverMissionInGeorgia,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsOrganizationMissionInTheDemocraticRepublicOfTheCongo,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsPeaceKeepingForceInCyprus,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsTransitionalAdministrationInEastTimor,
                  UnitedNationsSecurityCouncil)
. subOrganization(UnitedNationsTruceSupervisionOrganization,
                  UnitedNationsSecurityCouncil)
. instance(InternationalCriminalTribunalForTheFormerYugoslavia,
           InternationalOrganization)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_r_i_m_i_n_a_l_Space_T_r_i_b_u_n_a_l_Space_f_o_r_Space_t_h_e_Space_F_o_r_m_e_r_Space_Y_u_g_o_s_l_a_v_i_a_Quot,
                       InternationalCriminalTribunalForTheFormerYugoslavia)
. abbreviation(a_Quot_I_C_T_Y_Quot,
               InternationalCriminalTribunalForTheFormerYugoslavia)
. dateEstablished(InternationalCriminalTribunalForTheFormerYugoslavia,
                  DayFn(a_2_5, MonthFn(May, YearFn(a_1_9_9_3))))
. organizationalObjective(InternationalCriminalTribunalForTheFormerYugoslavia,
                          WarCrimesProsecution)
. instance(InternationalCriminalTribunalForRwanda,
           InternationalOrganization)
. conventionalLongName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_C_r_i_m_i_n_a_l_Space_T_r_i_b_u_n_a_l_Space_f_o_r_Space_R_w_a_n_d_a_Quot,
                       InternationalCriminalTribunalForRwanda)
. abbreviation(a_Quot_I_C_T_R_Quot,
               InternationalCriminalTribunalForRwanda)
. organizationalObjective(InternationalCriminalTribunalForRwanda,
                          WarCrimesProsecution)
. dateEstablished(InternationalCriminalTribunalForRwanda,
                  DayFn(a_8, MonthFn(November, YearFn(a_1_9_9_4))))
. instance(UnitedNationsCompensationCommission,
           InternationalOrganization)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_C_o_m_p_e_n_s_a_t_i_o_n_Space_C_o_m_m_i_s_s_i_o_n_Quot,
                       UnitedNationsCompensationCommission)
. abbreviation(a_Quot_U_N_C_C_Quot,
               UnitedNationsCompensationCommission)
. dateEstablished(UnitedNationsCompensationCommission,
                  YearFn(a_1_9_9_1))
. organizationalObjective(UnitedNationsCompensationCommission,
                          CompensationAndReparation)
%{UnitedNationsCompensationCommission
"The 
&%UnitedNationsCompensationCommission was created to process claims and 
pay compensation for losses and damage suffered as a direct result of 
the unlawful invasion and occupation of Kuwait by Iraq."}%
. instance(UnitedNationsInterimAdministrationMissionInKosovo,
           InternationalOrganization)
. instance(UnitedNationsIraqKuwaitBoundaryDemarcationCommission,
           InternationalOrganization)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_I_r_a_q_Minus_K_u_w_a_i_t_Space_B_o_u_n_d_a_r_y_Space_D_e_m_a_r_c_a_t_i_o_n_Space_C_o_m_m_i_s_s_i_o_n_Quot,
                       UnitedNationsIraqKuwaitBoundaryDemarcationCommission)
. dateEstablished(UnitedNationsIraqKuwaitBoundaryDemarcationCommission,
                  YearFn(a_1_9_9_1))
. organizationalObjective(UnitedNationsIraqKuwaitBoundaryDemarcationCommission,
                          BoundaryDetermination)
. instance(UnitedNationsTransitionalAdministrationInEastTimor,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_T_r_a_n_s_i_t_i_o_n_a_l_Space_A_d_m_i_n_i_s_t_r_a_t_i_o_n_Space_i_n_Space_E_a_s_t_Space_T_i_m_o_r_Quot,
                       UnitedNationsTransitionalAdministrationInEastTimor)
. abbreviation(a_Quot_U_N_T_A_E_T_Quot,
               UnitedNationsTransitionalAdministrationInEastTimor)
. dateEstablished(UnitedNationsTransitionalAdministrationInEastTimor,
                  DayFn(a_2_5, MonthFn(October, YearFn(a_1_9_9_9))))
. organizationalObjective(UnitedNationsTransitionalAdministrationInEastTimor,
                          TransitionalAdministration)
. organizationalObjective(UnitedNationsTransitionalAdministrationInEastTimor,
                          HumanitarianAssistance)
. instance(UnitedNationsTruceSupervisionOrganization,
           OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_T_r_u_c_e_Space_S_u_p_e_r_v_i_s_i_o_n_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       UnitedNationsTruceSupervisionOrganization)
. abbreviation(a_Quot_U_N_T_S_O_Quot,
               UnitedNationsTruceSupervisionOrganization)
. dateEstablished(UnitedNationsTruceSupervisionOrganization,
                  MonthFn(June, YearFn(a_1_9_4_8)))
. organizationalObjective(UnitedNationsTruceSupervisionOrganization,
                          ObservationAndMonitoring)
. organizationalObjective(UnitedNationsTruceSupervisionOrganization,
                          PeacekeepingOperation)
. instance(UnitedNationsTrusteeshipCouncil, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_T_r_u_s_t_e_e_s_h_i_p_Space_C_o_u_n_c_i_l_Quot,
                       UnitedNationsTrusteeshipCouncil)
%{UnitedNationsTrusteeshipCouncil
"The 
&%UnitedNationsTrusteeshipCouncil is one of the six major organs of the 
&%UnitedNations, but it is currently inactive (though not dissolved) 
following the transition of the last UN trust territory to an independent 
government."}%
. dateEstablished(UnitedNationsTrusteeshipCouncil,
                  DayFn(a_2_6, MonthFn(June, YearFn(a_1_9_4_5))))
. organizationalObjective(UnitedNationsTrusteeshipCouncil,
                          TransitionalAdministration)
. instance(UnitedNationsUniversity, InternationalOrganization)
. conventionalLongName(a_Quot_U_n_i_t_e_d_Space_N_a_t_i_o_n_s_Space_U_n_i_v_e_r_s_i_t_y_Quot,
                       UnitedNationsUniversity)
. abbreviation(a_Quot_U_N_U_Quot, UnitedNationsUniversity)
. dateEstablished(UnitedNationsUniversity,
                  DayFn(a_3, MonthFn(December, YearFn(a_1_9_7_3))))
%{UnitedNationsUniversity
"The Rector and 24 members of the 
&%UnitedNationsUniversity Council are appointed by the UN Secretary 
General and the Director General of UNESCO."}%
. organizationalObjective(UnitedNationsUniversity,
                          SocioeconomicResearch)
. instance(UniversalPostalUnion, OrganizationOfNations)
. conventionalLongName(a_Quot_U_n_i_v_e_r_s_a_l_Space_P_o_s_t_a_l_Space_U_n_i_o_n_Quot,
                       UniversalPostalUnion)
. abbreviation(a_Quot_U_P_U_Quot, UniversalPostalUnion)
. dateEstablished(UniversalPostalUnion,
                  DayFn(a_9, MonthFn(October, YearFn(a_1_8_7_4))))
%{UniversalPostalUnion
"The &%UniversalPostalUnion became 
affiliated with the &%UnitedNations on November 15, 1947."}%
. organizationalObjective(UniversalPostalUnion,
                          InfrastructureCooperation)
. instance(WarsawPact, OrganizationOfNations)
. conventionalLongName(a_Quot_W_a_r_s_a_w_Space_P_a_c_t_Quot,
                       WarsawPact)
. abbreviation(a_Quot_W_P_Quot, WarsawPact)
. dateEstablished(WarsawPact,
                  DayFn(a_1_4, MonthFn(May, YearFn(a_1_9_5_5))))
. dateDissolved(WarsawPact,
                DayFn(a_1, MonthFn(July, YearFn(a_1_9_9_1))))
. organizationalObjective(WarsawPact, MutualDefensePact)
. instance(WassenaarArrangement, OrganizationOfNations)
. conventionalLongName(a_Quot_W_a_s_s_e_n_a_a_r_Space_A_r_r_a_n_g_e_m_e_n_t_Quot,
                       WassenaarArrangement)
. dateEstablished(WassenaarArrangement,
                  DayFn(a_1_2, MonthFn(July, YearFn(a_1_9_9_6))))
. organizationalObjective(WassenaarArrangement, ArmsControl)
. instance(WestAfricanDevelopmentBank, OrganizationOfNations)
. conventionalLongName(a_Quot_W_e_s_t_Space_A_f_r_i_c_a_n_Space_D_e_v_e_l_o_p_m_e_n_t_Space_B_a_n_k_Quot,
                       WestAfricanDevelopmentBank)
. abbreviation(a_Quot_W_A_D_B_Quot, WestAfricanDevelopmentBank)
. localLongName(a_Quot_B_a_n_q_u_e_Space_O_u_e_s_t_Minus_A_f_r_i_c_a_i_n_e_Space_d_e_Space_D_e_v_e_l_o_p_p_e_m_e_n_t_Quot,
                WestAfricanDevelopmentBank)
. localShortName(a_Quot_B_O_A_D_Quot, WestAfricanDevelopmentBank)
. dateEstablished(WestAfricanDevelopmentBank,
                  DayFn(a_1_4, MonthFn(November, YearFn(a_1_9_7_3))))
. organizationalObjective(WestAfricanDevelopmentBank,
                          EconomicDevelopment)
. organizationalObjective(WestAfricanDevelopmentBank,
                          EconomicIntegration)
. instance(WestAfricanEconomicAndMonetaryUnion,
           OrganizationOfNations)
. conventionalLongName(a_Quot_W_e_s_t_Space_A_f_r_i_c_a_n_Space_E_c_o_n_o_m_i_c_Space_a_n_d_Space_M_o_n_e_t_a_r_y_Space_U_n_i_o_n_Quot,
                       WestAfricanEconomicAndMonetaryUnion)
. abbreviation(a_Quot_W_A_E_M_U_Quot,
               WestAfricanEconomicAndMonetaryUnion)
. localLongName(a_Quot_U_n_i_o_n_Space_E_c_o_n_o_m_i_q_u_e_Space_e_t_Space_M_o_n_e_t_a_i_r_e_Space_O_u_e_s_t_Space_A_f_r_i_c_a_i_n_e_Quot,
                WestAfricanEconomicAndMonetaryUnion)
. localShortName(a_Quot_W_A_E_M_U_Quot,
                 WestAfricanEconomicAndMonetaryUnion)
. dateEstablished(WestAfricanEconomicAndMonetaryUnion,
                  DayFn(a_1, MonthFn(August, YearFn(a_1_9_9_4))))
. organizationalObjective(WestAfricanEconomicAndMonetaryUnion,
                          EconomicIntegration)
. instance(WesternEuropeanUnion, OrganizationOfNations)
. conventionalLongName(a_Quot_W_e_s_t_e_r_n_Space_E_u_r_o_p_e_a_n_Space_U_n_i_o_n_Quot,
                       WesternEuropeanUnion)
. abbreviation(a_Quot_W_E_U_Quot, WesternEuropeanUnion)
. dateEstablished(WesternEuropeanUnion,
                  DayFn(a_2_3, MonthFn(October, YearFn(a_1_9_5_4))))
. organizationalObjective(WesternEuropeanUnion, MutualDefensePact)
. organizationalObjective(WesternEuropeanUnion,
                          PoliticalIntegration)
. instance(WorldBankGroup, OrganizationOfNations)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_B_a_n_k_Space_G_r_o_u_p_Quot,
                       WorldBankGroup)
. subOrganization(InternationalBankForReconstructionAndDevelopment,
                  WorldBankGroup)
. subOrganization(InternationalDevelopmentAssociation,
                  WorldBankGroup)
. subOrganization(InternationalFinanceCorporation, WorldBankGroup)
. instance(WorldConfederationOfLabor, OrganizationOfNations)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_C_o_n_f_e_d_e_r_a_t_i_o_n_Space_o_f_Space_L_a_b_o_r_Quot,
                       WorldConfederationOfLabor)
. abbreviation(a_Quot_W_C_L_Quot, WorldConfederationOfLabor)
. dateEstablished(WorldConfederationOfLabor,
                  DayFn(a_1_9, MonthFn(June, YearFn(a_1_9_2_0))))
. formerName(a_Quot_I_n_t_e_r_n_a_t_i_o_n_a_l_Space_F_e_d_e_r_a_t_i_o_n_Space_o_f_Space_C_h_r_i_s_t_i_a_n_Space_T_r_a_d_e_Space_U_n_i_o_n_s_Quot,
             WorldConfederationOfLabor)
. formerName(a_Quot_I_F_C_T_U_Quot, WorldConfederationOfLabor)
. organizationalObjective(WorldConfederationOfLabor,
                          PromoteTradeUnionism)
%{WorldConfederationOfLabor
"The &%WorldConfederationOfLabor 
was previously named the International Federation of Christian Trade 
Unions.  It was renamed on October 4, 1968."}%
. instance(WorldFederationOfTradeUnions, OrganizationOfNations)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_F_e_d_e_r_a_t_i_o_n_Space_o_f_Space_T_r_a_d_e_Space_U_n_i_o_n_s_Quot,
                       WorldFederationOfTradeUnions)
. abbreviation(a_Quot_W_F_T_U_Quot, WorldFederationOfTradeUnions)
. dateEstablished(WorldFederationOfTradeUnions,
                  DayFn(a_3, MonthFn(October, YearFn(a_1_9_4_5))))
. organizationalObjective(WorldFederationOfTradeUnions,
                          PromoteTradeUnionism)
. instance(WorldFoodProgram, OrganizationOfNations)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_F_o_o_d_Space_P_r_o_g_r_a_m_Quot,
                       WorldFoodProgram)
. abbreviation(a_Quot_W_F_P_Quot, WorldFoodProgram)
. dateEstablished(WorldFoodProgram,
                  DayFn(a_2_4, MonthFn(November, YearFn(a_1_9_6_1))))
. organizationalObjective(WorldFoodProgram, FoodAid)
. instance(WorldHealthOrganization, OrganizationOfNations)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_H_e_a_l_t_h_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       WorldHealthOrganization)
. abbreviation(a_Quot_W_H_O_Quot, WorldHealthOrganization)
. dateEstablished(WorldHealthOrganization,
                  DayFn(a_2_2, MonthFn(July, YearFn(a_1_9_4_6))))
. organizationalObjective(WorldHealthOrganization,
                          PublicHealthConcern)
. instance(WorldIntellectualPropertyOrganization,
           OrganizationOfNations)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_I_n_t_e_l_l_e_c_t_u_a_l_Space_P_r_o_p_e_r_t_y_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       WorldIntellectualPropertyOrganization)
. abbreviation(a_Quot_W_I_P_O_Quot,
               WorldIntellectualPropertyOrganization)
. dateEstablished(WorldIntellectualPropertyOrganization,
                  DayFn(a_1_4, MonthFn(July, YearFn(a_1_9_6_7))))
. organizationalObjective(WorldIntellectualPropertyOrganization,
                          IntellectualPropertyProtection)
. instance(WorldMeteorologicalOrganization, OrganizationOfNations)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_M_e_t_e_o_r_o_l_o_g_i_c_a_l_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       WorldMeteorologicalOrganization)
. abbreviation(a_Quot_W_M_O_Quot, WorldMeteorologicalOrganization)
. dateEstablished(DayFn(a_1_1,
                        MonthFn(October, YearFn(a_1_9_4_7))))
. organizationalObjective(WorldMeteorologicalOrganization,
                          ScientificCooperation)
. instance(WorldTourismOrganization, OrganizationOfNations)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_T_o_u_r_i_s_m_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       WorldTourismOrganization)
. abbreviation(a_Quot_W_T_o_O_Quot, WorldTourismOrganization)
. dateEstablished(WorldTourismOrganization,
                  DayFn(a_2, MonthFn(January, YearFn(a_1_9_7_5))))
. organizationalObjective(WorldTourismOrganization,
                          PromotionOfTourism)
. instance(WorldTradeOrganization, OrganizationOfNations)
. conventionalLongName(a_Quot_W_o_r_l_d_Space_T_r_a_d_e_Space_O_r_g_a_n_i_z_a_t_i_o_n_Quot,
                       WorldTradeOrganization)
. abbreviation(a_Quot_W_T_r_O_Quot, WorldTradeOrganization)
. dateEstablished(WorldTradeOrganization,
                  DayFn(a_1_5, MonthFn(April, YearFn(a_1_9_9_4))))
%{WorldTradeOrganization
"The &%WorldTradeOrganization 
succeeded the General Agreement on Tariff and Trade (GATT)."}%
. organizationalObjective(WorldTradeOrganization,
                          PromotionOfFreeTrade)
. instance(ZanggerCommittee, OrganizationOfNations)
. conventionalLongName(a_Quot_Z_a_n_g_g_e_r_Space_C_o_m_m_i_t_t_e_e_Quot,
                       ZanggerCommittee)
. abbreviation(a_Quot_Z_C_Quot, ZanggerCommittee)
%{ZanggerCommittee
"The &%ZanggerCommittee was established 
during the 1970s."}%
. organizationalObjective(ZanggerCommittee, NuclearExportControls)
. subclass(ForeignServicePosition, Position)
%{ForeignServicePosition
"&%ForeignServicePosition is the 
subclass of &%Positions that belong to foreign service personnel working 
for a national government or international organization."}%
. instance(DiplomaticAgent, Position)
%{DiplomaticAgent
"&%DiplomaticAgent is a generic &%Attribute 
of persons charged to represent one national government to another nation 
or international organization.  This includes any &%Ambassador or head of 
a diplomatic mission.  Individuals with this attribute may also hold a 
career diplomatic position (see &%ForeignServicePosition)."}%
. instance(vROLE, ForeignServicePosition) =>
      subAttribute(vROLE, DiplomaticAgent)
. instance(Ambassador, ForeignServicePosition)
. subAttribute(Ambassador, DiplomaticAgent)
%{Ambassador
"&%Ambassador is the &%Attribute of the most 
highly-ranked foreign service representatives from the government of one 
country to another."}%
. instance(ConsulGeneral, ForeignServicePosition)
. subAttribute(ConsulGeneral, DiplomaticAgent)
%{ConsulGeneral
"&%ConsulGeneral is the &%Attribute of 
foreign service officers representing their governments abroad as 
Consuls General."}%
. instance(Consul, ForeignServicePosition)
. subAttribute(Consul, DiplomaticAgent)
%{Consul
"&%Consul is the &%Attribute of foreign service 
officers representing their governments abroad as Consuls."}%
. instance(ChargeDAffaires, ForeignServicePosition)
. subAttribute(ChargeDAffaires, DiplomaticAgent)
%{ChargeDAffaires
"&%ChargeDAffaires is the &%Attribute of 
foreign servicer officers representing their governments abroad as 
Charges d'Affaires."}%
. subAttribute(PermanentChargeDAffaires, ChargeDAffaires)
. subAttribute(ActingConsulGeneral, ConsulGeneral)
. subAttribute(PrincipalOfficer, ForeignServicePosition)
. instance(chiefOfDiplomaticMission, QuaternaryPredicate)
. domain(chiefOfDiplomaticMission, a_1, Agent)
. domain(chiefOfDiplomaticMission, a_2, Human)
. domain(chiefOfDiplomaticMission, a_3, Position)
. domain(chiefOfDiplomaticMission, a_4, Agent)
. subrelation(chiefOfDiplomaticMission,
              diplomaticRepresentativeInRole)
%{chiefOfDiplomaticMission
"(&%chiefOfDiplomaticMission ?AGENT1 ?PERSON ?RANK ?AGENT2) means that 
the chief diplomatic representative sent by the &%Agent ?AGENT1 to the 
&%Agent ?AGENT2 is ?PERSON, whose official position is ?RANK."}%
. instance(diplomaticRepresentativeInRole, QuaternaryPredicate)
. domain(diplomaticRepresentativeInRole, a_1, Agent)
. domain(diplomaticRepresentativeInRole, a_2, Human)
. domain(diplomaticRepresentativeInRole, a_3, Position)
. domain(diplomaticRepresentativeInRole, a_4, Agent)
%{diplomaticRepresentativeInRole
"(&%diplomaticRepresentativeInRole ?AGENT1 ?PERSON ?RANK ?AGENT2) means 
that the &%Agent ?AGENT1 sends the individual ?PERSON with the 
&%Position ?RANK as its representative to the &%Agent ?AGENT2.  
Note: it is possible for ?PERSON to be diplomatically accredited to more 
than one area.  For example, currently the United States Ambassador to 
Papua New Guinea is also accredited to Vanuatu, and there is no embassy 
in Vanuatu."}%
. diplomaticRepresentativeInRole(vAGENT1, vPERSON, vPOSITION,
                                 vAGENT2)
  /\ instance(vAGENT1, Nation) =>
      exists vORG: U
          . instance(vORG, DiplomaticOrganization)
            /\ subOrganization(vORG, GovernmentFn(vAGENT1))
            /\ occupiesPosition(vPERSON, vPOSITION, vORG)
. diplomaticRepresentativeInRole(vAGENT1, vPERSON, vPOSITION,
                                 vAGENT2)
  /\ instance(vAGENT1, Organization) =>
      occupiesPosition(vPERSON, vPOSITION, vORG)
. diplomaticRepresentativeInRole(vAGENT1, vPERSON, vPOSITION,
                                 vAGENT2)
  /\ instance(vAGENT1, GeopoliticalArea) =>
      employs(GovernmentFn(vAGENT1), vPERSON)
. diplomaticRepresentativeInRole(vAGENT1, vPERSON, vPOSITION,
                                 vAGENT2)
  /\ instance(vAGENT1, Organization) =>
      employs(vAGENT1, vPERSON)
. diplomaticRepresentativeInRole(vAGENT1, vPERSON, vPOSITION,
                                 vAGENT2)
  /\ instance(vAGENT2, GeopoliticalArea) =>
      agentOperatesInArea(vPERSON, vAGENT2)
. diplomaticRepresentativeInRole(vAGENT1, vPERSON, vPOSITION,
                                 vAGENT2)
  /\ instance(vAGENT1, Organization)
  /\ instance(vAGENT2, GeopoliticalArea) =>
      agentOperatesInArea(vAGENT1, vAGENT2)
. diplomaticRepresentativeInRole(vAGENT1, vPERSON, vPOSITION,
                                 vAGENT2)
  /\ instance(vAGENT1, Nation)
  /\ instance(vORG, DiplomaticOrganization)
  /\ subOrganization(vORG, GovernmentFn(vAGENT1))
  /\ occupiesPosition(vPERSON, vPOSITION, vORG)
  /\ instance(vAGENT2, GeopoliticalArea) =>
      agentOperatesInArea(vORG, vAGENT2)
. instance(diplomaticRepresentationType, TernaryPredicate)
. domain(diplomaticRepresentationType, a_1, Agent)
. domain(diplomaticRepresentationType, a_2, Position)
. domain(diplomaticRepresentationType, a_3, Agent)
%{diplomaticRepresentationType
"(&%diplomaticRepresentationType ?AGENT1 ?RANK ?AGENT2) means that the 
&%Agent ?AGENT1 sends a representative with the &%Position ?RANK 
to the &%Agent ?AGENT2."}%
. diplomaticRepresentativeInRole(vAGENT1, vPERSON, vPOSITION,
                                 vAGENT2) =>
      diplomaticRepresentationType(vAGENT1, vPOSITION, vAGENT2)
. diplomaticRepresentationType(vAGENT1, vPOSITION, vAGENT2)
  /\ geopoliticalSubdivision(vAGENT2, vAGENT3)
  /\ instance(vAGENT3, Nation) =>
      diplomaticRepresentationType(vAGENT1, vPOSITION, vAGENT3)
. instance(diplomaticRelations, BinaryPredicate)
. instance(diplomaticRelations, SymmetricRelation)
. instance(diplomaticRelations, IrreflexiveRelation)
. domain(diplomaticRelations, a_1, GeopoliticalArea)
. domain(diplomaticRelations, a_2, GeopoliticalArea)
%{diplomaticRelations
"(&%diplomaticRelations ?COUNTRY1 ?COUNTRY2) means that there are official 
diplomatic relations between the two &%Nations ?COUNTRY1 and ?COUNTRY2."}%
. diplomaticRepresentationType(vCOUNTRY1, vROLE, vCOUNTRY2) =>
      diplomaticRelations(vCOUNTRY1, vCOUNTRY2)
. diplomaticRelations(vCOUNTRY1, vCOUNTRY2) =>
      exists vROLE: U
          . instance(vROLE, ForeignServicePosition)
            /\ subAttribute(vROLE, DiplomaticAgent)
            /\ diplomaticRepresentationType(vCOUNTRY1, vROLE, vCOUNTRY2)
. diplomaticRelations(vCOUNTRY1, vCOUNTRY2) =>
      exists vROLE: U
          . instance(vROLE, ForeignServicePosition)
            /\ subAttribute(vROLE, DiplomaticAgent)
            /\ diplomaticRepresentationType(vCOUNTRY2, vROLE, vCOUNTRY1)
. diplomaticRelations(vCOUNTRY1, vCOUNTRY2) =>
      exists vROLE1: U; vROLE2: U
          . instance(vROLE1, Position)
            /\ instance(vROLE2, Position)
            /\ diplomaticRepresentationType(vCOUNTRY1, vROLE1, vCOUNTRY2)
            /\ diplomaticRepresentationType(vCOUNTRY2, vROLE2, vCOUNTRY1)
. diplomaticRepresentationType(vCOUNTRY1, vROLE, vCOUNTRY2)
  /\ subAttribute(vROLE, DiplomaticAgent) =>
      exists vPERSON: U
          . instance(vPERSON, Human)
            /\ citizen(vPERSON, vCOUNTRY1)
            /\ diplomaticRepresentativeInRole(vCOUNTRY1, vPERSON, vROLE,
                                              vCOUNTRY2)
. instance(representativeAgentToAgent, TernaryPredicate)
. domain(representativeAgentToAgent, a_1, Agent)
. domain(representativeAgentToAgent, a_2, Agent)
. domain(representativeAgentToAgent, a_3, Agent)
%{representativeAgentToAgent
"(&$representativeAgentToAgent ?SENDER ?REP ?RECEIVER) means that 
the &%Agent ?SENDER has the &%Agent ?REP as its representative 
to the &%Agent ?RECEIVER.  ?REP works for ?SENDER and is not assumed 
to be an impartial mediator."}%
. diplomaticRepresentativeInRole(vCOUNTRY1, vPERSON, vROLE,
                                 vCOUNTRY2) =>
      representativeAgentToAgent(vCOUNTRY1, vPERSON, vCOUNTRY2)
. representativeAgentToAgent(vSENDER, vREP, vRECEIVER)
  /\ instance(vSENDER, Organization)
  /\ instance(vREP, CognitiveAgent) =>
      employs(vSENDER, vREP)
. representativeAgentToAgent(vSENDER, vREP, vRECEIVER)
  /\ instance(vSENDER, Nation)
  /\ instance(vREP, CognitiveAgent) =>
      employs(GovernmentFn(vSENDER), vREP)
. instance(vSENDER, Nation)
  /\ instance(vRECEIVER, Nation)
  /\ instance(vPERSON, Human)
  /\ attribute(vPERSON, vROLE)
  /\ subAttribute(vROLE, DiplomaticAgent)
  /\ representativeAgentToAgent(vSENDER, vPERSON, vRECEIVER) =>
      diplomaticRepresentationType(vSENDER, vROLE, vRECEIVER)
. instance(diplomaticOrganizationType, TernaryPredicate)
. domain(diplomaticOrganizationType, a_1, Agent)
. domainSubclass(diplomaticOrganizationType, a_2, Organization)
. domain(diplomaticOrganizationType, a_3, Agent)
%{diplomaticOrganizationType
"(&%diplomaticOrganizationType ?AGENT1 ?ORG ?AGENT2) means that the 
&%Agent ?AGENT1 has a diplomatic organization of the type ?ORG 
in &%Agent ?AGENT2.  For example, 
(&%diplomaticOrganizationType &%UnitedStates &%Embassy &%France), or 
(&%diplomaticOrganizationType &%UnitedStates &%ConsulateGeneral 
&%ShanghaiChina)."}%
. diplomaticOrganizationType(vAGENT1, ConsulateGeneral, vAGENT2) =>
      diplomaticRepresentationType(vAGENT1, ConsulGeneral, vAGENT2)
. diplomaticOrganizationType(vAGENT1, vTYPE, vAGENT2)
  /\ instance(vAGENT1, Nation)
  /\ instance(vAGENT2, GeopoliticalArea) =>
      exists vORG: U
          . instance(vORG, vTYPE)
            /\ located(vORG, vAGENT2)
            /\ subOrganization(vORG, GovernmentFn(vAGENT1))
. diplomaticOrganizationType(vAGENT1, vTYPE, vAGENT2)
  /\ instance(vAGENT1, Organization)
  /\ instance(vAGENT2, GeopoliticalArea) =>
      exists vORG: U
          . instance(vORG, vTYPE)
            /\ located(vORG, vAGENT2)
            /\ subOrganization(vORG, vAGENT1)
. diplomaticOrganizationType(vAGENT1, vTYPE, vAGENT2)
  /\ geopoliticalSubdivision(vAGENT2, vAGENT3)
  /\ instance(vAGENT3, Nation) =>
      diplomaticOrganizationType(vAGENT1, vTYPE, vAGENT3)
. diplomaticRepresentationType(vAGENT1, ConsulGeneral, vAGENT2)
  /\ instance(vAREA2, City) =>
      diplomaticOrganizationType(vAGENT1, ConsulateGeneral, vAGENT2)
. diplomaticRepresentativeInRole(vAGENT1, vPERSON, Ambassador,
                                 vAGENT2) =>
      diplomaticOrganizationType(vAGENT1, Embassy, vAGENT2)
. diplomaticRepresentationType(vAGENT1, Ambassador, vAGENT2) =>
      diplomaticOrganizationType(vAGENT1, Embassy, vAGENT2)
. diplomaticOrganizationType(vAGENT1, Embassy, vAGENT2) =>
      diplomaticRepresentationType(vAGENT1, Ambassador, vAGENT2)
. subclass(DiplomaticOrganization, GovernmentOrganization)
%{DiplomaticOrganization
"&%DiplomaticOrganization is the 
general class of government organizations that represent one nation in 
official government business with other nations."}%
. subclass(Embassy, DiplomaticOrganization)
%{Embassy
"&%Embassy is the class of top-ranked 
&%GovernmentOrganizations that represent one nation within the boundaries 
of another.  Not all nations have embassy-level representation from other 
nations."}%
. subclass(ConsulateGeneral, DiplomaticOrganization)
%{ConsulateGeneral
"&%ConsulateGeneral is a class of 
government organizations that represent one nation within the territory of 
a second nation.  Consulates General offer a wider variety of services 
than do &%Consulates."}%
. subclass(Consulate, DiplomaticOrganization)
%{Consulate
"&%Consulate is a class of government 
organizations that represent one nation within the territory of a second 
nation.  Consulates offer services for citizens of their own country 
abroad, as well as for citizens of the host country who have dealings 
with the country represented by the consulate general.  See also 
&%ConsulateGeneral."}%
. instance(AmericanInstituteInTaiwan, Organization)
. relatedInternalConcept(AmericanInstituteInTaiwan,
                         DiplomaticOrganization)
%{AmericanInstituteInTaiwan
"The &%AmericanInstituteInTaiwan 
is a private, nonprofit corporation under United States government 
oversight that conducts relations with &%Taiwan."}%
. instance(chanceryAddressInArea, TernaryPredicate)
. domain(chanceryAddressInArea, a_1, GeopoliticalArea)
. domain(chanceryAddressInArea, a_2, SymbolicString)
. domain(chanceryAddressInArea, a_3, GeopoliticalArea)
%{chanceryAddressInArea
"(&%chanceryAddressInArea ?AREA1 
?ADDRESS ?AREA2) means that the address of the main foreign service 
organization of the &%GeopoliticalArea ?AREA1 for ?AREA2 is the 
&%SymbolicString ?ADDRESS."}%
. instance(chanceryMailingAddressInArea, TernaryPredicate)
. domain(chanceryMailingAddressInArea, a_1, GeopoliticalArea)
. domain(chanceryMailingAddressInArea, a_2, SymbolicString)
. domain(chanceryMailingAddressInArea, a_3, GeopoliticalArea)
%{chanceryMailingAddressInArea
"(&%chanceryMailingAddressInArea ?AREA1 ?ADDRESS ?AREA2) means that the 
mailing address of the main foreign service organization of the 
&%GeopoliticalArea ?AREA1 located in ?AREA2 is the &%SymbolicString 
?ADDRESS."}%
. instance(chanceryTelephoneNumberInArea, TernaryPredicate)
. domain(chanceryTelephoneNumberInArea, a_1, GeopoliticalArea)
. domain(chanceryTelephoneNumberInArea, a_2, SymbolicString)
. domain(chanceryTelephoneNumberInArea, a_3, GeopoliticalArea)
%{"(&%chanceryTelephoneNumberInArea ?AREA1 ?TELEPHONE ?AREA2) means that the 
telephone number of the main diplomatic office of the &%GeopoliticalArea 
?AREA1 located in ?AREA2 is ?TELEPHONE."}%
. instance(chanceryFAXNumberInArea, TernaryPredicate)
. domain(chanceryFAXNumberInArea, a_1, GeopoliticalArea)
. domain(chanceryFAXNumberInArea, a_2, SymbolicString)
. domain(chanceryFAXNumberInArea, a_3, GeopoliticalArea)
%{"(&%chanceryFAXNumberInArea ?AREA1 
?FAX ?AREA2) means that the FAX number of the main diplomatic office of 
the &%GeopoliticalArea ?AREA1 located in ?AREA2 is ?FAX."}%
. instance(flagDescription, BinaryPredicate)
. domain(flagDescription, a_1, GeopoliticalArea)
. domain(flagDescription, a_2, SymbolicString)
%{flagDescription
"(&%flagDescription ?AREA ?DESCRIPTION) 
means that the &%SymbolicString ?DESCRIPTION is a verbal description of 
the flag of the &%GeopoliticalArea ?AREA."}%
. instance(flagImage, BinaryPredicate)
. domain(flagImage, a_1, GeopoliticalArea)
. domain(flagImage, a_2, SymbolicString)
%{flagImage
"(&%flagImage ?AREA ?POINTER) means that an image 
of the flag of the &%GeopoliticalArea ?AREA is found at the location given 
in the &%SymbolicString ?POINTER."}%
